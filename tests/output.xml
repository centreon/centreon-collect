<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0 (Python 3.8.17 on linux)" generated="2024-02-12T09:54:20.159162" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="/root/centreon-collect/tests">
<suite id="s1-s1" name="Broker-Engine" source="/root/centreon-collect/tests/broker-engine">
<suite id="s1-s1-s1" name="Services" source="/root/centreon-collect/tests/broker-engine/services.robot">
<kw name="Clean Before Suite" owner="resources" type="SETUP">
<kw name="Clear Db" owner="Common">
<arg>resources</arg>
<status status="PASS" start="2024-02-12T09:54:20.527140" elapsed="0.015206"/>
</kw>
<kw name="Clear Db" owner="Common">
<arg>hosts</arg>
<status status="PASS" start="2024-02-12T09:54:20.542712" elapsed="0.011338"/>
</kw>
<kw name="Clear Db" owner="Common">
<arg>services</arg>
<status status="PASS" start="2024-02-12T09:54:20.554391" elapsed="0.001684"/>
</kw>
<kw name="Clear Db" owner="Common">
<arg>tags</arg>
<status status="PASS" start="2024-02-12T09:54:20.556383" elapsed="0.002360"/>
</kw>
<kw name="Stop Processes" owner="resources">
<kw name="Terminate All Processes" owner="Process">
<arg>kill=True</arg>
<doc>Terminates all still running processes started by this library.</doc>
<status status="PASS" start="2024-02-12T09:54:20.561471" elapsed="0.000319"/>
</kw>
<kw name="Kill Broker" owner="Common">
<status status="PASS" start="2024-02-12T09:54:20.561988" elapsed="0.039754"/>
</kw>
<kw name="Kill Engine" owner="Common">
<status status="PASS" start="2024-02-12T09:54:20.602602" elapsed="0.015616"/>
</kw>
<status status="PASS" start="2024-02-12T09:54:20.559382" elapsed="0.059374"/>
</kw>
<kw name="Clear Engine Logs" owner="resources">
<kw name="Remove Directory" owner="OperatingSystem">
<msg time="2024-02-12T09:54:20.621052" level="INFO" html="true">Removed directory '&lt;a href="file:///tmp/var/log/centreon-engine"&gt;/tmp/var/log/centreon-engine&lt;/a&gt;'.</msg>
<arg>${ENGINE_LOG}</arg>
<arg>Recursive=True</arg>
<doc>Removes the directory pointed to by the given ``path``.</doc>
<status status="PASS" start="2024-02-12T09:54:20.620163" elapsed="0.001001"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-02-12T09:54:20.621912" level="INFO" html="true">Created directory '&lt;a href="file:///tmp/var/log/centreon-engine"&gt;/tmp/var/log/centreon-engine&lt;/a&gt;'.</msg>
<arg>${ENGINE_LOG}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-02-12T09:54:20.621578" elapsed="0.000415"/>
</kw>
<status status="PASS" start="2024-02-12T09:54:20.619462" elapsed="0.002612"/>
</kw>
<kw name="Clear Broker Logs" owner="resources">
<kw name="Remove Directory" owner="OperatingSystem">
<msg time="2024-02-12T09:54:20.623063" level="INFO" html="true">Removed directory '&lt;a href="file:///tmp/var/log/centreon-broker"&gt;/tmp/var/log/centreon-broker&lt;/a&gt;'.</msg>
<arg>${BROKER_LOG}</arg>
<arg>Recursive=True</arg>
<doc>Removes the directory pointed to by the given ``path``.</doc>
<status status="PASS" start="2024-02-12T09:54:20.622616" elapsed="0.000527"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-02-12T09:54:20.623621" level="INFO" html="true">Created directory '&lt;a href="file:///tmp/var/log/centreon-broker"&gt;/tmp/var/log/centreon-broker&lt;/a&gt;'.</msg>
<arg>${BROKER_LOG}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-02-12T09:54:20.623359" elapsed="0.000338"/>
</kw>
<status status="PASS" start="2024-02-12T09:54:20.622317" elapsed="0.001455"/>
</kw>
<status status="PASS" start="2024-02-12T09:54:20.525411" elapsed="0.098428"/>
</kw>
<test id="s1-s1-s1-t1" name="Test_Xray" line="21">
<kw name="Stop Processes" owner="resources" type="SETUP">
<kw name="Terminate All Processes" owner="Process">
<arg>kill=True</arg>
<doc>Terminates all still running processes started by this library.</doc>
<status status="PASS" start="2024-02-12T09:54:20.626095" elapsed="0.000283"/>
</kw>
<kw name="Kill Broker" owner="Common">
<status status="PASS" start="2024-02-12T09:54:20.626558" elapsed="0.034881"/>
</kw>
<kw name="Kill Engine" owner="Common">
<status status="PASS" start="2024-02-12T09:54:20.662180" elapsed="0.016167"/>
</kw>
<status status="PASS" start="2024-02-12T09:54:20.625625" elapsed="0.053333"/>
</kw>
<kw name="Config Engine" owner="Engine">
<arg>${1}</arg>
<arg>${1}</arg>
<arg>${25}</arg>
<status status="PASS" start="2024-02-12T09:54:20.680086" elapsed="0.006299"/>
</kw>
<kw name="Config Broker" owner="Broker">
<arg>rrd</arg>
<status status="PASS" start="2024-02-12T09:54:20.686869" elapsed="0.000616"/>
</kw>
<kw name="Config Broker" owner="Broker">
<arg>central</arg>
<status status="PASS" start="2024-02-12T09:54:20.687821" elapsed="0.000479"/>
</kw>
<kw name="Config Broker" owner="Broker">
<arg>module</arg>
<arg>${1}</arg>
<status status="PASS" start="2024-02-12T09:54:20.688594" elapsed="0.001061"/>
</kw>
<kw name="Config BBDO3" owner="resources">
<kw name="Config Broker Sql Output" owner="Broker">
<arg>central</arg>
<arg>unified_sql</arg>
<status status="PASS" start="2024-02-12T09:54:20.690893" elapsed="0.001068"/>
</kw>
<kw name="Broker Config Add Item" owner="Broker">
<arg>rrd</arg>
<arg>bbdo_version</arg>
<arg>${version}</arg>
<status status="PASS" start="2024-02-12T09:54:20.692170" elapsed="0.000715"/>
</kw>
<kw name="Broker Config Add Item" owner="Broker">
<arg>central</arg>
<arg>bbdo_version</arg>
<arg>${version}</arg>
<status status="PASS" start="2024-02-12T09:54:20.693183" elapsed="0.000573"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2024-02-12T09:54:20.694685" level="INFO">${mod} = module0</msg>
<var>${mod}</var>
<arg>SEPARATOR=</arg>
<arg>module</arg>
<arg>${i}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2024-02-12T09:54:20.694400" elapsed="0.000319"/>
</kw>
<kw name="Broker Config Add Item" owner="Broker">
<arg>${mod}</arg>
<arg>bbdo_version</arg>
<arg>${version}</arg>
<status status="PASS" start="2024-02-12T09:54:20.694875" elapsed="0.001158"/>
</kw>
<var name="${i}">0</var>
<status status="PASS" start="2024-02-12T09:54:20.694213" elapsed="0.001886"/>
</iter>
<var>${i}</var>
<value>${nbEngine}</value>
<status status="PASS" start="2024-02-12T09:54:20.693905" elapsed="0.002240"/>
</for>
<arg>1</arg>
<status status="PASS" start="2024-02-12T09:54:20.690156" elapsed="0.006073"/>
</kw>
<kw name="Broker Config Log" owner="Broker">
<arg>central</arg>
<arg>sql</arg>
<arg>debug</arg>
<status status="PASS" start="2024-02-12T09:54:20.696532" elapsed="0.000522"/>
</kw>
<kw name="Broker Config Log" owner="Broker">
<arg>module0</arg>
<arg>neb</arg>
<arg>trace</arg>
<status status="PASS" start="2024-02-12T09:54:20.697374" elapsed="0.000539"/>
</kw>
<kw name="Config Broker Sql Output" owner="Broker">
<arg>central</arg>
<arg>unified_sql</arg>
<status status="PASS" start="2024-02-12T09:54:20.698159" elapsed="0.000530"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2024-02-12T09:54:20.699307" level="INFO">${start} = 2024-02-12 09:54:20.699</msg>
<var>${start}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2024-02-12T09:54:20.699001" elapsed="0.000343"/>
</kw>
<kw name="Start Broker" owner="resources">
<kw name="Start Process" owner="Process">
<msg time="2024-02-12T09:54:20.700550" level="INFO">Starting process:
/usr/sbin/cbd /tmp/etc/centreon-broker/central-broker.json</msg>
<arg>/usr/sbin/cbd</arg>
<arg>${EtcRoot}/centreon-broker/central-broker.json</arg>
<arg>alias=b1</arg>
<doc>Starts a new process on background.</doc>
<status status="PASS" start="2024-02-12T09:54:20.700179" elapsed="0.005406"/>
</kw>
<if>
<branch type="IF" condition="not ${only_central}">
<kw name="Start Process" owner="Process">
<msg time="2024-02-12T09:54:20.708287" level="INFO">Starting process:
/usr/sbin/cbd /tmp/etc/centreon-broker/central-rrd.json</msg>
<arg>/usr/sbin/cbd</arg>
<arg>${EtcRoot}/centreon-broker/central-rrd.json</arg>
<arg>alias=b2</arg>
<doc>Starts a new process on background.</doc>
<status status="PASS" start="2024-02-12T09:54:20.707464" elapsed="0.010790"/>
</kw>
<status status="PASS" start="2024-02-12T09:54:20.706369" elapsed="0.012400"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:20.706226" elapsed="0.012652"/>
</if>
<status status="PASS" start="2024-02-12T09:54:20.699757" elapsed="0.019371"/>
</kw>
<kw name="Start Engine" owner="resources">
<kw name="Get Engines Count" owner="Engine">
<msg time="2024-02-12T09:54:20.722318" level="INFO">${count} = 1</msg>
<var>${count}</var>
<status status="PASS" start="2024-02-12T09:54:20.721860" elapsed="0.000502"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2024-02-12T09:54:20.723486" level="INFO">${alias} = e0</msg>
<var>${alias}</var>
<arg>SEPARATOR=</arg>
<arg>e</arg>
<arg>${idx}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2024-02-12T09:54:20.723145" elapsed="0.000383"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2024-02-12T09:54:20.723998" level="INFO">${conf} = /tmp/etc/centreon-engine/config0/centengine.cfg</msg>
<var>${conf}</var>
<arg>SEPARATOR=</arg>
<arg>${EtcRoot}</arg>
<arg>/centreon-engine/config</arg>
<arg>${idx}</arg>
<arg>/centengine.cfg</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2024-02-12T09:54:20.723719" elapsed="0.000322"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2024-02-12T09:54:20.724585" level="INFO">${log} = /tmp/var/log/centreon-engine/config0</msg>
<var>${log}</var>
<arg>SEPARATOR=</arg>
<arg>${VarRoot}</arg>
<arg>/log/centreon-engine/config</arg>
<arg>${idx}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2024-02-12T09:54:20.724231" elapsed="0.000398"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2024-02-12T09:54:20.725226" level="INFO">${lib} = /tmp/var/lib/centreon-engine/config0</msg>
<var>${lib}</var>
<arg>SEPARATOR=</arg>
<arg>${VarRoot}</arg>
<arg>/lib/centreon-engine/config</arg>
<arg>${idx}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2024-02-12T09:54:20.724874" elapsed="0.000406"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-02-12T09:54:20.725972" level="INFO" html="true">Created directory '&lt;a href="file:///tmp/var/log/centreon-engine/config0"&gt;/tmp/var/log/centreon-engine/config0&lt;/a&gt;'.</msg>
<arg>${log}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-02-12T09:54:20.725524" elapsed="0.000561"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-02-12T09:54:20.726594" level="INFO" html="true">Directory '&lt;a href="file:///tmp/var/lib/centreon-engine/config0"&gt;/tmp/var/lib/centreon-engine/config0&lt;/a&gt;' already exists.</msg>
<arg>${lib}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-02-12T09:54:20.726322" elapsed="0.000356"/>
</kw>
<try>
<branch type="TRY">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-02-12T09:54:20.727716" level="FAIL">Path '/tmp/var/lib/centreon-engine/config0/rw/centengine.cmd' is not a file.</msg>
<arg>${lib}/rw/centengine.cmd</arg>
<doc>Removes a file with the given path.</doc>
<status status="FAIL" start="2024-02-12T09:54:20.727110" elapsed="0.001014">Path '/tmp/var/lib/centreon-engine/config0/rw/centengine.cmd' is not a file.</status>
</kw>
<status status="FAIL" start="2024-02-12T09:54:20.726903" elapsed="0.001490">Path '/tmp/var/lib/centreon-engine/config0/rw/centengine.cmd' is not a file.</status>
</branch>
<branch type="EXCEPT">
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-12T09:54:20.729614" level="INFO">can't remove /tmp/var/lib/centreon-engine/config0/rw/centengine.cmd don't worry</msg>
<arg>can't remove ${lib}/rw/centengine.cmd don't worry</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-12T09:54:20.729121" elapsed="0.000707"/>
</kw>
<status status="PASS" start="2024-02-12T09:54:20.728768" elapsed="0.001130"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:20.726797" elapsed="0.003172"/>
</try>
<kw name="Start Process" owner="Process">
<msg time="2024-02-12T09:54:20.730672" level="INFO">Starting process:
/usr/sbin/centengine /tmp/etc/centreon-engine/config0/centengine.cfg</msg>
<arg>/usr/sbin/centengine</arg>
<arg>${conf}</arg>
<arg>alias=${alias}</arg>
<doc>Starts a new process on background.</doc>
<status status="PASS" start="2024-02-12T09:54:20.730198" elapsed="0.020263"/>
</kw>
<var name="${idx}">0</var>
<status status="PASS" start="2024-02-12T09:54:20.722889" elapsed="0.027949"/>
</iter>
<var>${idx}</var>
<value>0</value>
<value>${count}</value>
<status status="PASS" start="2024-02-12T09:54:20.722473" elapsed="0.028469"/>
</for>
<status status="PASS" start="2024-02-12T09:54:20.720875" elapsed="0.030484"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-02-12T09:54:20.754092" level="INFO">${content} = ['check_for_external_commands()']</msg>
<var>${content}</var>
<arg>check_for_external_commands()</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-02-12T09:54:20.753322" elapsed="0.000831"/>
</kw>
<kw name="Find In Log With Timeout" owner="Common">
<msg time="2024-02-12T09:54:20.755170" level="INFO">regex=False</msg>
<msg time="2024-02-12T09:54:25.760361" level="INFO">regex=False</msg>
<msg time="2024-02-12T09:54:25.762554" level="INFO">${result} = True</msg>
<var>${result}</var>
<arg>${engineLog0}</arg>
<arg>${start}</arg>
<arg>${content}</arg>
<arg>60</arg>
<status status="PASS" start="2024-02-12T09:54:20.754576" elapsed="5.008051"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${result}</arg>
<arg>A message telling check_for_external_commands() should be available.</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2024-02-12T09:54:25.763286" elapsed="0.001140"/>
</kw>
<kw name="Stop Engine" owner="resources">
<kw name="Get Engines Count" owner="Engine">
<msg time="2024-02-12T09:54:25.769557" level="INFO">${count} = 1</msg>
<var>${count}</var>
<status status="PASS" start="2024-02-12T09:54:25.768218" elapsed="0.001412"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2024-02-12T09:54:25.773390" level="INFO">${alias} = e0</msg>
<var>${alias}</var>
<arg>SEPARATOR=</arg>
<arg>e</arg>
<arg>${idx}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2024-02-12T09:54:25.773025" elapsed="0.000407"/>
</kw>
<kw name="Send Signal To Process" owner="Process">
<msg time="2024-02-12T09:54:25.774420" level="INFO">Sending signal SIGTERM (15).</msg>
<arg>SIGTERM</arg>
<arg>${alias}</arg>
<doc>Sends the given ``signal`` to the specified process.</doc>
<status status="PASS" start="2024-02-12T09:54:25.773849" elapsed="0.000673"/>
</kw>
<var name="${idx}">0</var>
<status status="PASS" start="2024-02-12T09:54:25.772643" elapsed="0.003760"/>
</iter>
<var>${idx}</var>
<value>0</value>
<value>${count}</value>
<status status="PASS" start="2024-02-12T09:54:25.769793" elapsed="0.006651"/>
</for>
<for flavor="IN RANGE">
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2024-02-12T09:54:25.777432" level="INFO">${alias} = e0</msg>
<var>${alias}</var>
<arg>SEPARATOR=</arg>
<arg>e</arg>
<arg>${idx}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2024-02-12T09:54:25.777099" elapsed="0.000563"/>
</kw>
<kw name="Wait For Process" owner="Process">
<msg time="2024-02-12T09:54:25.778748" level="INFO">Waiting for process to complete.</msg>
<msg time="2024-02-12T09:54:26.881057" level="INFO">Process completed.</msg>
<msg time="2024-02-12T09:54:26.881335" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<var>${result}</var>
<arg>${alias}</arg>
<arg>timeout=60s</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="PASS" start="2024-02-12T09:54:25.778481" elapsed="1.102955"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;${None}&quot;">
<kw name="Catenate" owner="BuiltIn">
<var>${name}</var>
<arg>SEPARATOR=</arg>
<arg>centengine</arg>
<arg>${idx}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="NOT RUN" start="2024-02-12T09:54:26.882233" elapsed="0.000049"/>
</kw>
<kw name="Dump Process" owner="resources">
<arg>${alias}</arg>
<arg>/usr/sbin/centengine</arg>
<arg>${name}</arg>
<status status="NOT RUN" start="2024-02-12T09:54:26.882564" elapsed="0.000031"/>
</kw>
<kw name="Send Signal To Process" owner="Process">
<arg>SIGKILL</arg>
<arg>${alias}</arg>
<doc>Sends the given ``signal`` to the specified process.</doc>
<status status="NOT RUN" start="2024-02-12T09:54:26.882743" elapsed="0.000020"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>${name} not correctly stopped (coredump generated)</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-02-12T09:54:26.882888" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2024-02-12T09:54:26.881748" elapsed="0.001195"/>
</branch>
<branch type="ELSE">
<if>
<branch type="IF" condition="${result.rc} != 0 and ${result.rc} != -15">
<kw name="Coredump Info" owner="resources">
<arg>${alias}</arg>
<arg>/usr/sbin/centengine</arg>
<arg>${alias}</arg>
<status status="NOT RUN" start="2024-02-12T09:54:26.885009" elapsed="0.000043"/>
</kw>
<status status="NOT RUN" start="2024-02-12T09:54:26.883046" elapsed="0.002060"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:26.883030" elapsed="0.002105"/>
</if>
<kw name="Should Be True" owner="BuiltIn">
<arg>${result.rc} == -15 or ${result.rc} == 0</arg>
<arg>Engine badly stopped with ${count} instances - code returned ${result.rc}.</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2024-02-12T09:54:26.885358" elapsed="0.003081"/>
</kw>
<status status="PASS" start="2024-02-12T09:54:26.882974" elapsed="0.005535"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:26.881692" elapsed="0.006845"/>
</if>
<var name="${idx}">0</var>
<status status="PASS" start="2024-02-12T09:54:25.776935" elapsed="1.111632"/>
</iter>
<var>${idx}</var>
<value>0</value>
<value>${count}</value>
<status status="PASS" start="2024-02-12T09:54:25.776527" elapsed="1.112074"/>
</for>
<status status="PASS" start="2024-02-12T09:54:25.766084" elapsed="1.122601"/>
</kw>
<kw name="Modify Retention Dat" owner="Engine">
<arg>0</arg>
<arg>host_1</arg>
<arg>service_1</arg>
<arg>current_attempt</arg>
<arg>280</arg>
<status status="PASS" start="2024-02-12T09:54:26.888992" elapsed="0.003010"/>
</kw>
<kw name="Modify Retention Dat" owner="Engine">
<arg>0</arg>
<arg>host_1</arg>
<arg>service_1</arg>
<arg>modified_attributes</arg>
<arg>65535</arg>
<status status="PASS" start="2024-02-12T09:54:26.892401" elapsed="0.001858"/>
</kw>
<kw name="Modify Retention Dat" owner="Engine">
<arg>0</arg>
<arg>host_1</arg>
<arg>service_1</arg>
<arg>max_attempts</arg>
<arg>280</arg>
<status status="PASS" start="2024-02-12T09:54:26.894627" elapsed="0.001905"/>
</kw>
<kw name="Modify Retention Dat" owner="Engine">
<arg>0</arg>
<arg>host_1</arg>
<arg>service_1</arg>
<arg>current_state</arg>
<arg>2</arg>
<status status="PASS" start="2024-02-12T09:54:26.896895" elapsed="0.001870"/>
</kw>
<kw name="Modify Retention Dat" owner="Engine">
<arg>0</arg>
<arg>host_1</arg>
<arg>service_1</arg>
<arg>state_type</arg>
<arg>1</arg>
<status status="PASS" start="2024-02-12T09:54:26.899038" elapsed="0.001852"/>
</kw>
<kw name="Start Engine" owner="resources">
<kw name="Get Engines Count" owner="Engine">
<msg time="2024-02-12T09:54:26.902170" level="INFO">${count} = 1</msg>
<var>${count}</var>
<status status="PASS" start="2024-02-12T09:54:26.901977" elapsed="0.000243"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Catenate" owner="BuiltIn">
<msg time="2024-02-12T09:54:26.903052" level="INFO">${alias} = e0</msg>
<var>${alias}</var>
<arg>SEPARATOR=</arg>
<arg>e</arg>
<arg>${idx}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2024-02-12T09:54:26.902817" elapsed="0.000267"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2024-02-12T09:54:26.903546" level="INFO">${conf} = /tmp/etc/centreon-engine/config0/centengine.cfg</msg>
<var>${conf}</var>
<arg>SEPARATOR=</arg>
<arg>${EtcRoot}</arg>
<arg>/centreon-engine/config</arg>
<arg>${idx}</arg>
<arg>/centengine.cfg</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2024-02-12T09:54:26.903238" elapsed="0.000357"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2024-02-12T09:54:26.903999" level="INFO">${log} = /tmp/var/log/centreon-engine/config0</msg>
<var>${log}</var>
<arg>SEPARATOR=</arg>
<arg>${VarRoot}</arg>
<arg>/log/centreon-engine/config</arg>
<arg>${idx}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2024-02-12T09:54:26.903764" elapsed="0.000263"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2024-02-12T09:54:26.904531" level="INFO">${lib} = /tmp/var/lib/centreon-engine/config0</msg>
<var>${lib}</var>
<arg>SEPARATOR=</arg>
<arg>${VarRoot}</arg>
<arg>/lib/centreon-engine/config</arg>
<arg>${idx}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2024-02-12T09:54:26.904203" elapsed="0.000360"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-02-12T09:54:26.904966" level="INFO" html="true">Directory '&lt;a href="file:///tmp/var/log/centreon-engine/config0"&gt;/tmp/var/log/centreon-engine/config0&lt;/a&gt;' already exists.</msg>
<arg>${log}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-02-12T09:54:26.904739" elapsed="0.000287"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-02-12T09:54:26.905383" level="INFO" html="true">Directory '&lt;a href="file:///tmp/var/lib/centreon-engine/config0"&gt;/tmp/var/lib/centreon-engine/config0&lt;/a&gt;' already exists.</msg>
<arg>${lib}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-02-12T09:54:26.905171" elapsed="0.000272"/>
</kw>
<try>
<branch type="TRY">
<kw name="Remove File" owner="OperatingSystem">
<msg time="2024-02-12T09:54:26.906235" level="FAIL">Path '/tmp/var/lib/centreon-engine/config0/rw/centengine.cmd' is not a file.</msg>
<arg>${lib}/rw/centengine.cmd</arg>
<doc>Removes a file with the given path.</doc>
<status status="FAIL" start="2024-02-12T09:54:26.905834" elapsed="0.000579">Path '/tmp/var/lib/centreon-engine/config0/rw/centengine.cmd' is not a file.</status>
</kw>
<status status="FAIL" start="2024-02-12T09:54:26.905658" elapsed="0.000881">Path '/tmp/var/lib/centreon-engine/config0/rw/centengine.cmd' is not a file.</status>
</branch>
<branch type="EXCEPT">
<kw name="Log" owner="BuiltIn">
<msg time="2024-02-12T09:54:26.907009" level="INFO">can't remove /tmp/var/lib/centreon-engine/config0/rw/centengine.cmd don't worry</msg>
<arg>can't remove ${lib}/rw/centengine.cmd don't worry</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-02-12T09:54:26.906810" elapsed="0.000253"/>
</kw>
<status status="PASS" start="2024-02-12T09:54:26.906650" elapsed="0.000455"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:26.905601" elapsed="0.001543"/>
</try>
<kw name="Start Process" owner="Process">
<msg time="2024-02-12T09:54:26.907655" level="INFO">Starting process:
/usr/sbin/centengine /tmp/etc/centreon-engine/config0/centengine.cfg</msg>
<arg>/usr/sbin/centengine</arg>
<arg>${conf}</arg>
<arg>alias=${alias}</arg>
<doc>Starts a new process on background.</doc>
<status status="PASS" start="2024-02-12T09:54:26.907332" elapsed="0.010852"/>
</kw>
<var name="${idx}">0</var>
<status status="PASS" start="2024-02-12T09:54:26.902678" elapsed="0.015914"/>
</iter>
<var>${idx}</var>
<value>0</value>
<value>${count}</value>
<status status="PASS" start="2024-02-12T09:54:26.902323" elapsed="0.016394"/>
</for>
<status status="PASS" start="2024-02-12T09:54:26.901451" elapsed="0.017701"/>
</kw>
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:26.921610" level="INFO">Connecting using : pymysql.connect(db=centreon_storage, user=centreon, passwd=***, host=localhost, port=3306, charset=None)</msg>
<arg>pymysql</arg>
<arg>${DBName}</arg>
<arg>${DBUser}</arg>
<arg>${DBPass}</arg>
<arg>${DBHost}</arg>
<arg>${DBPort}</arg>
<doc>Loads the DB API 2.0 module given ``dbapiModuleName`` then uses it to
connect to the database using provided parameters such as ``dbName``, ``dbUsername``, and ``dbPassword``.</doc>
<status status="PASS" start="2024-02-12T09:54:26.920010" elapsed="0.003384"/>
</kw>
<for flavor="IN RANGE">
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:26.924784" elapsed="0.000454"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:26.928172" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:26.929178" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:26.925629" elapsed="0.003600"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:26.929527" elapsed="0.000398"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:26.930345" elapsed="0.000045"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:26.930092" elapsed="0.000352"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:26.930053" elapsed="0.000425"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:27.931158" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:26.930687" elapsed="1.000649"/>
</kw>
<var name="${index}">0</var>
<status status="PASS" start="2024-02-12T09:54:26.924498" elapsed="1.006914"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:27.931929" elapsed="0.000347"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:27.932748" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:27.933574" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:27.932558" elapsed="0.001073"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:27.933820" elapsed="0.000325"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:27.934506" elapsed="0.000018"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:27.934317" elapsed="0.000242"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:27.934264" elapsed="0.000320"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:28.935062" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:27.934728" elapsed="1.000500"/>
</kw>
<var name="${index}">1</var>
<status status="PASS" start="2024-02-12T09:54:27.931722" elapsed="1.003613"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:28.935868" elapsed="0.000293"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:28.936791" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:28.937586" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:28.936583" elapsed="0.001041"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:28.937820" elapsed="0.000262"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:28.938436" elapsed="0.000020"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:28.938232" elapsed="0.000257"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:28.938198" elapsed="0.000315"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:29.939080" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:28.938658" elapsed="1.000587"/>
</kw>
<var name="${index}">2</var>
<status status="PASS" start="2024-02-12T09:54:28.935650" elapsed="1.003706"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:29.939892" elapsed="0.000306"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:29.940730" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:29.941855" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:29.940528" elapsed="0.001366"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:29.942159" elapsed="0.000357"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:29.942983" elapsed="0.000019"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:29.942787" elapsed="0.000250"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:29.942652" elapsed="0.000408"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:30.943756" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:29.943312" elapsed="1.000611"/>
</kw>
<var name="${index}">3</var>
<status status="PASS" start="2024-02-12T09:54:29.939670" elapsed="1.004331"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:30.944585" elapsed="0.000468"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:30.945543" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:30.947420" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:30.945345" elapsed="0.002157"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:30.947953" elapsed="0.001464"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:30.949945" elapsed="0.000044"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:30.949605" elapsed="0.001259"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:30.949563" elapsed="0.001362"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:31.952166" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:30.951219" elapsed="1.001170"/>
</kw>
<var name="${index}">4</var>
<status status="PASS" start="2024-02-12T09:54:30.944353" elapsed="1.008124"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:31.953012" elapsed="0.000313"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:31.953811" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:31.954691" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:31.953610" elapsed="0.001124"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:31.954960" elapsed="0.000294"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:31.955601" elapsed="0.000019"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:31.955424" elapsed="0.000231"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:31.955390" elapsed="0.000287"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:32.956161" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:31.955833" elapsed="1.000521"/>
</kw>
<var name="${index}">5</var>
<status status="PASS" start="2024-02-12T09:54:31.952799" elapsed="1.003635"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:32.956956" elapsed="0.000293"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:32.957749" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:32.958542" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:32.957548" elapsed="0.001033"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:32.958901" elapsed="0.000281"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:32.959598" elapsed="0.000022"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:32.959352" elapsed="0.000304"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:32.959322" elapsed="0.000358"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:33.960170" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:32.959834" elapsed="1.000538"/>
</kw>
<var name="${index}">6</var>
<status status="PASS" start="2024-02-12T09:54:32.956750" elapsed="1.003702"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:33.961335" elapsed="0.000336"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:33.962224" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:33.963230" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:33.961963" elapsed="0.001331"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:33.963548" elapsed="0.001175"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:33.965132" elapsed="0.000020"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:33.964879" elapsed="0.000310"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:33.964849" elapsed="0.000365"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:34.965789" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:33.965448" elapsed="1.000502"/>
</kw>
<var name="${index}">7</var>
<status status="PASS" start="2024-02-12T09:54:33.960779" elapsed="1.005251"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:34.966634" elapsed="0.000320"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:34.967482" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:34.968355" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:34.967281" elapsed="0.001117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:34.968719" elapsed="0.000325"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:34.969388" elapsed="0.000018"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:34.969200" elapsed="0.000242"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:34.969166" elapsed="0.000301"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:35.969942" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:34.969614" elapsed="1.000488"/>
</kw>
<var name="${index}">8</var>
<status status="PASS" start="2024-02-12T09:54:34.966392" elapsed="1.003949"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:35.970887" elapsed="0.000292"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:35.971658" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:35.972520" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:35.971461" elapsed="0.001098"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:35.972748" elapsed="0.000262"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:35.973457" elapsed="0.000025"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:35.973163" elapsed="0.000354"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:35.973123" elapsed="0.000419"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:36.974079" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:35.973694" elapsed="1.000560"/>
</kw>
<var name="${index}">9</var>
<status status="PASS" start="2024-02-12T09:54:35.970674" elapsed="1.003673"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:36.974937" elapsed="0.000285"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:36.975620" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:36.976437" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:36.975440" elapsed="0.001039"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:36.976678" elapsed="0.000250"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:36.977221" elapsed="0.000024"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:36.977041" elapsed="0.000251"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:36.977015" elapsed="0.000303"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:37.977800" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:36.977466" elapsed="1.000529"/>
</kw>
<var name="${index}">10</var>
<status status="PASS" start="2024-02-12T09:54:36.974720" elapsed="1.003355"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:37.978613" elapsed="0.000287"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:37.979260" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:37.980007" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:37.979099" elapsed="0.000950"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:37.980284" elapsed="0.000265"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:37.980838" elapsed="0.000019"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:37.980668" elapsed="0.000222"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:37.980640" elapsed="0.000274"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:38.981476" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:37.981061" elapsed="1.000578"/>
</kw>
<var name="${index}">11</var>
<status status="PASS" start="2024-02-12T09:54:37.978403" elapsed="1.003313"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:38.983436" elapsed="0.000368"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:38.984463" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:38.985466" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:38.984189" elapsed="0.001315"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:38.985704" elapsed="0.002105"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:38.988314" elapsed="0.000023"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:38.988055" elapsed="0.000320"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:38.987973" elapsed="0.000427"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:39.988921" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:38.988569" elapsed="1.000517"/>
</kw>
<var name="${index}">12</var>
<status status="PASS" start="2024-02-12T09:54:38.982036" elapsed="1.007194"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:39.989889" elapsed="0.000302"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:39.990702" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:39.991489" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:39.990504" elapsed="0.001023"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:39.991723" elapsed="0.000329"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:39.992421" elapsed="0.000018"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:39.992206" elapsed="0.000291"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:39.992177" elapsed="0.000350"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:40.992997" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:39.992677" elapsed="1.000485"/>
</kw>
<var name="${index}">13</var>
<status status="PASS" start="2024-02-12T09:54:39.989663" elapsed="1.003574"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:40.994063" elapsed="0.000324"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:40.994849" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:40.995639" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:40.994654" elapsed="0.001022"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:40.995862" elapsed="0.000256"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:40.996492" elapsed="0.000023"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:40.996294" elapsed="0.000269"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:40.996231" elapsed="0.000358"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:41.997108" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:40.996738" elapsed="1.000548"/>
</kw>
<var name="${index}">14</var>
<status status="PASS" start="2024-02-12T09:54:40.993821" elapsed="1.003541"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:41.997899" elapsed="0.000314"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:41.998671" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:41.999517" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:41.998483" elapsed="0.001074"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:41.999733" elapsed="0.000251"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:42.000324" elapsed="0.000019"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:42.000125" elapsed="0.000251"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:42.000095" elapsed="0.000305"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:43.000874" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:42.000541" elapsed="1.000500"/>
</kw>
<var name="${index}">15</var>
<status status="PASS" start="2024-02-12T09:54:41.997666" elapsed="1.003451"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:43.001697" elapsed="0.000298"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:43.004537" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:43.008985" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:43.004246" elapsed="0.004824"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:43.009460" elapsed="0.000693"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:43.010595" elapsed="0.000029"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:43.010354" elapsed="0.000321"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:43.010311" elapsed="0.001248"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:44.012337" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:43.011883" elapsed="1.000623"/>
</kw>
<var name="${index}">16</var>
<status status="PASS" start="2024-02-12T09:54:43.001480" elapsed="1.011104"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:44.013136" elapsed="0.000507"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:44.014610" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:44.016743" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:44.014024" elapsed="0.003775"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:44.019029" elapsed="0.000774"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:44.021844" elapsed="0.000037"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:44.020603" elapsed="0.001336"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:44.020405" elapsed="0.001574"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:45.022780" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:44.022282" elapsed="1.000667"/>
</kw>
<var name="${index}">17</var>
<status status="PASS" start="2024-02-12T09:54:44.012904" elapsed="1.010236"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:45.024311" elapsed="0.000360"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:45.025723" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:45.026628" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:45.025459" elapsed="0.001211"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:45.026899" elapsed="0.000301"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:45.027654" elapsed="0.000018"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:45.027468" elapsed="0.000251"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:45.027433" elapsed="0.000310"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:46.028453" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:45.027911" elapsed="1.000711"/>
</kw>
<var name="${index}">18</var>
<status status="PASS" start="2024-02-12T09:54:45.023519" elapsed="1.005188"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:46.029235" elapsed="0.000589"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:46.030693" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:46.031457" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:46.030292" elapsed="0.001202"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:46.031690" elapsed="0.000343"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:46.032529" elapsed="0.000022"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:46.032199" elapsed="0.000389"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:46.032160" elapsed="0.000453"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:47.033712" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:46.032821" elapsed="1.001056"/>
</kw>
<var name="${index}">19</var>
<status status="PASS" start="2024-02-12T09:54:46.029024" elapsed="1.004931"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:47.034598" elapsed="0.000306"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:47.035405" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:47.036251" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:47.035177" elapsed="0.001136"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:47.036514" elapsed="0.000266"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:47.037179" elapsed="0.000020"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:47.036930" elapsed="0.000303"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:47.036893" elapsed="0.000364"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:48.037776" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:47.037425" elapsed="1.000524"/>
</kw>
<var name="${index}">20</var>
<status status="PASS" start="2024-02-12T09:54:47.034371" elapsed="1.003657"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:48.039061" elapsed="0.000342"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:48.039877" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:48.040680" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:48.039678" elapsed="0.001039"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:48.040922" elapsed="0.000272"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:48.041541" elapsed="0.000018"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:48.041362" elapsed="0.000232"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:48.041324" elapsed="0.000294"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:49.042310" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:48.041768" elapsed="1.000717"/>
</kw>
<var name="${index}">21</var>
<status status="PASS" start="2024-02-12T09:54:48.038581" elapsed="1.003982"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:49.043132" elapsed="0.000314"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:49.043887" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:49.044664" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:49.043704" elapsed="0.000999"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:49.044883" elapsed="0.000259"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:49.045488" elapsed="0.000018"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:49.045307" elapsed="0.000233"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:49.045255" elapsed="0.000309"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:50.046101" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:49.045706" elapsed="1.000556"/>
</kw>
<var name="${index}">22</var>
<status status="PASS" start="2024-02-12T09:54:49.042882" elapsed="1.003472"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:50.046960" elapsed="0.000301"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:50.047805" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:50.048599" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:50.047574" elapsed="0.001064"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:50.048825" elapsed="0.000252"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:50.049422" elapsed="0.000019"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:50.049227" elapsed="0.000248"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:50.049192" elapsed="0.000307"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:51.050092" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:50.049643" elapsed="1.000619"/>
</kw>
<var name="${index}">23</var>
<status status="PASS" start="2024-02-12T09:54:50.046736" elapsed="1.003617"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:51.050944" elapsed="0.000310"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:51.051882" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:51.052907" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:51.051537" elapsed="0.001409"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:51.053139" elapsed="0.000279"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:51.053746" elapsed="0.000019"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:51.053569" elapsed="0.000231"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:51.053535" elapsed="0.000289"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:52.054343" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:51.053996" elapsed="1.000512"/>
</kw>
<var name="${index}">24</var>
<status status="PASS" start="2024-02-12T09:54:51.050729" elapsed="1.003855"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:52.055138" elapsed="0.000311"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:52.056254" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:52.057092" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:52.056036" elapsed="0.001095"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:52.057358" elapsed="0.000284"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:52.057984" elapsed="0.000017"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:52.057804" elapsed="0.000231"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:52.057770" elapsed="0.000287"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:53.058809" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:52.058204" elapsed="1.000770"/>
</kw>
<var name="${index}">25</var>
<status status="PASS" start="2024-02-12T09:54:52.054919" elapsed="1.004150"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:53.059632" elapsed="0.000558"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:53.061000" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:53.061796" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:53.060752" elapsed="0.001170"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:53.062208" elapsed="0.002822"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:53.065453" elapsed="0.000021"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:53.065214" elapsed="0.000700"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:53.065170" elapsed="0.000785"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:54.066839" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:53.066148" elapsed="1.000859"/>
</kw>
<var name="${index}">26</var>
<status status="PASS" start="2024-02-12T09:54:53.059417" elapsed="1.007693"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:54.067811" elapsed="0.000323"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:54.068646" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:54.069378" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:54.068456" elapsed="0.000957"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:54.069597" elapsed="0.000243"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:54.070178" elapsed="0.000017"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:54.070001" elapsed="0.000226"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:54.069956" elapsed="0.000294"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:55.070737" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:54.070402" elapsed="1.000525"/>
</kw>
<var name="${index}">27</var>
<status status="PASS" start="2024-02-12T09:54:54.067531" elapsed="1.003474"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:55.071789" elapsed="0.000310"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:55.072651" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:55.073455" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:55.072434" elapsed="0.001062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:55.073699" elapsed="0.000273"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:55.074606" elapsed="0.000019"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:55.074405" elapsed="0.000256"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:55.074088" elapsed="0.000597"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:56.075216" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:55.074840" elapsed="1.000554"/>
</kw>
<var name="${index}">28</var>
<status status="PASS" start="2024-02-12T09:54:55.071551" elapsed="1.004466"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:56.076817" elapsed="0.000421"/>
</kw>
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-02-12T09:54:56.077717" level="INFO">Executing : Query  |  SELECT check_attempt from services WHERE description='service_1' </msg>
<msg time="2024-02-12T09:54:56.078531" level="INFO">${output} = ()</msg>
<var>${output}</var>
<arg>SELECT check_attempt from services WHERE description='service_1'</arg>
<doc>Runs a query with the ``selectStatement`` and returns the result as a list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-02-12T09:54:56.077521" elapsed="0.001049"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-02-12T09:54:56.078756" elapsed="0.000273"/>
</kw>
<if>
<branch type="IF" condition="&quot;${output}&quot; == &quot;((280,),)&quot;">
<break>
<status status="NOT RUN" start="2024-02-12T09:54:56.079386" elapsed="0.000019"/>
</break>
<status status="NOT RUN" start="2024-02-12T09:54:56.079184" elapsed="0.000256"/>
</branch>
<status status="PASS" start="2024-02-12T09:54:56.079146" elapsed="0.000319"/>
</if>
<kw name="Sleep" owner="BuiltIn">
<msg time="2024-02-12T09:54:57.079924" level="INFO">Slept 1 second.</msg>
<arg>1s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="PASS" start="2024-02-12T09:54:56.079613" elapsed="1.000482"/>
</kw>
<var name="${index}">29</var>
<status status="PASS" start="2024-02-12T09:54:56.076578" elapsed="1.003598"/>
</iter>
<var>${index}</var>
<value>30</value>
<status status="PASS" start="2024-02-12T09:54:26.923773" elapsed="30.156448"/>
</for>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-02-12T09:54:57.081007" level="INFO">Argument types are:
&lt;class 'tuple'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-02-12T09:54:57.081189" level="FAIL">() != ((280,),)</msg>
<arg>${output}</arg>
<arg>((280,),)</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-02-12T09:54:57.080683" elapsed="0.000624">() != ((280,),)</status>
</kw>
<kw name="Stop Engine" owner="resources">
<status status="NOT RUN" start="2024-02-12T09:54:57.082025" elapsed="0.000043"/>
</kw>
<kw name="Kindly Stop Broker" owner="resources">
<status status="NOT RUN" start="2024-02-12T09:54:57.082713" elapsed="0.000036"/>
</kw>
<kw name="Save Logs If Failed" owner="resources" type="TEARDOWN">
<kw name="Run Keyword If Test Failed" owner="BuiltIn">
<kw name="Save Logs" owner="resources">
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-02-12T09:54:57.084820" level="INFO" html="true">Directory '&lt;a href="file:///root/centreon-collect/tests/failed"&gt;/root/centreon-collect/tests/failed&lt;/a&gt;' already exists.</msg>
<arg>failed</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-02-12T09:54:57.084521" elapsed="0.000370"/>
</kw>
<kw name="Catenate" owner="BuiltIn">
<msg time="2024-02-12T09:54:57.085596" level="INFO">${failDir} = failed/Test_Xray</msg>
<var>${failDir}</var>
<arg>SEPARATOR=</arg>
<arg>failed/</arg>
<arg>${Test Name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" start="2024-02-12T09:54:57.085281" elapsed="0.000348"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-02-12T09:54:57.086132" level="INFO" html="true">Directory '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray"&gt;/root/centreon-collect/tests/failed/Test_Xray&lt;/a&gt;' already exists.</msg>
<arg>${failDir}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-02-12T09:54:57.085863" elapsed="0.000369"/>
</kw>
<kw name="Copy Files" owner="OperatingSystem">
<msg time="2024-02-12T09:54:57.090727" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/var/log/centreon-broker/central-broker-master.log"&gt;/tmp/var/log/centreon-broker/central-broker-master.log&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/central-broker-master.log"&gt;/root/centreon-collect/tests/failed/Test_Xray/central-broker-master.log&lt;/a&gt;'.</msg>
<arg>${centralLog}</arg>
<arg>${failDir}</arg>
<doc>Copies specified files to the target directory.</doc>
<status status="PASS" start="2024-02-12T09:54:57.086467" elapsed="0.004420"/>
</kw>
<kw name="Copy Files" owner="OperatingSystem">
<msg time="2024-02-12T09:54:57.092024" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/var/log/centreon-broker/central-rrd-master.log"&gt;/tmp/var/log/centreon-broker/central-rrd-master.log&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/central-rrd-master.log"&gt;/root/centreon-collect/tests/failed/Test_Xray/central-rrd-master.log&lt;/a&gt;'.</msg>
<arg>${rrdLog}</arg>
<arg>${failDir}</arg>
<doc>Copies specified files to the target directory.</doc>
<status status="PASS" start="2024-02-12T09:54:57.091132" elapsed="0.001103"/>
</kw>
<kw name="Copy Files" owner="OperatingSystem">
<msg time="2024-02-12T09:54:57.093656" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/var/log/centreon-broker/central-module-master0.log"&gt;/tmp/var/log/centreon-broker/central-module-master0.log&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/central-module-master0.log"&gt;/root/centreon-collect/tests/failed/Test_Xray/central-module-master0.log&lt;/a&gt;'.</msg>
<arg>${moduleLog0}</arg>
<arg>${failDir}</arg>
<doc>Copies specified files to the target directory.</doc>
<status status="PASS" start="2024-02-12T09:54:57.092528" elapsed="0.001310"/>
</kw>
<kw name="Copy Files" owner="OperatingSystem">
<msg time="2024-02-12T09:54:57.095080" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/var/log/centreon-engine/config0/centengine.log"&gt;/tmp/var/log/centreon-engine/config0/centengine.log&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/centengine.log"&gt;/root/centreon-collect/tests/failed/Test_Xray/centengine.log&lt;/a&gt;'.</msg>
<arg>${engineLog0}</arg>
<arg>${failDir}</arg>
<doc>Copies specified files to the target directory.</doc>
<status status="PASS" start="2024-02-12T09:54:57.094055" elapsed="0.001141"/>
</kw>
<kw name="Copy Files" owner="OperatingSystem">
<msg time="2024-02-12T09:54:57.096452" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-engine/config0/centengine.cfg"&gt;/tmp/etc/centreon-engine/config0/centengine.cfg&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/centengine.cfg"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/centengine.cfg&lt;/a&gt;'.</msg>
<msg time="2024-02-12T09:54:57.097088" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-engine/config0/hosts.cfg"&gt;/tmp/etc/centreon-engine/config0/hosts.cfg&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/hosts.cfg"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/hosts.cfg&lt;/a&gt;'.</msg>
<msg time="2024-02-12T09:54:57.097681" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-engine/config0/services.cfg"&gt;/tmp/etc/centreon-engine/config0/services.cfg&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/services.cfg"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/services.cfg&lt;/a&gt;'.</msg>
<msg time="2024-02-12T09:54:57.098353" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-engine/config0/commands.cfg"&gt;/tmp/etc/centreon-engine/config0/commands.cfg&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/commands.cfg"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/commands.cfg&lt;/a&gt;'.</msg>
<msg time="2024-02-12T09:54:57.105009" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-engine/config0/connectors.cfg"&gt;/tmp/etc/centreon-engine/config0/connectors.cfg&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/connectors.cfg"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/connectors.cfg&lt;/a&gt;'.</msg>
<msg time="2024-02-12T09:54:57.105874" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-engine/config0/resource.cfg"&gt;/tmp/etc/centreon-engine/config0/resource.cfg&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/resource.cfg"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/resource.cfg&lt;/a&gt;'.</msg>
<msg time="2024-02-12T09:54:57.106506" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-engine/config0/timeperiods.cfg"&gt;/tmp/etc/centreon-engine/config0/timeperiods.cfg&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/timeperiods.cfg"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/timeperiods.cfg&lt;/a&gt;'.</msg>
<msg time="2024-02-12T09:54:57.109703" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-engine/config0/hostgroups.cfg"&gt;/tmp/etc/centreon-engine/config0/hostgroups.cfg&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/hostgroups.cfg"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/hostgroups.cfg&lt;/a&gt;'.</msg>
<msg time="2024-02-12T09:54:57.110479" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-engine/config0/contacts.cfg"&gt;/tmp/etc/centreon-engine/config0/contacts.cfg&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/contacts.cfg"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/contacts.cfg&lt;/a&gt;'.</msg>
<msg time="2024-02-12T09:54:57.111527" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-engine/config0/dependencies.cfg"&gt;/tmp/etc/centreon-engine/config0/dependencies.cfg&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/dependencies.cfg"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/dependencies.cfg&lt;/a&gt;'.</msg>
<msg time="2024-02-12T09:54:57.112464" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-engine/config0/contactgroups.cfg"&gt;/tmp/etc/centreon-engine/config0/contactgroups.cfg&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/contactgroups.cfg"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/contactgroups.cfg&lt;/a&gt;'.</msg>
<msg time="2024-02-12T09:54:57.116985" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-engine/config0/escalations.cfg"&gt;/tmp/etc/centreon-engine/config0/escalations.cfg&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/escalations.cfg"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-engine/config0/escalations.cfg&lt;/a&gt;'.</msg>
<arg>${EtcRoot}/centreon-engine/config0/*.cfg</arg>
<arg>${failDir}/etc/centreon-engine/config0</arg>
<doc>Copies specified files to the target directory.</doc>
<status status="PASS" start="2024-02-12T09:54:57.095421" elapsed="0.021740"/>
</kw>
<kw name="Copy Files" owner="OperatingSystem">
<msg time="2024-02-12T09:54:57.119305" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-broker/central-broker.json"&gt;/tmp/etc/centreon-broker/central-broker.json&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-broker/central-broker.json"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-broker/central-broker.json&lt;/a&gt;'.</msg>
<msg time="2024-02-12T09:54:57.120064" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-broker/central-rrd.json"&gt;/tmp/etc/centreon-broker/central-rrd.json&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-broker/central-rrd.json"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-broker/central-rrd.json&lt;/a&gt;'.</msg>
<msg time="2024-02-12T09:54:57.121590" level="INFO" html="true">Copied file from '&lt;a href="file:///tmp/etc/centreon-broker/central-module0.json"&gt;/tmp/etc/centreon-broker/central-module0.json&lt;/a&gt;' to '&lt;a href="file:///root/centreon-collect/tests/failed/Test_Xray/etc/centreon-broker/central-module0.json"&gt;/root/centreon-collect/tests/failed/Test_Xray/etc/centreon-broker/central-module0.json&lt;/a&gt;'.</msg>
<arg>${EtcRoot}/centreon-broker/*.json</arg>
<arg>${failDir}/etc/centreon-broker</arg>
<doc>Copies specified files to the target directory.</doc>
<status status="PASS" start="2024-02-12T09:54:57.117675" elapsed="0.004060"/>
</kw>
<kw name="Move Files" owner="OperatingSystem">
<arg>/tmp/lua*.log</arg>
<arg>${failDir}</arg>
<doc>Moves specified files to the target directory.</doc>
<status status="PASS" start="2024-02-12T09:54:57.122081" elapsed="0.001483"/>
</kw>
<status status="PASS" start="2024-02-12T09:54:57.084144" elapsed="0.039544"/>
</kw>
<arg>Save Logs</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="PASS" start="2024-02-12T09:54:57.083837" elapsed="0.039901"/>
</kw>
<status status="PASS" start="2024-02-12T09:54:57.083362" elapsed="0.040435"/>
</kw>
<doc>The check attempts and the max check attempts of (host_1,service_1) are changed to 280 thanks to the retention.dat file. Then engine and broker are started and broker should write these values in the services and resources tables. We only test the services table because we need a resources table that allows bigger numbers for these two attributes. But we see that broker doesn't crash anymore.</doc>
<tag>MON-21110</tag>
<status status="FAIL" start="2024-02-12T09:54:20.624039" elapsed="36.499908">() != ((280,),)</status>
</test>
<kw name="Clean After Suite" owner="resources" type="TEARDOWN">
<kw name="Terminate All Processes" owner="Process">
<msg time="2024-02-12T09:54:57.126225" level="INFO">Forcefully killing process.</msg>
<msg time="2024-02-12T09:54:57.226698" level="INFO">Process completed.</msg>
<msg time="2024-02-12T09:54:57.226824" level="INFO">Forcefully killing process.</msg>
<msg time="2024-02-12T09:54:57.327409" level="INFO">Process completed.</msg>
<msg time="2024-02-12T09:54:57.327543" level="INFO">Forcefully killing process.</msg>
<msg time="2024-02-12T09:54:57.427949" level="INFO">Process completed.</msg>
<arg>kill=True</arg>
<doc>Terminates all still running processes started by this library.</doc>
<status status="PASS" start="2024-02-12T09:54:57.125963" elapsed="0.302255"/>
</kw>
<status status="PASS" start="2024-02-12T09:54:57.125598" elapsed="0.302819"/>
</kw>
<doc>Centreon Broker and Engine progressively add services</doc>
<status status="FAIL" start="2024-02-12T09:54:20.197555" elapsed="37.230903"/>
</suite>
<status status="FAIL" start="2024-02-12T09:54:20.195594" elapsed="37.234187"/>
</suite>
<status status="FAIL" start="2024-02-12T09:54:20.162149" elapsed="37.268350"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">MON-21110</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1" name="Broker-Engine">Tests.Broker-Engine</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s1" name="Services">Tests.Broker-Engine.Services</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
