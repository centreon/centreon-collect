name: Centreon collect build docker

on:
  pull_request_target:
    types:
      - closed
    branches:
      - develop
    paths:
      - '.github/workflows/docker-builder.yml'
      - 'ci/docker/**'
  workflow_dispatch:
  pull_request:
    paths:
      - '.github/workflows/docker-builder.yml'
      - 'ci/docker/**'

env:
  REGISTRY: registry-docker.centreon.com/docker-global

jobs:
  create-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - run: |
          VERSION=$(awk '$1 ~ "COLLECT_MAJOR" {maj=substr($2, 1, length($2)-1)} $1 ~ "COLLECT_MINOR" {min=substr($2, 1, length($2)-1)} $1 ~ "COLLECT_PATCH" {patch=substr($2, 1, length($2) - 1) ; print maj "." min "." patch}' CMakeLists.txt)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        id: version
      - run: |
          echo "Version is ${{ steps.version.outputs.version }}"
    outputs:
      version: ${{ steps.version.outputs.version }}


  create-and-push-docker:
    needs: create-version
    runs-on: [self-hosted, collect]
    continue-on-error: false
    env:
      version: ${{ needs.create-version.outputs.version }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - project: collect
            distrib: centos7
          - project: collect
            distrib: alma8
          - project: collect
            distrib: debian-buster
          - project: collect
            distrib: debian-bullseye
          - project: gorgone
            distrib: centos7
          - project: gorgone
            distrib: alma8
          - project: gorgone
            distrib: debian-bullseye
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REPOS_USERNAME }}
          password: ${{ secrets.REPOS_PASSWORD }}

      - name: build docker ${{ matrix.distrib }}
        run: docker build --no-cache . -f ci/docker/Dockerfile.${{ matrix.project }}-${{ matrix.distrib }} -t $REGISTRY/centreon-${{ matrix.project }}-${{ matrix.distrib }}:${{ env.version }}

      - name: push docker ${{ matrix.distrib }}
        run: docker push $REGISTRY/centreon-${{ matrix.project }}-${{ matrix.distrib }}:${{ env.version }}

