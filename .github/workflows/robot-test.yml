on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      full_name:
        required: true
        type: string
      distrib:
        required: true
        type: string
    secrets:
      registry_username:
        required: true
      registry_password:
        required: true

jobs:
  test-image-to-cache:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Login to Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}

      - name: Login to Proxy Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ${{ vars.DOCKER_PROXY_REGISTRY_URL }}
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}

      - name: load image
        run: |
          docker pull ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{inputs.full_name}}
        shell: bash

      - name: image to disk
        run: |
          docker save -o /tmp/${{inputs.image}} ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{inputs.full_name}}
        shell: bash

      - name: image to cache
        uses: actions/cache/save@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: /tmp/${{inputs.image}}
          key: ${{inputs.full_name}}

  robot-test-list:
    needs: [test-image-to-cache]
    runs-on: ubuntu-22.04
    outputs:
      features: ${{ steps.list-features.outputs.features }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: List features
        id: list-features
        run: |
          cd tests
          echo "features=$(grep -Rl '*** Test Cases ***' . | grep '.robot' | sed -e "s#^./##" | sort | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  robot-test-run:
    needs: [robot-test-list]
    runs-on: ubuntu-22.04
    container:
      image: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ inputs.full_name }}
      credentials:
        username: ${{ secrets.registry_username }}
        password: ${{ secrets.registry_password }}
    strategy:
      fail-fast: false
      matrix:
        feature: ${{ fromJson(needs.robot-test-list.outputs.features) }}
    name: ${{ matrix.feature }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install RPM packages
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ./*.rpm
          key: cache-${{ github.sha }}-rpmbuild-centreon-collect-${{ inputs.distrib }}-${{ github.head_ref || github.ref_name }}

      - name: Test ${{ matrix.feature }}
        run: bash ./.github/scripts/collect-test-robot.sh ${{ matrix.feature }} ${{ inputs.distrib }}
        shell: bash

      - name: Move reports
        if: ${{ failure() }}
        run: |
          mkdir reports
          FILE_PREFIX=`echo "${{ matrix.feature }}" | sed -e "s#/#__#g"`
          if [ -d tests/failed ] ; then
            mv tests/log.html reports/$FILE_PREFIX-log.html
            mv tests/output.xml reports/$FILE_PREFIX-output.xml
            mv tests/report.html reports/$FILE_PREFIX-report.html
            mv tests/failed reports/$FILE_PREFIX-failed
          fi

      - name: Upload Test Results
        if: ${{ failure() }}
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: robot-test-reports
          path: reports
          retention-days: 1

  robot-test-report:
    needs: [robot-test-run]
    if: ${{ failure() }}
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Download Artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: robot-test-reports
          path: reports

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - run: |
          pip3 install -U robotframework robotframework-databaselibrary pymysql python-dateutil
          cd reports
          rebot -o output.xml ./*-output.xml || true
        shell: bash

      - name: Send report to commit
        uses: joonvena/robotframework-reporter-action@1f1268f26d5eb74e298acec6f271962244524c1f # v2.1
        with:
          gh_access_token: ${{ secrets.GITHUB_TOKEN }}
          report_path: reports
