name: Centreon collect

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
#  pull_request:
  push:
    branches:
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - master
      - "[2-9][0-9].[0-9][0-9].x"

env:
  REGISTRY: centreon.jfrog.io/docker

jobs:
  dispatch-to-maintained-branches:
    if: ${{ github.event_name == 'schedule' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - run: |
          gh workflow run robot-nightly.yml -r "dev-22.10.x"
        shell: bash

  create-version:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - id: version
        run: |
          IMG_VERSION=$(md5sum conanfile.txt | awk '{print substr($1, 0, 8)}')
          echo "imgversion=$IMG_VERSION" >> $GITHUB_OUTPUT
          VERSION=$(awk '$1 ~ "COLLECT_MAJOR" {maj=substr($2, 1, length($2)-1)} $1 ~ "COLLECT_MINOR" {min=substr($2, 1, length($2)-1) ; print maj "." min}' CMakeLists.txt)
          PATCH=$(awk '$1 ~ "COLLECT_PATCH" {print substr($2, 1, length($2) - 1)}' CMakeLists.txt)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "patch=$PATCH" >> $GITHUB_OUTPUT

          if [[ -z "$GITHUB_HEAD_REF" ]] ; then
            BRANCHNAME="$GITHUB_REF_NAME"
          else
            BRANCHNAME="$GITHUB_HEAD_REF"
          fi
          case "$BRANCHNAME" in
            master | [2-9][0-9].[0-9][0-9].x | release* | hotfix*)
              echo "release=$GITHUB_RUN_ATTEMPT" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "release=`date +%s`.`echo ${{ github.sha }} | cut -c -7`" >> $GITHUB_OUTPUT
              ;;
          esac

        shell: bash
      - run: |
          echo "ImgVersion is ${{ steps.version.outputs.imgversion }}"
          echo "Version is ${{ steps.version.outputs.version }}.${{ steps.version.outputs.patch }}"
          echo "Release is ${{ steps.version.outputs.release }}"
    outputs:
      imgversion: ${{ steps.version.outputs.imgversion }}
      version: ${{ steps.version.outputs.version }}
      patch: ${{ steps.version.outputs.patch }}
      release: ${{ steps.version.outputs.release }}

  unit-test:
    needs: [create-version]
    runs-on: [self-hosted, collect]

    strategy:
      matrix:
        image: [alma8, alma9, debian-bullseye]
    name: unit test ${{ matrix.image }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.AUTOMATION_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}

      - name: Test ${{ matrix.image }}
        uses: ./.github/actions/runner-docker
        with:
          script_name: /src/ci/scripts/collect-unit-tests
          image_name: centreon-collect-${{ matrix.image }}
          image_version: ${{ needs.create-version.outputs.imgversion }}

  package:
    needs: [create-version]
    uses: ./.github/workflows/package-collect.yml
    with:
      version: ${{ needs.create-version.outputs.version }}.${{ needs.create-version.outputs.patch }}
      imgversion: ${{ needs.create-version.outputs.imgversion }}
      release: ${{ needs.create-version.outputs.release }}
    secrets: inherit
