name: Centreon collect

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    paths:
      - bbdo/**
      - broker/**
      - ccc/**
      - clib/**
      - connectors/**
      - engine/**
      - grpc/**
      - packaging/**
      - cmake.sh
      - CMakeLists.txt
      - conanfile.txt
      - selinux/**
      - "!.veracode-exclusions"
  push:
    branches:
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - master
      - "[2-9][0-9].[0-9][0-9].x"
    paths:
      - bbdo/**
      - broker/**
      - ccc/**
      - clib/**
      - connectors/**
      - engine/**
      - grpc/**
      - packaging/**
      - cmake.sh
      - CMakeLists.txt
      - conanfile.txt
      - selinux/**
      - "!.veracode-exclusions"

jobs:
  get-version:
    uses: ./.github/workflows/get-version.yml

  unit-test:
    needs: [get-version]
    if: ${{ ! contains(fromJson('["stable"]'), needs.get-version.outputs.stability) }}
    runs-on: [self-hosted, collect]

    strategy:
      fail-fast: false
      matrix:
        image: [alma8, alma9, debian-bullseye]
    name: unit test ${{ matrix.image }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Login to Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_ID }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

      - name: Test ${{ matrix.image }}
        uses: ./.github/actions/runner-docker
        with:
          registry_url: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          script_name: /src/.github/scripts/collect-unit-tests
          image_name: centreon-collect-${{ matrix.image }}
          image_version: ${{ needs.get-version.outputs.img_version }}

  package:
    needs: [get-version]
    if: ${{ ! contains(fromJson('["stable"]'), needs.get-version.outputs.stability) }}
    uses: ./.github/workflows/package-collect.yml
    with:
      version: ${{ needs.get-version.outputs.version }}.${{ needs.get-version.outputs.patch }}
      img_version: ${{ needs.get-version.outputs.img_version }}
      release: ${{ needs.get-version.outputs.release }}
      commit_hash: ${{ github.sha }}
    secrets: inherit

  deliver-sources:
    runs-on: [self-hosted, common]
    needs: [get-version, package]
    if: ${{ contains(fromJson('["stable"]'), needs.get-version.outputs.stability) && github.event_name != 'workflow_dispatch' }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          path: centreon-collect

      - name: Deliver sources
        uses: ./centreon-collect/.github/actions/release-sources
        with:
          bucket_directory: centreon-collect
          module_directory: centreon-collect
          module_name: centreon-collect
          major_version: ${{ needs.get-version.outputs.version }}
          minor_version: ${{ needs.get-version.outputs.patch }}
          token_download_centreon_com: ${{ secrets.TOKEN_DOWNLOAD_CENTREON_COM }}

  deliver-rpm:
    if: ${{ contains(fromJson('["testing", "stable"]'), needs.get-version.outputs.stability) }}
    needs: [get-version, package]
    environment: ${{ needs.get-version.outputs.environment }}
    runs-on: [self-hosted, common]
    strategy:
      matrix:
        include:
          - distrib: el8
            arch: amd64
          - distrib: el9
            arch: amd64

    name: deliver ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Publish RPM packages
        uses: ./.github/actions/delivery
        with:
          module_name: collect
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-version.outputs.version }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: cache-${{ github.sha }}-rpm-centreon-collect-${{ matrix.distrib }}-${{ matrix.arch }}-${{ github.head_ref || github.ref_name }}
          stability: ${{ needs.get-version.outputs.stability }}

  deliver-deb:
    if: ${{ contains(fromJson('["testing", "stable"]'), needs.get-version.outputs.stability) }}
    needs: [get-version, package]
    environment: ${{ needs.get-version.outputs.environment }}
    runs-on: [self-hosted, common]
    strategy:
      matrix:
        include:
          - distrib: bullseye
            arch: amd64
          - distrib: bullseye
            arch: arm64

    name: deliver ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Publish DEB packages
        uses: ./.github/actions/delivery
        with:
          module_name: collect
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.get-version.outputs.version }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: cache-${{ github.sha }}-deb-centreon-collect-${{ matrix.distrib }}-${{ matrix.arch }}-${{ github.head_ref || github.ref_name }}
          stability: ${{ needs.get-version.outputs.stability }}

  deliver-engine-image:
    # generate image only for develop
    # if: ${{  needs.get-version.outputs.branch == 'develop' }}
    needs: [get-version, package]
    runs-on: [self-hosted, common]
    strategy:
      matrix:
        include:
          - runner: collect
            distrib: bullseye
            arch: amd64
            dockerfile: centreon-collect-engine-debian-bullseye
            image: centreon-collect-engine-debian-bullseye-amd64:${{ needs.get-version.outputs.branch }}
          - runner: collect-am64
            distrib: bullseye
            arch: arm64
            dockerfile: centreon-collect-engine-debian-bullseye
            image: centreon-collect-engine-debian-bullseye-arm64:${{ needs.get-version.outputs.branch }}
          - runner: collect
            distrib: el8
            arch: amd64
            dockerfile: centreon-collect-engine-alma8
            image: centreon-collect-engine-alma8-amd64:${{ needs.get-version.outputs.branch }}
          - runner: collect
            distrib: el9
            arch: amd64
            dockerfile: centreon-collect-engine-alma9
            image: centreon-collect-engine-alma9-amd64:${{ needs.get-version.outputs.branch }}

    name: deliver engine image ${{ matrix.image }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Restore binaries from cache
        uses: actions/cache/restore@v3
        with:
          path: collect-binaries.tar
          key: binaries-${{ matrix.distrib }}-${{ matrix.arch }}-${{ github.sha }}
          fail-on-cache-miss: true

      - name: untar binaries
        shell: bash
        run: tar -xf collect-binaries.tar

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_ID }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

      - name: Login to Proxy Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.DOCKER_PROXY_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_ID }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

      - uses: docker/setup-buildx-action@v2

      - name: Build image ${{ matrix.image }}
        uses: docker/build-push-action@v3
        with:
          file: .github/docker/Dockerfile.${{ matrix.dockerfile }}
          context: .
          build-args: "REGISTRY_URL=${{ vars.DOCKER_PROXY_REGISTRY_URL }}"
          platforms: ${{ contains(matrix.runner, 'arm') && 'linux/arm64' || 'linux/amd64' }}
          pull: true
          push: true
          tags: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ matrix.image }}


  promote:
    needs: [get-version]
    if: ${{ contains(fromJson('["stable"]'), needs.get-version.outputs.stability) && github.event_name != 'workflow_dispatch' }}
    runs-on: [self-hosted, common]
    strategy:
      matrix:
        distrib: [el8, el9, bullseye]

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Promote ${{ matrix.distrib }} to stable
        uses: ./.github/actions/promote-to-stable
        with:
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          module_name: collect
          distrib: ${{ matrix.distrib }}
          major_version: ${{ needs.get-version.outputs.version }}
          minor_version: ${{ needs.get-version.outputs.patch }}
          stability: ${{ needs.get-version.outputs.stability }}
          repository_name: standard
