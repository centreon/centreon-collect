name: Centreon collect

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    paths:
      - agent/**
      - bbdo/**
      - broker/**
      - ccc/**
      - clib/**
      - connectors/**
      - custom-triplets/**
      - engine/**
      - grpc/**
      - packaging/**
      - cmake.sh
      - cmake-vcpkg.sh
      - CMakeLists.txt
      - CMakeListsLinux.txt
      - vcpkg.json
      - overlays/**
      - selinux/**
      - "!.veracode-exclusions"
      - "!veracode.json"
      - "!**/test/**"
  push:
    branches:
      - develop
      - dev-[2-9][0-9].[0-9][0-9].x
      - master
      - "[2-9][0-9].[0-9][0-9].x"
    paths:
      - agent/**
      - bbdo/**
      - broker/**
      - ccc/**
      - clib/**
      - connectors/**
      - custom-triplets/**
      - engine/**
      - grpc/**
      - packaging/**
      - cmake.sh
      - cmake-vcpkg.sh
      - CMakeLists.txt
      - CMakeListsLinux.txt
      - vcpkg.json
      - overlays/**
      - selinux/**
      - "!.veracode-exclusions"
      - "!veracode.json"
      - "!**/test/**"

jobs:
  get-version:
    uses: ./.github/workflows/get-version.yml
    with:
      version_file: CMakeLists.txt

  unit-test:
    needs: [get-version]
    if: ${{ ! contains(fromJson('["stable"]'), needs.get-version.outputs.stability) }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - image: centreon-collect-alma8
          - image: centreon-collect-alma9
          - image: centreon-collect-debian-bullseye
          - image: centreon-collect-debian-bookworm

    runs-on: ubuntu-24.04

    env:
      SCCACHE_PATH: "/usr/bin/sccache"
      SCCACHE_BUCKET: "centreon-github-sccache"
      SCCACHE_REGION: "eu-west-1"
      AWS_ACCESS_KEY_ID: ${{ secrets.COLLECT_S3_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.COLLECT_S3_SECRET_KEY }}

    container:
      image: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ matrix.image }}:${{ needs.get-version.outputs.img_version }}
      credentials:
        username: ${{ secrets.DOCKER_REGISTRY_ID }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

    name: unit test ${{ matrix.image }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Login to Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_ID }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

      - name: Run unit tests
        run: /src/.github/scripts/collect-unit-tests
        shell: bash

  package:
    needs: [get-version]
    if: ${{ ! contains(fromJson('["stable"]'), needs.get-version.outputs.stability) }}
    uses: ./.github/workflows/package-collect.yml
    with:
      major_version: ${{ needs.get-version.outputs.major_version }}
      minor_version: ${{ needs.get-version.outputs.minor_version }}
      img_version: ${{ needs.get-version.outputs.img_version }}
      release: ${{ needs.get-version.outputs.release }}
      commit_hash: ${{ github.sha }}
      stability: ${{ needs.get-version.outputs.stability }}
    secrets: inherit

  robot-test:
    needs: [get-version, package]
    if: ${{ ! contains(fromJson('["stable"]'), needs.get-version.outputs.stability) }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - distrib: el9
            image: centreon-collect-alma9-test
            package_extension: rpm
            arch: amd64
            database_type: mariadb
            test_group_name: robot_test-mariadb-el9-amd64
            tests_params: '{}'
          - distrib: el9
            image: centreon-collect-mysql-alma9-test
            package_extension: rpm
            arch: amd64
            database_type: mysql
            test_group_name: robot_test-mysql-el9-amd64
            tests_params: '{}'
          - distrib: bullseye
            image: centreon-collect-debian-bullseye-arm64-test
            package_extension: deb
            arch: arm64
            database_type: mariadb
            test_group_name: robot_test-mariadb-bullseye-arm64
            tests_params: '{}'
          - distrib: bookworm
            image: centreon-collect-debian-bookworm-arm64-test
            package_extension: deb
            arch: arm64
            database_type: mariadb
            test_group_name: robot_test-mariadb-bookworm-arm64
            tests_params: '{}'
          - distrib: bookworm
            image: centreon-collect-debian-bookworm-test
            package_extension: deb
            arch: amd64
            database_type: mariadb
            test_group_name: robot_test-mariadb-bookworm-amd64
            tests_params: '{}'
          - distrib: el9
            image: centreon-collect-alma9-test
            package_extension: rpm
            arch: amd64
            database_type: mariadb
            test_group_name: robot_test-mariadb-el9-amd64-grpc
            tests_params: '{"default_transport":"grpc","default_bbdo_version":"3.1.0"}'

    name: ${{ matrix.test_group_name }}

    uses: ./.github/workflows/robot-test.yml
    with:
      distrib: ${{ matrix.distrib }}
      arch: ${{ matrix.arch }}
      image: ${{ matrix.image }}
      image_test: ${{ matrix.image }}:${{ needs.get-version.outputs.test_img_version }}
      image_version: ${{ needs.get-version.outputs.img_version }}
      package_cache_key: ${{ github.run_id }}-${{ github.sha }}-${{ matrix.package_extension }}-centreon-collect-${{ matrix.distrib }}-${{ matrix.arch }}-${{ github.head_ref || github.ref_name }}
      package_cache_path: ./*.${{ matrix.package_extension}}
      database_type: ${{ matrix.database_type }}
      tests_params: ${{matrix.tests_params}}
      test_group_name: ${{matrix.test_group_name}}
    secrets:
      registry_username: ${{ secrets.DOCKER_REGISTRY_ID }}
      registry_password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}
      collect_s3_access_key: ${{ secrets.COLLECT_S3_ACCESS_KEY }}
      collect_s3_secret_key: ${{ secrets.COLLECT_S3_SECRET_KEY }}
      xray_client_id: ${{ secrets.XRAY_CLIENT_ID }}
      xray_client_secret: ${{ secrets.XRAY_CLIENT_SECRET }}

  deliver-sources:
    runs-on: [self-hosted, common]
    needs: [get-version, package]
    if: ${{ contains(fromJson('["stable"]'), needs.get-version.outputs.stability) && github.event_name != 'workflow_dispatch' }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          path: centreon-collect

      - name: Deliver sources
        uses: ./centreon-collect/.github/actions/release-sources
        with:
          bucket_directory: centreon-collect
          module_directory: centreon-collect
          module_name: centreon-collect
          major_version: ${{ needs.get-version.outputs.major_version }}
          minor_version: ${{ needs.get-version.outputs.minor_version }}
          token_download_centreon_com: ${{ secrets.TOKEN_DOWNLOAD_CENTREON_COM }}

  deliver-rpm:
    if: ${{ contains(fromJson('["unstable", "testing", "stable"]'), needs.get-version.outputs.stability) }}
    needs: [get-version, robot-test]
    environment: ${{ needs.get-version.outputs.environment }}
    runs-on: [self-hosted, common]
    strategy:
      matrix:
        include:
          - distrib: el8
            arch: amd64
          - distrib: el9
            arch: amd64

    name: deliver ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Publish RPM packages
        uses: ./.github/actions/delivery
        with:
          module_name: collect
          distrib: ${{ matrix.distrib }}
          major_version: ${{ needs.get-version.outputs.major_version }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.run_id }}-${{ github.sha }}-rpm-centreon-collect-${{ matrix.distrib }}-${{ matrix.arch }}-${{ github.head_ref || github.ref_name }}
          stability: ${{ needs.get-version.outputs.stability }}
          release_type: ${{ needs.get-version.outputs.release_type }}
          release_cloud: ${{ needs.get-version.outputs.release_cloud }}

  deliver-deb:
    if: ${{ !needs.get-version.outputs.release_cloud && contains(fromJson('["unstable", "testing", "stable"]'), needs.get-version.outputs.stability) }}
    needs: [get-version, robot-test]
    environment: ${{ needs.get-version.outputs.environment }}
    runs-on: [self-hosted, common]
    strategy:
      matrix:
        include:
          - distrib: bullseye
            arch: amd64
          - distrib: bullseye
            arch: arm64
          - distrib: bookworm
            arch: amd64
          - distrib: jammy
            arch: amd64

    name: deliver ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Publish DEB packages
        uses: ./.github/actions/delivery
        with:
          module_name: collect
          distrib: ${{ matrix.distrib }}
          major_version: ${{ needs.get-version.outputs.major_version }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: ${{ github.run_id }}-${{ github.sha }}-deb-centreon-collect-${{ matrix.distrib }}-${{ matrix.arch }}-${{ github.head_ref || github.ref_name }}
          stability: ${{ needs.get-version.outputs.stability }}
          release_type: ${{ needs.get-version.outputs.release_type }}
          release_cloud: ${{ needs.get-version.outputs.release_cloud }}

  promote:
    needs: [get-version]
    if: ${{ contains(fromJson('["stable"]'), needs.get-version.outputs.stability) && github.event_name != 'workflow_dispatch' }}
    runs-on: [self-hosted, common]
    strategy:
      matrix:
        distrib: [el8, el9, bullseye, bookworm, jammy]

    steps:
      - name: Checkout sources
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Promote ${{ matrix.distrib }} to stable
        uses: ./.github/actions/promote-to-stable
        with:
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          module_name: collect
          distrib: ${{ matrix.distrib }}
          major_version: ${{ needs.get-version.outputs.major_version }}
          stability: ${{ needs.get-version.outputs.stability }}
          github_ref_name: ${{ github.ref_name }}
          release_type: ${{ needs.get-version.outputs.release_type }}
          release_cloud: ${{ needs.get-version.outputs.release_cloud }}
