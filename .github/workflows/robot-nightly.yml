name: centreon collect nightly robot

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    paths:
      - '.github/workflows/robot-nightly.yml'
  schedule:
    - cron: '0 0 * * *'

env:
  REGISTRY: centreon.jfrog.io/docker

jobs:
  create-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - id: version
        run: |
          IMG_VERSION=$(md5sum conanfile.txt | awk '{print substr($1, 0, 8)}')
          echo "imgversion=$IMG_VERSION" >> $GITHUB_OUTPUT
          VERSION=$(awk '$1 ~ "COLLECT_MAJOR" {maj=substr($2, 1, length($2)-1)} $1 ~ "COLLECT_MINOR" {min=substr($2, 1, length($2)-1) ; print maj "." min}' CMakeLists.txt)
          PATCH=$(awk '$1 ~ "COLLECT_PATCH" {print substr($2, 1, length($2) - 1)}' CMakeLists.txt)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "patch=$PATCH" >> $GITHUB_OUTPUT

          if [[ -z "$GITHUB_HEAD_REF" ]] ; then
            BRANCHNAME="$GITHUB_REF_NAME"
          else
            BRANCHNAME="$GITHUB_HEAD_REF"
          fi
          case "$BRANCHNAME" in
            master | [2-9][0-9].[0-9][0-9].x | release* | hotfix*)
              echo "release=$GITHUB_RUN_ATTEMPT" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "release=`date +%s`.`echo ${{ github.sha }} | cut -c -7`" >> $GITHUB_OUTPUT
              ;;
          esac

        shell: bash
      - run: |
          echo "ImgVersion is ${{ steps.version.outputs.imgversion }}"
          echo "Version is ${{ steps.version.outputs.version }}.${{ steps.version.outputs.patch }}"
          echo "Release is ${{ steps.version.outputs.release }}"
    outputs:
      imgversion: ${{ steps.version.outputs.imgversion }}
      version: ${{ steps.version.outputs.version }}
      patch: ${{ steps.version.outputs.patch }}
      release: ${{ steps.version.outputs.release }}

  call-package-collect:
    needs: [create-version]
    uses: ./.github/workflows/package-collect.yml
    with:
      version: ${{ needs.create-version.outputs.version }}.${{ needs.create-version.outputs.patch }}
      imgversion: ${{ needs.create-version.outputs.imgversion }}
      release: ${{ needs.create-version.outputs.release }}
    secrets: inherit

  robot-test:
    needs: [call-package-collect, create-version]
    runs-on: [self-hosted, collect]
    strategy:
      matrix:
        # branch: [develop, master]
        include:
          - image: centreon-collect-alma9
            distrib: el9
            folder_report: tests/
    container:
      image: docker.centreon.com/${{ matrix.image }}:${{ needs.create-version.outputs.imgversion }}
      credentials:
        username: ${{ secrets.AUTOMATION_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install RPM packages
        uses: actions/cache@v3
        with:
          path: ./*.rpm
          key: cache-${{ github.sha }}-rpmbuild-centreon-collect-${{ matrix.distrib }}-${{ github.head_ref || github.ref_name }}

      - name: Tests robot (Alma9)
        run: bash ./ci/scripts/collect-test-robot.sh
        shell: bash

      - if: always()
        name: Send report to commit
        uses: joonvena/robotframework-reporter-action@v2.1
        with:
          gh_access_token: ${{ secrets.GITHUB_TOKEN }}
          report_path: ${{ matrix.folder_report }}

  deliver-rpm:
    needs: [robot-test, create-version]
    runs-on: [self-hosted, common]
    strategy:
      matrix:
        distrib: [el8, el9]
    name: deliver ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Publish RPM packages
        uses: ./.github/actions/delivery
        with:
          distrib: ${{ matrix.distrib }}
          version: ${{ needs.create-version.outputs.version }}
          minor_version: ${{ needs.create-version.outputs.patch }}
          release: ${{ needs.create-version.outputs.release }}
          module_name: centreon-collect
          nexus_username: ${{ secrets.NEXUS_USERNAME }}
          nexus_password: ${{ secrets.NEXUS_PASSWORD }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: cache-${{ github.sha }}-rpmbuild-centreon-collect-${{ matrix.distrib }}-${{ github.head_ref || github.ref_name }}
          update_repo_path: ${{ secrets.UPDATE_REPO_PATH }}
          cloudfront_id: ${{ secrets.CLOUDFRONT_ID }}
          yum_repo_address: ${{ secrets.YUM_REPO_ADDRESS }}
          yum_repo_key: ${{ secrets.YUM_REPO_KEY }}
          yum_repo_url: ${{ secrets.YUM_REPO_URL }}

  deliver-deb:
    needs: [robot-test, create-version]
    runs-on: [self-hosted, common]
    strategy:
      matrix:
        distrib: [bullseye]
    name: deliver ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Publish DEB packages
        uses: ./.github/actions/delivery
        with:
          distrib: ${{ matrix.distrib }}
          repository_name: standard
          version: ${{ needs.create-version.outputs.version }}
          repos_username: ${{ secrets.NEXUS_USERNAME }}
          repos_password: ${{ secrets.NEXUS_PASSWORD }}
          artifactory_token: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          cache_key: cache-${{ github.sha }}-debbuild-centreon-collect-${{ matrix.distrib }}-${{ github.head_ref || github.ref_name }}
