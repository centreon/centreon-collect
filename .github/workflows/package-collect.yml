name: Centreon collect packaging

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      img_version:
        required: true
        type: string
      release:
        required: true
        type: string
      commit_hash:
        required: true
        type: string

jobs:
  package:

    strategy:
      fail-fast: false
      matrix:
        include:
          - image: centreon-collect-alma8
            distrib: el8
            package_extension: rpm
            runner: collect
            arch: amd64
          - image: centreon-collect-alma9
            distrib: el9
            package_extension: rpm
            runner: collect
            arch: amd64
          - image: centreon-collect-debian-bullseye
            distrib: bullseye
            package_extension: deb
            runner: collect
            arch: amd64
          - image: centreon-collect-debian-bullseye-arm64
            distrib: bullseye
            package_extension: deb
            runner: collect-arm64
            arch: arm64

    runs-on: ${{ fromJson(format('["self-hosted", "{0}"]', matrix.runner)) }}

    container:
      image: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ matrix.image }}:${{ inputs.img_version }}
      credentials:
        username: ${{ secrets.DOCKER_REGISTRY_ID }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

    name: package ${{ matrix.distrib }} ${{ matrix.arch }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Generate selinux binaries
        if: ${{ matrix.package_extension == 'rpm' }}
        run: |
          cd selinux
          for MODULE in "centreon-engine" "centreon-broker"; do
            cd $MODULE
            sed -i "s/@VERSION@/${{ inputs.version }}/g" $MODULE.te
            make -f /usr/share/selinux/devel/Makefile
            cd -
          done
        shell: bash

      - name: Remove selinux packaging files on debian
        if: ${{ matrix.package_extension == 'deb' }}
        run: rm -f packaging/*-selinux.yaml
        shell: bash

      - name: Compile sources
        run: |
          sudo pip3 install conan==1.61.0 --prefix=/usr --upgrade

          sudo conan install . -s compiler.cppstd=17 -s compiler.libcxx=libstdc++11 --build=missing

          CMAKE="cmake3"
          if [ "${{ matrix.package_extension }}" = "deb" ]; then
            CMAKE="cmake"
          fi

          sudo $CMAKE \
                  -G "Ninja" \
                  -DDEBUG_ROBOT=OFF \
                  -DWITH_TESTING=OFF \
                  -DWITH_BENCH=ON \
                  -DWITH_MODULE_SIMU=OFF \
                  -DCMAKE_INSTALL_PREFIX=/usr \
                  -DWITH_STARTUP_SCRIPT=systemd \
                  -DWITH_ENGINE_LOGROTATE_SCRIPT=ON \
                  -DWITH_USER_BROKER=centreon-broker \
                  -DWITH_GROUP_BROKER=centreon-broker \
                  -DWITH_USER_ENGINE=centreon-engine \
                  -DWITH_GROUP_ENGINE=centreon-engine \
                  -DWITH_VAR_DIR=/var/log/centreon-engine \
                  -DWITH_DAEMONS=ON \
                  -DWITH_CREATE_FILES=OFF \
                  -DWITH_CONFIG_FILES=ON \
                  -DCMAKE_BUILD_TYPE=RelWithDebInfo \
                  -DNG=ON \
                  .

          sudo ninja
        shell: bash

      - name: Generate debug files
        run: |
          for file in $(find ./{lib/*.so,bin} -type f); do
            objcopy --only-keep-debug $file $file.debug
            objcopy --strip-debug $file
            objcopy --add-gnu-debuglink $file.debug $file
          done
        shell: bash

      - uses: ./.github/actions/package
        with:
          nfpm_file_pattern: "packaging/*.yaml"
          distrib: ${{ matrix.distrib }}
          package_extension: ${{ matrix.package_extension }}
          version: ${{ inputs.version }}
          release: ${{ inputs.release }}
          arch: ${{ matrix.arch }}
          commit_hash: ${{ inputs.commit_hash }}
          cache_key: cache-${{ github.sha }}-${{ matrix.package_extension}}-centreon-collect-${{ matrix.distrib }}-${{ matrix.arch }}-${{ github.head_ref || github.ref_name }}
          rpm_gpg_key: ${{ secrets.RPM_GPG_SIGNING_KEY }}
          rpm_gpg_signing_key_id: ${{ secrets.RPM_GPG_SIGNING_KEY_ID }}
          rpm_gpg_signing_passphrase: ${{ secrets.RPM_GPG_SIGNING_PASSPHRASE }}

      - name: Cleaning not needed packages
        shell: bash
        run: rm -rf *-debuginfo*.${{ matrix.package_extension }}

      # set condition to true if artifacts are needed
      - if: ${{ false }}
        name: Upload package artifacts
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: packages-${{ matrix.distrib }}-${{ matrix.arch }}
          path: ./*.${{ matrix.package_extension}}
          retention-days: 1
