name: Centreon collect packaging

on:
  workflow_call:
    inputs:
      major_version:
        required: true
        type: string
      minor_version:
        required: true
        type: string
      img_version:
        required: true
        type: string
      release:
        required: true
        type: string
      commit_hash:
        required: true
        type: string
      stability:
        required: true
        type: string
      legacy_engine:
        required: true
        type: boolean
      packages_in_artifact:
        required: true
        type: boolean

jobs:
  package:
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: centreon-collect-alma8
            distrib: el8
            package_extension: rpm
            runner: collect
            arch: amd64
          - image: centreon-collect-alma9
            distrib: el9
            package_extension: rpm
            runner: collect
            arch: amd64
          - image: centreon-collect-debian-bullseye
            distrib: bullseye
            package_extension: deb
            runner: collect
            arch: amd64
          - image: centreon-collect-debian-bookworm
            distrib: bookworm
            package_extension: deb
            runner: collect
            arch: amd64
          - image: centreon-collect-ubuntu-jammy
            distrib: jammy
            package_extension: deb
            runner: collect
            arch: amd64
          - image: centreon-collect-debian-bullseye-arm64
            distrib: bullseye
            package_extension: deb
            runner: collect-arm64
            arch: arm64
          - image: centreon-collect-debian-bookworm-arm64
            distrib: bookworm
            package_extension: deb
            runner: collect-arm64
            arch: arm64

    runs-on: ${{ fromJson(format('["self-hosted", "{0}"]', matrix.runner)) }}

    env:
      SCCACHE_PATH: "/usr/bin/sccache"
      SCCACHE_BUCKET: "centreon-github-sccache"
      SCCACHE_REGION: "eu-west-1"
      AWS_ACCESS_KEY_ID: ${{ secrets.COLLECT_S3_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.COLLECT_S3_SECRET_KEY }}

    container:
      image: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ matrix.image }}:${{ inputs.img_version }}
      credentials:
        username: ${{ secrets.DOCKER_REGISTRY_ID }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

    name: package ${{ matrix.distrib }} ${{ matrix.arch }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: compile and package collect
        uses: ./.github/actions/compile-package
        with:
          major_version: ${{ inputs.major_version }}
          minor_version: ${{ inputs.minor_version }}
          distrib: ${{ matrix.distrib }}
          package_extension: ${{ matrix.package_extension }}
          arch: ${{ matrix.arch }}
          release: ${{ inputs.release }}
          commit_hash: ${{ inputs.commit_hash }}
          stability: ${{ inputs.stability }}
          rpm_gpg_key: ${{ secrets.RPM_GPG_SIGNING_KEY }}
          rpm_gpg_signing_key_id: ${{ secrets.RPM_GPG_SIGNING_KEY_ID }}
          rpm_gpg_signing_passphrase: ${{ secrets.RPM_GPG_SIGNING_PASSPHRASE }}

      - name: Cleaning not needed packages
        shell: bash
        run: rm -rf *-debuginfo*.${{ matrix.package_extension }}

      # set condition to true if artifacts are needed
      - if: inputs.packages_in_artifact == true
        name: Upload package artifacts
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: packages-${{ matrix.distrib }}-${{ matrix.arch }}
          path: ./*.${{ matrix.package_extension}}
          retention-days: 1
