name: Centreon collect packaging

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      img_version:
        required: true
        type: string
      release:
        required: true
        type: string
      commit_hash:
        required: true
        type: string

jobs:
  package:
    runs-on: [self-hosted, collect]
    #runs-on: ubuntu-22.04

    strategy:
      matrix:
        include:
          # - image: centreon-collect-alma8
          #   distrib: el8
          #   package_extension: rpm
          - image: centreon-collect-alma9
            distrib: el9
            package_extension: rpm
          # - image: centreon-collect-debian-bullseye
          #   distrib: bullseye
          #   package_extension: deb

    container:
      image: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}/${{ matrix.image }}:${{ inputs.img_version }}
      credentials:
        username: ${{ secrets.DOCKER_REGISTRY_ID }}
        password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

    name: package ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - run: |
          id
          dnf install -y sudo
        shell: bash

      - name: Compile sources
        run: |
          sudo pip3 install conan==1.57.0 --prefix=/usr --upgrade
          sudo conan install . -s compiler.cppstd=14 -s compiler.libcxx=libstdc++11 --build=missing

          sudo cmake3 \
                  -G "Ninja" \
                  -DWITH_TESTING=OFF \
                  -DWITH_BENCH=ON \
                  -DWITH_MODULE_SIMU=OFF \
                  -DCMAKE_INSTALL_PREFIX=/usr \
                  -DWITH_ENGINE_LOGROTATE_SCRIPT=ON \
                  -DWITH_STARTUP_DIR=/usr/lib/systemd/system \
                  -DWITH_STARTUP_SCRIPT=systemd \
                  -DWITH_USER_BROKER=centreon-broker \
                  -DWITH_GROUP_BROKER=centreon-broker \
                  -DWITH_USER_ENGINE=centreon-engine \
                  -DWITH_GROUP_ENGINE=centreon-engine \
                  -DWITH_DAEMONS=ON \
                  -DWITH_CREATE_FILES=OFF \
                  -DWITH_CONFIG_FILES=ON \
                  -DCMAKE_BUILD_TYPE=RelWithDebInfo \
                  .

          sudo ninja -j 8
        shell: bash

      - name: generate debug files
        run: |
          mkdir /tmp/BUILDROOT

          # centreon-collect-client
          mkdir -p /tmp/BUILDROOT/usr/bin
          cp bin/ccc /tmp/BUILDROOT/usr/bin/

          # centreon-engine
          mkdir -p /tmp/BUILDROOT/usr/lib64/centreon-engine /tmp/BUILDROOT/usr/sbin
          cp lib/externalcmd.so /tmp/BUILDROOT/usr/lib64/centreon-engine/
          cp bin/centengine /tmp/BUILDROOT/usr/sbin/
          cp bin/centenginestats /tmp/BUILDROOT/usr/sbin/

          # centreon-broker-cbmod
          mkdir -p /tmp/BUILDROOT/usr/lib64/nagios
          cp lib/cbmod.so /tmp/BUILDROOT/usr/lib64/nagios/

          dnf install -y debugedit
          bash .github/scripts/find-debuginfo.sh
        shell: bash

      - run: ls -Rlh bin
      - run: ls -Rlh lib
      #- run: strip bin/*
      #- run: strip lib/*
      - run: ls -Rlh bin
      - run: ls -Rlh lib

      - run: ls -Rlh /tmp/BUILDROOT
      # - run: |
      #     dnf install -y mlocate
      #     updatedb
      #     locate libcentreon_clib.so

      - uses: ./.github/actions/package
        with:
          nfpm_file_pattern: "packaging/*.yaml"
          distrib: ${{ matrix.distrib }}
          package_extension: ${{ matrix.package_extension }}
          version: ${{ inputs.version }}
          release: ${{ inputs.release }}
          commit_hash: ${{ inputs.commit_hash }}
          cache_key: ${{ github.sha }}-${{ github.run_id }}-${{ matrix.package_extension }}-${{ matrix.distrib }}
          rpm_gpg_key: ${{ secrets.RPM_GPG_SIGNING_KEY }}
          rpm_gpg_signing_key_id: ${{ secrets.RPM_GPG_SIGNING_KEY_ID }}
          rpm_gpg_signing_passphrase: ${{ secrets.RPM_GPG_SIGNING_PASSPHRASE }}

      - name: Cache RPM files
        uses: actions/cache@v3
        with:
          path: ./*.rpm
          key: cache-${{ github.sha }}-rpmbuild-centreon-collect-${{ matrix.distrib }}-${{ github.head_ref || github.ref_name }}

      # - name: Cleaning not needed rpm packages
      #   shell: bash
      #   run: |
      #     rm -rf *-devel*.rpm
      #     rm -rf *-debuginfo*.rpm
      #     rm -rf *-debugsource*.rpm

      - name: Upload package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages-${{ matrix.distrib }}
          path: ./*.rpm
          retention-days: 1

  # package-deb:
  #   runs-on: [self-hosted, collect]
  #   strategy:
  #     matrix:
  #       include:
  #         - image: debian-bullseye
  #           distrib: bullseye
  #   name: package ${{ matrix.distrib }}

  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v3
  #       with:
  #         path: centreon-collect

  #     - name: Login to Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
  #         username: ${{ secrets.DOCKER_REGISTRY_ID }}
  #         password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}

  #     - name: debmake ${{ matrix.image }}
  #       uses: ./centreon-collect/.github/actions/runner-docker
  #       with:
  #         registry_url: ${{ vars.DOCKER_INTERNAL_REGISTRY_URL }}
  #         script_name: centreon-collect/.github/scripts/collect-deb-package
  #         image_name: centreon-collect-${{ matrix.image }}
  #         image_version: ${{ inputs.img_version }}
  #         env_variable: -e DISTRIB="${{ matrix.distrib }}" -e VERSION="${{ inputs.version }}" -e RELEASE="${{ inputs.release }}"

  #     - name: Use cache DEB files
  #       uses: actions/cache@v3
  #       with:
  #         path: ./*.deb
  #         key: cache-${{ github.sha }}-debbuild-centreon-collect-${{ matrix.distrib }}-${{ github.head_ref || github.ref_name }}
