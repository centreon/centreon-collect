name: Centreon collect packaging

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      img_version:
        required: true
        type: string
      release:
        required: true
        type: string

env:
  REGISTRY: centreon.jfrog.io/docker

jobs:
  package-rpm:
    runs-on: [self-hosted, collect]

    strategy:
      matrix:
        include:
#          - image: alma8
#            distrib: el8
          - image: alma9
            distrib: el9
    container:
      image: centreon.jfrog.io/docker/centreon-collect-${{ matrix.image }}:${{ inputs.img_version }}
      credentials:
        username: ${{ secrets.AUTOMATION_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
      options: --cpus 8
      volumes:
        - /src:/src
    name: package ${{ matrix.distrib }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - run: |
          cat /proc/cpuinfo
          cat /proc/meminfo

      - uses: lukka/get-cmake@latest

      - uses: lukka/run-cmake@v10
        with:
          configurePresetAdditionalArgs: "['-DWITH_TESTING=0', '-DWITH_BENCH=1', '-DCMAKE_INSTALL_PREFIX=/usr', '-DWITH_ENGINE_LOGROTATE_SCRIPT=1', '-DWITH_STARTUP_DIR=%{_unitdir}', '-DWITH_STARTUP_SCRIPT=systemd', '-DWITH_USER_BROKER=centreon-broker', '-DWITH_GROUP_BROKER=centreon-broker', '-DWITH_USER_ENGINE=centreon-engine', '-DWITH_GROUP_ENGINE=centreon-engine', '-DWITH_DAEMONS=y', '-DWITH_CONFIG_FILES=y', '-DCMAKE_BUILD_TYPE=RelWithDebInfo']"

      - run: |
          DESTDIR="/usr/local/src" ninja install
          exit 1
          export DISTRIB="${{ matrix.distrib }}"
          export VERSION="${{ inputs.version }}"
          export RELEASE="${{ inputs.release }}"
          bash ./ci/scripts/collect-rpm-package.sh
        shell: bash

      - name: Cache RPM files
        uses: actions/cache@v3
        with:
          path: ./*.rpm
          key: unsigned-cache-${{ github.sha }}-rpmbuild-centreon-collect-${{ matrix.distrib }}-${{ github.head_ref || github.ref_name }}

  sign-rpm:
    runs-on: ubuntu-22.04
    needs: [package-rpm]
    strategy:
      matrix:
        distrib: [el9]
        #distrib: [el8, el9]
    container:
      image: centreon.jfrog.io/docker/rpm-signing:ubuntu
      credentials:
        username: ${{ secrets.AUTOMATION_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
    name: sign ${{ matrix.distrib }}

    steps:
      - run: apt-get install -y zstd
        shell: bash

      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ./*.rpm
          key: unsigned-cache-${{ github.sha }}-rpmbuild-centreon-collect-${{ matrix.distrib }}-${{ github.head_ref || github.ref_name }}

      - run: echo "HOME=/root" >> $GITHUB_ENV
        shell: bash

      - run: rpmsign --addsign ./*.rpm
        shell: bash

      - uses: actions/cache@v3
        with:
          path: ./*.rpm
          key: cache-${{ github.sha }}-rpmbuild-centreon-collect-${{ matrix.distrib }}-${{ github.head_ref || github.ref_name }}

      - name: Cleaning not needed rpm packages
        shell: bash
        run: |
          rm -rf *-devel*.rpm
          rm -rf *-debuginfo*.rpm
          rm -rf *-debugsource*.rpm

      - name: Upload package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages-rpm-${{ matrix.distrib }}
          path: ./*.rpm
          retention-days: 1

  # package-deb:
  #   runs-on: [self-hosted, collect]
  #   strategy:
  #     matrix:
  #       include:
  #         - image: debian-bullseye
  #           distrib: bullseye
  #   name: package ${{ matrix.distrib }}

  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v3
  #       with:
  #         path: centreon-collect

  #     - name: Login to Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ secrets.AUTOMATION_USERNAME }}
  #         password: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}

  #     - name: debmake ${{ matrix.image }}
  #       uses: ./centreon-collect/.github/actions/runner-docker
  #       with:
  #         script_name: /src/centreon-collect/ci/scripts/collect-deb-package
  #         image_name: centreon-collect-${{ matrix.image }}
  #         image_version: ${{ inputs.img_version }}
  #         env_variable: -e DISTRIB="${{ matrix.distrib }}" -e VERSION="${{ inputs.version }}" -e RELEASE="${{ inputs.release }}"

  #     - name: Use cache DEB files
  #       uses: actions/cache@v3
  #       with:
  #         path: ./*.deb
  #         key: cache-${{ github.sha }}-debbuild-centreon-collect-${{ matrix.distrib }}-${{ github.head_ref || github.ref_name }}
