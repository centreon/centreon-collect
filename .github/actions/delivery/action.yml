name: "delivery"
description: "RPM and DEB packages delivery Centreon"
inputs:
  module_name:
    description: "The name of the module"
    required: true
  repository_name:
    description: "The name of the repository"
    required: true
  distrib:
    description: "The distribution used for packaging"
    required: true
  nexus_username:
    description: "Artifact Manager technical username"
    required: true
  nexus_password:
    description: "Artifact Manager technical password"
    required: true
  version:
    description: "Centreon packaged version"
    required: true
  minor_version:
    description: "Centreon packaged version"
    required: true
  release:
    description: The release number
    required: true
  cache_key:
    description: "The cached package key"
    required: true
  update_repo_path:
    description: "The update repo script path"
    required: true
  cloudfront_id:
    description: "The cloudfront ID for repo url"
    required: true
  yum_repo_address:
    description: "The yum legacy repo address"
    required: true
  yum_repo_key:
    description: "The yum repo key"
    required: true
  yum_repo_url:
    description: "The legacy yum repo url"
    required: true
  artifactory_token:
    description: "The token for artifactory"
    required: true

runs:
  using: "composite"
  steps:
    - name: Build name for RPM
      shell: bash
      if: ${{ inputs.distrib == 'el7' || inputs.distrib == 'el8' }}
      run: |
        echo "extfile=rpm" >> $GITHUB_ENV

    - name: Build name for DEB
      shell: bash
      if: ${{ inputs.distrib == 'bullseye' }}
      run: |
        echo "extfile=deb" >> $GITHUB_ENV

    - name: detect stability
      run: |
        if [[ -z "$GITHUB_HEAD_REF" ]];
        then
          BRANCHNAME="$GITHUB_REF_NAME"
        else
          BRANCHNAME="$GITHUB_HEAD_REF"
        fi

        case "$BRANCHNAME" in
          develop | dev-[2-9][0-9].[0-9][0-9].x)
            echo "stability=unstable" >> $GITHUB_ENV
            ;;
          release* | hotfix*)
            echo "stability=testing" >> $GITHUB_ENV
            ;;
          master | [2-9][0-9].[0-9][0-9].x)
            echo "stability=stable" >> $GITHUB_ENV
            ;;
          *)
            echo "stability=canary" >> $GITHUB_ENV
            ;;
        esac
      shell: bash

    - name: Use cache files
      uses: actions/cache@v3
      with:
        path: ./*.${{ env.extfile }}
        key: ${{ inputs.cache_key }}
        restore-keys: ${{ inputs.cache_key }}

    - uses: jfrog/setup-jfrog-cli@v3
      env:
        JF_URL: https://centreon.jfrog.io
        JF_ACCESS_TOKEN: ${{ inputs.artifactory_token }}

    - if: ${{ startsWith(inputs.distrib, 'el') && env.stability != 'canary' }}
      name: Publish RPMs to packages.centreon.com
      run: |
        FILES="*.${{ env.extfile }}"

        echo "[DEBUG] - Version: ${{ inputs.version }}"
        echo "[DEBUG] - Distrib: ${{ inputs.distrib }}"

        if [ -z "${{ inputs.module_name }}" ]; then
          echo "module name is required"
          exit 1
        fi

        if [ -z "${{ inputs.distrib }}" ]; then
          echo "distrib is required"
          exit 1
        fi

        mkdir noarch x86_64

        for FILE in $FILES; do
          echo "[DEBUG] - File: $FILE"
          ARCH=$(echo $FILE | grep -oP '(x86_64|noarch)')
          echo "[DEBUG] - Arch: $ARCH"
          cp "$FILE" "$ARCH"
        done

        for ARCH in "noarch" "x86_64"; do
          if [ "$(ls -A $ARCH)" ]; then
            if [ "${{ env.stability }}" == "stable" ]; then
              jf rt upload "$ARCH/*.rpm" "rpm-standard/${{ inputs.version }}/${{ inputs.distrib }}/${{ env.stability }}/$ARCH/" --flat
            else
              jf rt upload "$ARCH/*.rpm" "rpm-standard/${{ inputs.version }}/${{ inputs.distrib }}/${{ env.stability }}/$ARCH/${{ inputs.module_name }}/" --sync-deletes="rpm-standard/${{ inputs.version }}/${{ inputs.distrib }}/${{ env.stability }}/$ARCH/${{ inputs.module_name }}/" --flat
            fi
          fi
        done
      shell: bash

    - if: ${{ inputs.distrib == 'bullseye' && env.stability != 'canary' }}
      name: Publish DEBs to packages.centreon.com
      run: |
        FILES="*.${{ env.extfile }}"

        for FILE in $FILES; do
          echo "[DEBUG] - File: $FILE"

          VERSION=${{ inputs.version }}
          DISTRIB=$(echo $FILE | cut -d '_' -f2 | cut -d '-' -f2)
          ARCH=$(echo $FILE | cut -d '_' -f3 | cut -d '.' -f1)

          echo "[DEBUG] - Version: $VERSION"

          jf rt upload "$FILE" "apt-standard-${{ inputs.version }}-${{ env.stability }}/pool/" --deb "${{ inputs.distrib }}/main/$ARCH"
        done
      shell: bash