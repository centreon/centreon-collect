name: "delivery"
description: "RPM and DEB packages delivery Centreon"
inputs:
  distrib:
    description: "The distribution used for packaging"
    required: true
  repos_username:
    description: "Artifact Manager technical username"
    required: true
  repos_password:
    description: "Artifact Manager technical password"
    required: true
  version:
    description: "Centreon packaged version"
    required: true
  cache_key:
    description: "The cached package key"
    required: true
  version:
    description: "The version XX.YY.ZZ of centreon-collect to deliver"
    required: true
  release:
    description: "The release of centreon-collect to deliver"
    required: true

runs:
  using: "composite"
  steps:
    - name: Build name for RPM
      shell: bash
      if: ${{ inputs.distrib == 'el7' || inputs.distrib == 'el8' }}
      run: |
        echo "build=rpmbuild-centreon-collect" >> $GITHUB_ENV
        echo "extfile=rpm" >> $GITHUB_ENV

    - name: Build name for DEB
      shell: bash
      if: ${{ inputs.distrib == 'buster' || inputs.distrib == 'bullseye' }}
      run: |
        echo "build=debbuild-centreon-collect" >> $GITHUB_ENV
        echo "extfile=deb" >> $GITHUB_ENV

    - name: Use cache files
      uses: actions/cache@v3
      with:
        path: ./*.${{ env.extfile }}
        key: ${{ inputs.cache_key }}-${{ env.build }}-${{ inputs.distrib }}-${{ inputs.version }}-${{ inputs.release }}
        restore-keys: ${{ inputs.cache_key }}-${{ env.build }}-${{ inputs.distrib }}-${{ inputs.version }}-${{ inputs.release }}

    - name: Publish packages
      run: |
        if [[ -z "$GITHUB_HEAD_REF" ]];
        then
          BRANCHNAME="$GITHUB_REF_NAME"
        else
          BRANCHNAME="$GITHUB_HEAD_REF"
        fi
        echo "[DEBUG] - Branch name: $BRANCHNAME"
        case "$BRANCHNAME" in
          develop | dev-[2-9][0-9].[0-9][0-9].x)
            REPO="unstable"
            ;;
          release* | hotfix*)
            REPO="testing"
            ;;
          master | [2-9][0-9].[0-9][0-9].x)
            REPO="stable"
            ;;
          *)
            echo -n "[INFO] NO DELIVERY FOR THIS BRANCH"
            exit 0
            ;;
        esac
        FILES="*.${{ env.extfile }}";
        DISTRIB="${{ inputs.distrib }}";
        echo "[DEBUG] - Repo: $REPO"
        echo "[DEBUG] - FILES: $FILES"
        echo "[DEBUG] - DISTRIB: $DISTRIB"
        for FILE in $FILES
        do
          echo "[DEBUG] - File: $FILE"
          VERSION=${{ inputs.version }}
          echo "[DEBUG] - Version: $VERSION"
          if [[ "${{ env.extfile }}" == "deb" ]] ; then
            echo "[DEBUG] - https://artifactory.apps.centreon.com/artifactory/debian-$VERSION-$REPO/pool/$FILE;deb.distribution=bullseye;deb.component=main;deb.architecture=amd64"
            curl -v -u "${{ inputs.repos_username }}":"${{ inputs.repos_password }}" -X PUT "https://artifactory.apps.centreon.com/artifactory/debian-$VERSION-$REPO/pool/$FILE;deb.distribution=bullseye;deb.component=main;deb.architecture=amd64" -T "./$FILE"
          else
            echo "[DEBUG] - https://artifactory.apps.centreon.com/artifactory/rpm-$VERSION-$REPO/$DISTRIB/$REPO/x86_64/centreon-collect"
            curl -v -u "${{ inputs.repos_username }}":"${{ inputs.repos_password }}" -X PUT "https://artifactory.apps.centreon.com/artifactory/rpm-$VERSION-$REPO/$DISTRIB/$REPO/x86_64/centreon-collect/$FILE" -T "./$FILE"
          fi
        done
      shell: bash
