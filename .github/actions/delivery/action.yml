name: "delivery"
description: "RPM and DEB packages delivery Centreon"
inputs:
  distrib:
    description: "The distribution used for packaging"
    required: true
  repos_username:
    description: "Artifact Manager technical username"
    required: true
  repos_password:
    description: "Artifact Manager technical password"
    required: true
  version:
    description: "Centreon packaged version"
    required: true
  cache_key:
    description: "The cached package key"
    required: true
  update_repo_path:
    description: "The update repo script path"
    required: true
  cloudfront_id:
    description: "The cloudfront ID for repo url"
    required: true
  yum_repo_address:
    description: "The yum legacy repo address"
    required: true
  yum_repo_key:
    description: "The yum repo key"
    required: true
  yum_repo_url:
    description: "The legacy yum repo url"
    required: true

runs:
  using: "composite"
  steps:
    - name: Build name for RPM
      shell: bash
      if: ${{ inputs.distrib == 'el7' || inputs.distrib == 'el8' }}
      run: |
        echo "build=rpmbuild-centreon-collect" >> $GITHUB_ENV
        echo "extfile=rpm" >> $GITHUB_ENV

    - name: Build name for DEB
      shell: bash
      if: ${{ inputs.distrib == 'buster' || inputs.distrib == 'bullseye' }}
      run: |
        echo "build=debbuild-centreon-collect" >> $GITHUB_ENV
        echo "extfile=deb" >> $GITHUB_ENV

    - name: Use cache files
      uses: actions/cache@v3
      with:
        path: ./*.${{ env.extfile }}
        key: ${{ inputs.cache_key }}-${{ env.build }}-${{ inputs.distrib }}
        restore-keys: ${{ inputs.cache_key }}-${{ env.build }}-${{ inputs.distrib }}

    - name: Setup awscli
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        sudo unzip -q awscliv2.zip
        sudo ./aws/install
      shell: bash

    - name: Publish packages
      run: | 
        set -x
        if [[ -z "$GITHUB_HEAD_REF" ]];
        then
          BRANCHNAME="$GITHUB_REF_NAME"
        else
          BRANCHNAME="$GITHUB_HEAD_REF"
        fi
        echo "[DEBUG] - Branch name: $BRANCHNAME"
        case "$BRANCHNAME" in
          develop | dev-[2-9][0-9].[0-9][0-9].x | delivery-to-old-yum-repositories)
            SUBREPO="unstable"
            ;;
          release* | hotfix*)
            SUBREPO="testing"
            ;;
          master | [2-9][0-9].[0-9][0-9].x)
            SUBREPO="stable"
            ;;
          *)
            echo -n "[INFO] NO DELIVERY FOR THIS BRANCH"
            exit 0
            ;;
        esac

        FILES="*.${{ env.extfile }}";

        for FILE in $FILES
        do
          echo "[DEBUG] - File: $FILE"
          VERSION=${{ inputs.version }}
          MAJOR="$VERSION"
          DISTRIB="${{ inputs.distrib }}";
          REPOTYPE="$SUBREPO"
          ARCH=$(echo $FILE | grep -oP '(x86_64|noarch)')
          PROJECT=${{ inputs.module_name }}
          FOLDER=$(basename $FILE .rpm)
          PROJECT_PATH="standard"
          
          echo "[DEBUG] - Arch: $ARCH"
          echo "[DEBUG] - Suprepo: $SUBREPO"
          #echo "[DEBUG] - Repo: $REPO"
          echo "[DEBUG] - FILES: $FILES"
          echo "[DEBUG] - DISTRIB: $DISTRIB"
          echo "[DEBUG] - Version: $VERSION"

          if [[ "${{ env.extfile }}" == "deb" ]] ; then
            echo "[DEBUG] - https://artifactory.apps.centreon.com/artifactory/debian-$VERSION-$REPO/pool/$FILE;deb.distribution=bullseye;deb.component=main;deb.architecture=amd64"
            curl -v -u "${{ inputs.repos_username }}":"${{ inputs.repos_password }}" -X PUT "https://artifactory.apps.centreon.com/artifactory/debian-$VERSION-$REPO/pool/$FILE;deb.distribution=bullseye;deb.component=main;deb.architecture=amd64" -T "./$FILE"
          else
            #echo "[DEBUG] - https://artifactory.apps.centreon.com/artifactory/rpm-$VERSION-$REPO/$DISTRIB/$REPO/x86_64/centreon-collect"
            #curl -v -u "${{ inputs.repos_username }}":"${{ inputs.repos_password }}" -X PUT "https://artifactory.apps.centreon.com/artifactory/rpm-$VERSION-$REPO/$DISTRIB/$REPO/x86_64/centreon-collect/$FILE" -T "./$FILE"
            
            eval `ssh-agent`
            ssh-add - <<< "${{ inputs.yum_repo_key }}"

            TARGET="/srv/centreon-yum/yum.centreon.com/$PROJECT_PATH/$MAJOR/$DISTRIB/$REPOTYPE/$ARCH/$PROJECT/$FOLDER"
            PROJECT_LOCATION="/srv/centreon-yum/yum.centreon.com/$PROJECT_PATH/$MAJOR/$DISTRIB/$REPOTYPE/$ARCH/$PROJECT"
            METADATAS="/srv/centreon-yum/yum.centreon.com/$PROJECT_PATH/$MAJOR/$DISTRIB/$REPOTYPE/$ARCH"

            echo "[DEBUG] - Folder: $FOLDER"
            echo "[DEBUG] - Project : $PROJECT"
            echo "[DEBUG] - Target : $TARGET"
            echo "[DEBUG] - PROJECT_LOCATION : $PROJECT_LOCATION"

            ssh -o StrictHostKeyChecking=no "${{ inputs.yum_repo_address }}" mkdir -p "$TARGET"
            scp -o StrictHostKeyChecking=no "$FILE" "${{ inputs.yum_repo_address }}:$TARGET"
            #ssh -o StrictHostKeyChecking=no "${{ inputs.yum_repo_address }}" "ls -drc $PROJECT_LOCATION/* 2>&- | head -n -6 | xargs rm -rf"
            ssh -o StrictHostKeyChecking=no "${{ inputs.yum_repo_address }}" "sh "${{ inputs.update_repo_path }}" $METADATAS"
          fi
        done
      shell: bash
