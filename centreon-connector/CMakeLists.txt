# Global options.
project(connectors CXX)

set(CONNECTOR_VERSION "${COLLECT_MAJOR}.${COLLECT_MINOR}.${COLLECT_PATCH}")
add_definitions(-DCENTREON_CONNECTOR_VERSION=\"${CONNECTOR_VERSION}\")

include(${PROJECT_SOURCE_DIR}/cmake/FindSSH.cmake)
include(${PROJECT_SOURCE_DIR}/cmake/Findperl.cmake)

include(${CMAKE_BINARY_DIR}/conan_paths.cmake)

# Generate code to dynamically load modules.

# Disable some warnings generated by Embedded Perl.
get_property(EMBEDDED_PERL_CXXFLAGS SOURCE ${PROJECT_SOURCE_DIR}/perl/src/embedded_perl.cc
  PROPERTY COMPILE_FLAGS)
if (EMBEDDED_PERL_CXXFLAGS)
  string(REGEX REPLACE "-pedantic *"
    EMBEDDED_PERL_CXXFLAGS "${EMBEDDED_PERL_CXXFLAGS}")
  set_property(SOURCE "${PROJECT_SOURCE_DIR}/perl/src/embedded_perl.cc"
    PROPERTY COMPILE_FLAGS "${EMBEDDED_PERL_CXXFLAGS}")
endif ()

# We will use pkg-config if available.
include_directories(${PROJECT_SOURCE_DIR}/common/inc)
include_directories(${CMAKE_SOURCE_DIR}/centreon-clib/inc)

add_subdirectory(perl)
add_subdirectory(ssh)
link_directories(${CMAKE_SOURCE_DIR}/build/centreon-clib/)

# Testing.
if (WITH_TESTING)
  set_source_files_properties(${PROJECT_SOURCE_DIR}/perl/src/xs_init.cc PROPERTIES GENERATED TRUE)
  include_directories(${GTest_INCLUDE_DIRS})
  include_directories(/usr/lib64/perl5/CORE)

  link_directories(${GTest_LIB_DIRS})

  include_directories(${PROJECT_SOURCE_DIR}/perl/inc)
  include_directories(${PROJECT_SOURCE_DIR}/ssh/inc)
  add_definitions(-DBUILD_PATH="${CMAKE_BINARY_DIR}")

  add_executable(ut_connector
    # Core sources
    ${PROJECT_SOURCE_DIR}/perl/src/embedded_perl.cc
    ${PROJECT_SOURCE_DIR}/common/src/log.cc
    ${PROJECT_SOURCE_DIR}/perl/src/pipe_handle.cc
    ${PROJECT_SOURCE_DIR}/perl/src/script.cc
    ${PROJECT_SOURCE_DIR}/perl/src/xs_init.cc
    ${PROJECT_SOURCE_DIR}/ssh/src/checks/check.cc
    ${PROJECT_SOURCE_DIR}/ssh/src/checks/result.cc
    ${PROJECT_SOURCE_DIR}/ssh/src/checks/timeout.cc
    ${PROJECT_SOURCE_DIR}/ssh/src/multiplexer.cc
    ${PROJECT_SOURCE_DIR}/ssh/src/orders/options.cc
    ${PROJECT_SOURCE_DIR}/ssh/src/orders/parser.cc
    ${PROJECT_SOURCE_DIR}/ssh/src/sessions/credentials.cc
    ${PROJECT_SOURCE_DIR}/ssh/src/sessions/session.cc
    ${PROJECT_SOURCE_DIR}/ssh/src/sessions/socket_handle.cc
    ${PROJECT_SOURCE_DIR}/ssh/src/reporter.cc
    # Test sources.
    ${PROJECT_SOURCE_DIR}/perl/test/main.cc
    ${PROJECT_SOURCE_DIR}/perl/test/connector.cc
    ${PROJECT_SOURCE_DIR}/perl/test/embedded_perl.cc
    ${PROJECT_SOURCE_DIR}/ssh/test/buffer_handle.cc
    ${PROJECT_SOURCE_DIR}/ssh/test/checks.cc
    ${PROJECT_SOURCE_DIR}/ssh/test/connector.cc
    ${PROJECT_SOURCE_DIR}/ssh/test/fake_listener.cc
    ${PROJECT_SOURCE_DIR}/ssh/test/orders.cc
    ${PROJECT_SOURCE_DIR}/ssh/test/reporter.cc
    ${PROJECT_SOURCE_DIR}/ssh/test/sessions.cc
    )
  add_dependencies(ut_connector centreon_connector_perl)
  add_dependencies(ut_connector centreon_clib)
  target_link_libraries(ut_connector ${GTest_LIBS} centreon_clib ${PERL_LIBRARIES} ${fmt_LIBS} ${spdlog_LIBS} ${LIBSSH2_LIBRARIES})

endif (WITH_TESTING)
