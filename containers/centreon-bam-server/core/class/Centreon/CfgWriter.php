<?php
/*
 * Centreon
 *
 * Source Copyright 2005-2016 Centreon
 *
 * Unauthorized reproduction, copy and distribution
 * are not allowed.
 *
 * For more informations : contact@centreon.com
 *
 */

/*
 *  Checks if Group already exists
 *  if it exists, function returns false
 *  otherwise, it returns true
 */

/*
 *  Class that allows to write Nagios configuration files
 */
class CentreonBam_CfgWriter
{
	protected $_buffer;
	protected $_fd;
	protected $_xmlBuffer;
	protected $_centreon;
	protected $_filePath;

	/*
	 *  Constructor
	 */
	function __construct($centreon, $fileFullPath)
	{
		$this->_centreon = $centreon;
		$this->_buffer = "";
		$this->_xmlBuffer = new CentreonBam_Xml();
		$this->_filePath = $fileFullPath;
		$this->_createFile();
	}

	/*
	 *  Creates the file
	 */
	protected function _createFile()
	{
		if (!$this->_fd = fopen($this->_filePath, 'w')) {
			echo _("Could not create file") . " : " . $this->_filePath . "<br />";
			exit;
		}
		$this->createFileHeader();
	}

	/*
	 *  Writes basic text line to buffer
	 *  Returns the length of written text
	 */
	private function writeText($text)
	{
		$this->_buffer .= $text;
		return (strlen($text));
	}

	/*
	 *  Inserts Header of the file
	 */
	private function createFileHeader()
	{
		$time = date("F j, Y, g:i a");
		$by = $this->_centreon->user->get_name();
		$len = $this->writeText("###################################################################\n");
		$this->writeText("#                                                                 #\n");
		$this->writeText("#                       GENERATED BY CENTREON                     #\n");
		$this->writeText("#                                                                 #\n");
		$this->writeText("#               Developped by :                                   #\n");
		$this->writeText("#                   - Julien Mathis                               #\n");
		$this->writeText("#                   - Romain Le Merlus                            #\n");
		$this->writeText("#                                                                 #\n");
		$this->writeText("#                           www.centreon.com                      #\n");
		$this->writeText("#                For information : contact@centreon.com           #\n");
		$this->writeText("###################################################################\n");
		$this->writeText("#                                                                 #\n");
		$this->writeText("#         Last modification " . $time);

		$margin = strlen($time);
		$margin = $len - 28 - $margin - 2;

		for ($i = 0; $i != $margin; $i++) {
			$this->writeText(" ");
		}

		$this->writeText("#\n");
		$this->writeText("#         By " . $by);
		$margin = $len - 13 - strlen($by) - 2;

		for ($i = 0; $i != $margin; $i++) {
			$this->writeText(" ");
		}
		$this->writeText("#\n");
		$this->writeText("#                                                                 #\n");
		$this->writeText("###################################################################\n\n");
	}

	/*
	 *  Defines cfg type
	 */
	public function start_cfg($type)
	{
		$this->writeText("define " . $type . "{\n");
		$this->_xmlBuffer->startElement($type);
	}

	/*
	 *  Ends cfg
	 */
	public function end_cfg()
	{
		$this->writeText("\t}\n\n");
		$this->_xmlBuffer->endElement();
	}

	/*
	 *  sets attributes
	 */
	public function attribute($key, $value)
	{
		$len = strlen($key);
	 	if ($len <= 9) {
	    	$this->writeText("\t" . $key . "\t\t\t\t" . $value . "\n");
	 	} elseif ($len > 9 && $len <= 18) {
	    	$this->writeText("\t" . $key . "\t\t\t" . $value . "\n");
	  	} elseif ($len >= 19 && $len <= 27) {
	    	$this->writeText("\t" . $key . "\t\t" . $value . "\n");
	  	} elseif ($len > 27) {
	    	$this->writeText("\t" . $key . "\t" . $value . "\n");
	  	}
	   $this->_xmlBuffer->writeElement($key, $value);
	}

	/*
	 * Writes in file
	 */
	public function createCfgFile()
	{
		if (!(strlen($this->_buffer)) || !(fwrite($this->_fd, $this->_buffer))) {
			echo _("Could not write in file") . " : " . $this->_filePath . "<br />";
			exit;
		}
		fclose($this->_fd);
	}

	/*
	 * Returns XML format
	 */
	public function getXML()
	{
		return $this->_xmlBuffer;
	}
}