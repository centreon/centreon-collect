/*
**  Copyright 2009 MERETHIS
**  This file is part of CentreonBroker.
**
**  CentreonBroker is free software: you can redistribute it and/or modify it
**  under the terms of the GNU General Public License as published by the Free
**  Software Foundation, either version 2 of the License, or (at your option)
**  any later version.
**
**  CentreonBroker is distributed in the hope that it will be useful, but
**  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
**  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
**  for more details.
**
**  You should have received a copy of the GNU General Public License along
**  with CentreonBroker.  If not, see <http://www.gnu.org/licenses/>.
**
**  For more information : contact@centreon.com
*/

#ifndef EVENT_SUBSCRIBER_H_
# define EVENT_SUBSCRIBER_H_

# include <string>

namespace            CentreonBroker
{
  // Forward declaration.
  namespace          Events
  { class            Event; }

  /**
   *  \class EventSubscriber event_subscriber.h "event_subscriber.h"
   *
   *  \brief EventSubscribers can receive events generated by the
   *         EventPublisher.
   *
   *  An EventSubscriber can subscribe against the EventPublisher to receive
   *  events when they occur. The process is simple : at startup the
   *  EventSubscriber will subscribe to the EventPublisher and will then be
   *  called through its OnEvent() overloaded method whenever an event occurs.
   */
  class              EventSubscriber
  {
   protected:
                     EventSubscriber();
                     EventSubscriber(const EventSubscriber& es);
    EventSubscriber& operator=(const EventSubscriber& es);

   public:
    virtual          ~EventSubscriber();
    virtual void     OnEvent(Events::Event* e) = 0;
  };
}

#endif /* !EVENT_SUBSCRIBER_H_ */
