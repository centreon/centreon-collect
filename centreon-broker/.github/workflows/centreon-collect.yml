name: Centreon collect

on:
  pull_request_target:
    types:
      - closed
    branches:
      - develop
    paths-ignore:
      - 'gorgone/**'
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - 'gorgone/**'

env:
  REGISTRY: registry-docker.centreon.com/docker-global

jobs:
  centreon-collect-test:
    runs-on: ubuntu-latest
#    runs-on: [self-hosted, collect]
    strategy:
      matrix:
        include:
          - image: centos7
            version: test-22.10
          - image: alma8
            version: test-22.10
          - image: debian-buster
            version: test-22.10
          - image: debian-bullseye
            version: test-22.10
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REPOS_USERNAME }}
          password: ${{ secrets.REPOS_PASSWORD }}
      - name: Test ${{ matrix.image }}
        uses: ./.github/actions/runner-docker
        with:
          script_name: /src/ci/scripts/collect-unit-tests
          image_name: centreon-collect-${{ matrix.image }}
          image_version: ${{ matrix.version }}

  rpm-packaging:
    runs-on: ubuntu-latest
#runs-on: [self-hosted, collect]
    strategy:
      matrix:
        include:
          - image: centos7
            version: test-22.10
            distrib: el7
          - image: alma8
            version: test-22.10
            distrib: el8
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REPOS_USERNAME }}
          password: ${{ secrets.REPOS_PASSWORD }}

      - name: make rpm ${{ matrix.image }}
        uses: ./.github/actions/runner-docker
        with:
          script_name: /src/ci/scripts/collect-rpm-package
          image_name: centreon-collect-${{ matrix.image }}
          image_version: ${{ matrix.version }}
          env_variable: -e DISTRIB="${{ matrix.distrib }}" -e VERSION="22.10.1" -e RELEASE="1"

      - name: Use cache RPM files
        uses: actions/cache@v3
        env:
          cache-name-rpmbuild: cache-${{ github.sha }}-${{ github.run_id }}-rpmbuild-centreon-collect-${{ matrix.distrib }}
        with:
          path: ./*.rpm
          key: ${{ env.cache-name-rpmbuild }}

  debian-packaging:
    runs-on: ubuntu-latest
#runs-on: [self-hosted, collect]
    strategy:
      matrix:
        include:
          - image: debian-buster
            version: test-22.10
            distrib: buster
          - image: debian-bullseye
            version: test-22.10
            distrib: bullseye
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          path: centreon-collect
      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REPOS_USERNAME }}
          password: ${{ secrets.REPOS_PASSWORD }}

      - name: debmake ${{ matrix.image }}
        uses: ./centreon-collect/.github/actions/runner-docker
        with:
          script_name: /src/centreon-collect/ci/scripts/collect-deb-package
          image_name: centreon-collect-${{ matrix.image }}
          image_version: ${{ matrix.version }}
          env_variable: -e DISTRIB="${{ matrix.distrib }}" -e VERSION="22.10.1" -e RELEASE="1"

      - name: Use cache DEB files
        uses: actions/cache@v3
        env:
          cache-name-debbuild: cache-${{ github.sha }}-${{ github.run_id }}-debbuild-centreon-collect-${{ matrix.distrib }}
        with:
          path: ./*.deb
          key: ${{ env.cache-name-debbuild }}

  delivery-debian:
    needs: [debian-packaging]
    runs-on: ubuntu-22.04
    name: Delivery
    strategy:
      matrix:
        distrib: [buster, bullseye]
    steps:
      - name: Use cache DEB files
        uses: actions/cache@v3
        env:
          cache-name-debbuild: cache-${{ github.sha }}-${{ github.run_id }}-debbuild-centreon-collect-${{ matrix.distrib }}
        with:
          path: ./*.deb
          key: ${{ env.cache-name-debbuild }}
          restore-keys: |
            ${{ env.cache-name-debbuild }}

      - name: Publish DEB to Nexus
        run: |
          case $GITHUB_HEAD_REF in
            MON*)
              REPO=unstable
              ;;
            release* | hotfix*)
              REPO=testing
              ;;
            master | main | [0-9]{2}\.[0-9]{2}.)
              REPO=stable
              ;;
            *)
              echo -n "[INFO] Non conventional branch name. Please rename your branch to meet the requirements"
              exit 1
              ;;
          esac

          for FILE in *.deb;
          do

            VERSION=$(echo $FILE | grep -oP '[0-9]{2}\.[0-9]{2}')
            DISTRIB=${{ matrix.distrib }}
            ARCH=$(echo $FILE | grep -oP '(amd64)')
            MODULE=$(echo $FILE | grep -oP 'centreon-([a-z]+)')

            echo "Repo: $REPO"
            echo "Version: $VERSION"
            echo "Distrib: $DISTRIB"
            echo "Arch: $ARCH"
            echo "Module: $MODULE"

            curl -v -u ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}:${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }} -H "Content-Type: multipart/form-data" --data-binary "@./$FILE" "http://nexus-svc.nexus.svc.cluster.local:8081/repository/$VERSION-$REPO/"
          done

  delivery-centos:
    needs: [rpm-packaging]
    runs-on: ubuntu-22.04
    name: Delivery
    strategy:
      matrix:
        distrib: [el7, el8]
    steps:
      - name: Use cache RPM files
        uses: actions/cache@v3
        env:
          cache-name-rpmbuild: cache-${{ github.sha }}-${{ github.run_id }}-rpmbuild-centreon-collect-${{ matrix.distrib }}
        with:
          path: ./*.rpm
          key: ${{ env.cache-name-rpmbuild }}
          restore-keys: |
            ${{ env.cache-name-rpmbuild }}

      - name: Publish RPMS to Nexus
        run: |
          case $GITHUB_HEAD_REF in
            MON*)
              REPO=unstable
              ;;
            release* | hotfix*)
              REPO=testing
              ;;
            master | main | [0-9]{2}\.[0-9]{2}.)
              REPO=stable
              ;;
            *)
              echo -n "[INFO] Non conventional branch name. Please rename your branch to meet the requirements"
              exit 1
              ;;
          esac


          for FILE in *.rpm;
          do
            VERSION=$(echo $FILE | grep -oP '[0-9]{2}\.[0-9]{2}')
            DISTRIB=$(echo $FILE | grep -oP 'el[0-9]')
            ARCH=$(echo $FILE | grep -oP '(x86_64|noarch)')
            MODULE=$(echo $FILE | grep -oP 'centreon-([a-z]+)')

            echo "Repo: $REPO"
            echo "Version: $VERSION"
            echo "Distrib: $DISTRIB"
            echo "Arch: $ARCH"
            echo "Module: $MODULE"

            curl -v -u ${{ secrets.NEXUS_RPMS_REPOSITORY_USERNAME }}:${{ secrets.NEXUS_RPMS_REPOSITORY_PASSWORD }} --upload-file ./$FILE "http://nexus-svc.nexus.svc.cluster.local:8081/repository/standard/$VERSION/$DISTRIB/$REPO/$ARCH/$MODULE/"
          done
