/**
 *  @page correlation The Correlation Module
 *
 *  @section correlationintro Introduction
 *
 *  The correlation module is an advanced feature of Centreon Broker
 *  that provide an effective way to reduce monitoring information
 *  displayed in Centreon to the core issues. It sorts most important
 *  issues on your infrastructure based on a dependency setup so that
 *  your monitoring display is not polluted with non-root issues.
 *
 *  The correlation module is based on a dependency setup which must be
 *  provided in its own file. The system administrator configures links
 *  between nodes of his IT network so that the correlation engine will
 *  know which issues are root issues. There are two types of link
 *  between objects : parenting and dependency.
 *
 *  Of course to aggregate all node statuses, only one correlation
 *  engine must be set up in the entire monitored network.
 *
 *
 *  @section correlationprocess The Correlation Process
 *
 *  The goal of the correlation process is to provide more useful
 *  monitoring information. Links between the IT network nodes are
 *  declared so that a node which is checked by a monitoring engine can
 *  be retagged as unknown (ie. undefined state). Every non-OK node has
 *  an 'issue' which is maintained as long as the node is non-OK (no
 *  issue change between WARNING and CRITICAL states for example).
 *  Issues can have parent issues which is useful for the monitoring
 *  frontend to get root issues (issues which potentially cause other
 *  nodes to fail). Root issues are issues which do not have any parent.
 *
 *
 *  @section correlationparent Parent Link
 *
 *  The goal of the parent links are to provide a way to formalize a way
 *  to access a node (for example a network path to a server). This
 *  means that a node will declared as unknown only if no access to the
 *  node exists (ie. all parents are non-OK).
 *
 *  In Centreon Broker when a node has parents, all parents must be in a
 *  non-OK state for the correlation engine to retag the node as unknown
 *  and to declare a parenting between the node issue and all of its
 *  parents' issues. The parenting is maintained as long as all parents
 *  are non-OK. As soon as a parent is OK again, all parenting are
 *  dropped and the node become a root issue on its own.
 *
 *
 *  @section correlationdependency Dependency Link
 *
 *  The goal of the dependency links are to provide a way to formalize a
 *  node prerequisite to work properly. This means that a node will be
 *  declared as unknown when a single dependency node is non-OK.
 *
 *  In Centreon Broker when a node has one or multiple dependency, as
 *  soon as one of these dependencies is non-OK, the node is retagged as
 *  unknown and a parenting between the node issue and the dependency
 *  issue is created. The parenting is maintained as long as the node or
 *  its dependency is non-OK. Of course, multiple dependencies can fail
 *  at different times. In this case, the parentings between issues are
 *  created independently for each dependency.
 *
 *
 *  @section correlationsetup Setup
 *
 *  To provide effective correlation, only one correlation engine must
 *  be declared in the whole IT network. All pollers should provide
 *  their monitoring information to the Centreon Broker instance which
 *  has the correlation engine.
 *
 *
 *  @section correlationconfig Configuration
 *
 *  Setting up a correlation engine is easy. It is a root block in
 *  Centreon Broker's configuration file. It supports configuration
 *  elements which are listed in the table below :
 *
 *  <table>
 *  <tr>
 *    <td><b>Option</b></td><td><b>Description</b></td>
 *  </tr>
 *  <tr>
 *    <td>file</td><td>Correlation file which declares all nodes and links between them.</td>
 *  </tr>
 *  <tr>
 *    <td>retention</td><td>Retention file to backup correlation state between process restarts.</td>
 *  </tr>
 *  </table>
 *
 *
 *  @section correlationfile Correlation File
 *
 *  // XXX
 */
