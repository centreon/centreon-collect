#!/bin/sh
##
## Copyright 2009-2012 Merethis
##
## This file is part of Centreon Broker.
##
## Centreon Broker is free software: you can redistribute it and/or
## modify it under the terms of the GNU General Public License version 2
## as published by the Free Software Foundation.
##
## Centreon Broker is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Centreon Broker. If not, see
## <http://www.gnu.org/licenses/>.
##

#
# Script init
#
### BEGIN INIT INFO
# Provides:             cbd
# Required-Start:       $local_fs $network
# Required-Stop:        $local_fs $network
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    Start daemon cbd at boot
# Description:          Enable service provided Centreon Broker
### END INIT INFO


PKGNAME=cbd
DESC="Centreon Broker"
DAEMON="@PREFIX_BIN@/cbd"
PID_PATH="/var/run"
MASTER_FILE="@PREFIX_CONF@/master.run"
CONFIG_DIR="@PREFIX_CONF@"

# Check that cbd is executable.
if [ ! -x "${DAEMON}" ] ; then
  echo "The cbd binary can't be run."
  exit 3
fi

# Check that configuration file exists.
if [ ! -e "${MASTER_FILE}" ] ; then
  echo "The master file isn't found."
  exit 3
fi

# Include the default user configuration if exists
[ -r /etc/default/${PKGNAME} ] && . /etc/default/${PKGNAME}

# Load the VERBOSE setting and other rcS variables
[ -f /etc/default/rcS ] && . /etc/default/rcS

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

if [ -z "${RUN_AT_STARTUP}" -o "${RUN_AT_STARTUP}" != "YES" ]; then
  log_warning_msg "Not starting $PKGNAME, edit /etc/default/$PKGNAME to start it."
  exit 0
fi

if [ -z "${USER}" ]; then
  log_warning_msg "Not starting $PKGNAME, USER not set in /etc/default/$PKGNAME."
  exit 0
fi

# Start cbd.
do_start()
{
  cat ${MASTER_FILE} | grep -v '^#'| while read line; do
    global_retval=0
    daemon_name="cbd_$(echo ${line} | awk '{ print $1 }')"
    daemon_config="${CONFIG_DIR}/$(echo ${line} | awk '{ print $2 }')"
    running="$(echo ${line} | awk '{ print $3 }')"
    pidfile="${PID_PATH}/${daemon_name}.pid"
    if [ "${running}" = "y" ]; then
      [ "${VERBOSE}" != "no" ] && log_daemon_msg "Starting ${daemon_name}" "${PKGNAME}"
      start-stop-daemon --start --background --quiet --pidfile ${pidfile} --exec ${DAEMON} \
        --chuid ${USER} --user ${USER} --test
      [ "$?" = "0" ] || global_retval=1
      start-stop-daemon --start --background --quiet --pidfile ${pidfile} --exec ${DAEMON} \
        --make-pidfile --chuid ${USER} --user ${USER} -- ${daemon_config}
      [ "$?" = "0" ] || global_retval=2
      case "${global_retval}" in
        0|1) [ "${VERBOSE}" != "no" ] && log_end_msg 0 ;;
        2) [ "${VERBOSE}" != "no" ] && log_end_msg 1 ;;
      esac
    fi
  done
  return ${global_retval}
}

# Stop cbd.
do_stop()
{
  cat ${MASTER_FILE} | grep -v '^#'| while read line; do
    global_retval=0
    daemon_name="cbd_$(echo ${line} | awk '{ print $1 }')"
    daemon_config="${CONFIG_DIR}/$(echo ${line} | awk '{ print $2 }')"
    running="$(echo ${line} | awk '{ print $3 }')"
    pidfile="${PID_PATH}/${daemon_name}.pid"
    if [ "${running}" = "y" ]; then
      [ "${VERBOSE}" != no ] && log_daemon_msg "Restarting ${daemon_name}" "${PKGNAME}"
      start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --user ${USER} --pidfile ${pidfile}
      [ "$?" = "2" ] && global_retval=2
      rm -f ${pidfile}
      [ "$?" = "0" ] || global_retval=1
      case "${global_retval}" in
        0|1) [ "${VERBOSE}" != "no" ] && log_end_msg 0 ;;
        2) [ "${VERBOSE}" != "no" ] && log_end_msg 1 ;;
      esac
    fi
  done
}

# Send kill HUP
do_reload()
{
  cat ${MASTER_FILE} | grep -v '^#'| while read line; do
    daemon_name="cbd_$(echo ${line} | awk '{ print $1 }')"
    daemon_config="${CONFIG_DIR}/$(echo ${line} | awk '{ print $2 }')"
    running="$(echo ${line} | awk '{ print $3 }')"
    reload="$(echo ${line} | awk '{ print $4 }')"
    pidfile="${PID_PATH}/${daemon_name}.pid"
    if [ "${running}" = "y" -a "${reload}" = "y" ]; then
      [ "${VERBOSE}" != no ] && log_daemon_msg "Reloading ${daemon_name}" "${PKGNAME}"
      start-stop-daemon --stop --quiet --signal=HUP --user ${USER} --pidfile ${pidfile}
      case "$?" in
        0|1) [ "${VERBOSE}" != "no" ] && log_end_msg 0 ;;
        2) [ "${VERBOSE}" != "no" ] && log_end_msg 1 ;;
      esac
    fi
  done
}

# Status
status_all()
{
  cat ${MASTER_FILE} | grep -v '^#'| while read line; do
    daemon_name="cbd_$(echo ${line} | awk '{ print $1 }')"
    daemon_config="${CONFIG_DIR}/$(echo ${line} | awk '{ print $2 }')"
    running="$(echo ${line} | awk '{ print $3 }')"
    pidfile="${PID_PATH}/${daemon_name}.pid"
    if [ "${running}" = "y" ]; then
      status_of_proc ${DAEMON} ${daemon_name} -p ${pidfile}
    fi
  done
}

# Switch case.
case "$1" in
  start)
    do_start
    ;;
  stop)
    do_stop
    ;;
  restart)
    do_stop
    do_start
    ;;
  reload)
    do_reload
    ;;
  status)
    status_all
    ;;
  *)
    echo "Usage: ${daemon_name} {start|stop|restart|status}"
    exit 3
esac
