#!/bin/sh
##
## Copyright 2009-2012 Merethis
##
## This file is part of Centreon Broker.
##
## Centreon Broker is free software: you can redistribute it and/or
## modify it under the terms of the GNU General Public License version 2
## as published by the Free Software Foundation.
##
## Centreon Broker is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Centreon Broker. If not, see
## <http://www.gnu.org/licenses/>.
##

#
# Script init
#
### BEGIN INIT INFO Suse
# Provides:       cbd
# Required-Start:
# Required-Stop:
# Default-Start:  3 5
# Default-Stop: 0 1 6
# Description: Centreon Broker
### END INIT INFO

### BEGIN INIT INFO Redhat
# chkconfig: - 71 31
# description: Centreon Broker
# processname: cbd
# config: TO_CHANGE
# pidfile: TO_CHANGE
### END INIT INFO

# Select distribution type.
if [ -f "/lib/lsb/init-functions" ] ; then
  distribution="lsb"
  . "/lib/lsb/init-functions"
elif [ -f "/etc/rc.d/init.d/functions" ] ; then
  distribution="redhat"
  . "/etc/rc.d/init.d/functions"
else
  echo "Unknown distribution type."
  exit 1
fi

# Logging functions.
broker_log_failure() {
  if [ "$distribution" = "redhat" ] ; then
    failure $@
  else
    log_failure_msg $@
  fi
}
broker_log_success() {
  if [ "$distribution" = "redhat" ] ; then
    success $@
  else
    log_success_msg $@
  fi
}

# Configuration parameters.
CONFIG_FILE="@PREFIX_CONF@/@DAEMON_NAME@.xml"
DAEMON_NAME="cbd-@DAEMON_NAME@"
CBD="@PREFIX_BIN@/cbd"
PID_PATH=/var/run
STOP_TIMEOUT=10
user="@USER@"

# Daemon name must be set.
if [ -z "${DAEMON_NAME}" ] ; then
  echo "The cbd name isn't set."
  exit 1
fi

# Check that cbd is executable.
if [ ! -x "${CBD}" ] ; then
  echo "The cbd binary can't be run."
  exit 1
fi

# Check that configuration file exists.
if [ ! -e "${CONFIG_FILE}" ] ; then
  echo "The configuration file isn't found."
  exit 1
fi

# PID file.
pidfile="${PID_PATH}/${DAEMON_NAME}.pid"

# Start cbd.
start() {
  # Check for running.
  if [ -f "${pidfile}" ] ; then
    is_running=$(ps -edf | grep "${CBD} ${CONFIG_FILE}" | grep -v grep | wc -l )
    if [ $is_running = 0 ] ; then
      rm -f "$pidfile"
    else
      echo -n "${DAEMON_NAME} already running"
      broker_log_failure "cbd startup"
      return 1
    fi
  fi

  # Start cbd.
  echo -n "Starting ${DAEMON_NAME}: "
  PID=`su - "${user}" -c "${CBD} ${CONFIG_FILE} >/dev/null 2>&1 & echo \\$!"`
  RETVAL=$?
  if [ ${RETVAL} = 0 ]; then
    echo ${PID} > "${pidfile}"
    broker_log_success "cbd startup"
  else
    broker_log_failure "cbd startup"
  fi
  return ${RETVAL}
}

# Stop cbd.
stop() {
  echo -n "Stopping ${DAEMON_NAME}: "
  if [ "$distribution" = "redhat" ] ; then
    killproc -p "${pidfile}" -d ${STOP_TIMEOUT} "$CBD"
  else
    killproc -p "${pidfile}" "$CBD"
  fi
  RETVAL=$?
  if [ ${RETVAL} = 0 ] ; then
    rm -f "${pidfile}"
    broker_log_success "cbd shutdown"
  else
    broker_log_failure "cbd shutdown"
  fi
  return ${RETVAL}
}

# Get cbd status.
status() {
  if [ ! -f "${pidfile}" ] ; then
    RETVAL=3
    echo "$DAEMON_NAME is not running."
  else
    pid=`head -n 1 "${pidfile}"`
    kill -0 "${pid}"
    RETVAL=$?
    # LSB-compliant return code.
    if [ ${RETVAL} -ne 0 ] ; then
      RETVAL=1
      echo "$DAEMON_NAME is dead and PID file exists."
    else
      echo "$DAEMON_NAME is running."
    fi
  fi
  return ${RETVAL}
}

# Switch case.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status
    RETVAL=$?
    ;;
  *)
    echo "Usage: ${DAEMON_NAME} {start|stop|restart|status}"
    exit 1
esac

exit ${RETVAL}
