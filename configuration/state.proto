/*
** Copyright 2022-2023 Centreon
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
**
** For more information : contact@centreon.com
*/

syntax = "proto3";

import "state-generated.proto";

package com.centreon.engine.configuration;

message State {
  string cfg_main = 1;
  repeated string cfg_file = 2;
  repeated string resource_file = 3;
  int32 instance_heartbeat_interval = 4;
  bool check_service_freshness = 5;
  bool enable_flap_detection = 6;
  string rpc_listen_address = 7;
  uint32 rpc_port = 8;
  map<string, string> users = 9;
  repeated string cfg_dir = 10;
  string state_retention_file = 11;
  repeated string broker_module = 12;
  bool enable_macros_filter = 13;
  StringSet macros_filter = 14;

  bool log_v2_enabled = 15;
  bool log_legacy_enabled = 16;
  bool use_syslog = 17;
  string log_v2_logger = 18;
  string log_file = 19;
  string debug_file = 20;
  uint32 debug_level = 21;
  uint32 debug_verbosity = 22;
  uint32 max_debug_file_size = 23;
  bool log_pid = 24;
  bool log_file_line = 25;
  int32 log_flush_period = 26;
  string log_level_checks = 27;
  string log_level_commands = 28;
  string log_level_comments = 29;
  string log_level_config = 30;
  string log_level_downtimes = 31;
  string log_level_eventbroker = 32;
  string log_level_events = 33;
  string log_level_external_command = 34;
  string log_level_functions = 35;
  string log_level_macros = 36;
  string log_level_notifications = 37;
  string log_level_process = 38;
  string log_level_runtime = 39;

  bool log_notifications = 40;
  bool log_passive_checks = 41;

  string global_host_event_handler = 42;
  string global_service_event_handler = 43;
  string illegal_object_chars = 44;
  string illegal_output_chars = 45;
  uint32 interval_length = 46;
  string ochp_command = 47;
  string ocsp_command = 48;
  string use_timezone = 49;
  bool accept_passive_host_checks = 50;
  bool accept_passive_service_checks = 51;
  int32 additional_freshness_latency = 52;
  uint32 cached_host_check_horizon = 53;
  bool check_external_commands = 54;
  bool check_host_freshness = 55;
  uint32 check_reaper_interval = 56;
  bool enable_event_handlers = 57;
  bool enable_notifications = 58;
  bool execute_host_checks = 59;
  bool execute_service_checks = 60;
  uint32 max_host_check_spread = 61;
  uint32 max_service_check_spread = 62;
  uint32 notification_timeout = 63;
  bool obsess_over_hosts = 64;
  bool obsess_over_services = 65;
  bool process_performance_data = 66;
  bool soft_state_dependencies = 67;
  bool use_large_installation_tweaks = 68;
  string admin_email = 69;
  string admin_pager = 70;
  string command_file = 71;
  string status_file = 72;
  string host_perfdata_file = 73;
  string service_perfdata_file = 74;
  string poller_name = 75;
  uint32 poller_id = 76;

  repeated Command commands = 77;
  repeated Connector connectors = 78;
  repeated Contact contacts = 79;
  repeated Contactgroup contactgroups = 80;
  repeated Hostdependency hostdependencies = 81;
  repeated Hostescalation hostescalations = 82;
  repeated Hostgroup hostgroups = 83;
  repeated Host hosts = 84;
  repeated Servicedependency servicedependencies = 85;
  repeated Serviceescalation serviceescalations = 86;
  repeated Servicegroup servicegroups = 87;
  repeated Service services = 88;
  repeated Anomalydetection anomalydetections = 89;
  repeated Timeperiod timeperiods = 90;
  repeated Severity severities = 91;
  repeated Tag tags = 92;
}

message Value {
  oneof value {
    bool value_b = 1;
    int32 value_i32 = 2;
    uint32 value_u32 = 3;
    string value_str = 4;
    TimeRange value_tr = 5;
    Daterange value_dr = 6;
    Timeperiod value_tp = 7;
    Connector value_cn = 8;
    Command value_co = 9;
    CustomVariable value_cv = 10;
    Contact value_ct = 11;
  }
}

message Key {
  oneof key {
    int32 i32 = 1;
    string str = 2;
  }
}

message Path {
  repeated Key key = 1;
}

message PathWithValue {
  Path path = 1;
  Value val = 2;
}

message PathWithPair {
  Path path = 1;
  Value val1 = 2;
  Value val2 = 3;
}

message DiffState {
  repeated PathWithValue to_add = 1;
  repeated Path to_remove = 2;
  repeated PathWithValue to_modify = 3;
}
