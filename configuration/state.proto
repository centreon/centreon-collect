/*
** Copyright 2022 Centreon
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
**
** For more information : contact@centreon.com
*/

syntax = "proto3";

package com.centreon.engine.configuration;

message TimeRange {
  uint64 range_start = 1;
  uint64 range_end = 2;
}

message DateRange {
  enum TypeRange {
    calendar_date = 0;
    month_date = 1;
    month_day = 2;
    month_week_day = 3;
    week_day = 4;
    none = 5; // Instead of -1 in original config
  }
  TypeRange type = 1;
  int32 syear = 2;  // Start year.
  int32 smon = 3;   // Start month.
  // Start day of month (may 3rd, last day in feb).
  int32 smday = 4;
  int32 swday = 5;  // Start day of week (thursday).
  // Start weekday offset (3rd thursday, last monday in jan).
  int32 swday_offset = 6;
  int32 eyear = 7;
  int32 emon = 8;
  int32 emday = 9;
  int32 ewday = 10;
  int32 ewday_offset = 11;
  int32 skip_interval = 12;
  repeated TimeRange timerange = 13;
}

message Timeperiod {
  string alias = 1;
  string name = 2;
}

message Connector {
  string connector_name = 1;
  string connector_line = 2;
}

message Command {
  string command_line = 1;
  string command_name = 2;
  string connector = 3;
}

message State {
  repeated Timeperiod timeperiods = 1;
  repeated Command commands = 2;
}

message Changes {
  message Pair {
    int32 id = 1;
    oneof value {
      bool value_b = 2;
      int32 value_i32 = 3;
      string value_str = 4;
    }
  }
  repeated Pair list = 5;
}

message DiffTimeperiod {
  repeated uint32 to_remove = 1;
  repeated Timeperiod to_add = 2;
  map<int32, Changes> to_modify = 3;
}

message DiffCommand {
  repeated Command to_remove = 1;
  repeated Command to_add = 2;
}

message DiffState {
  DiffTimeperiod dtimeperiods = 1;
  DiffCommand dcommands = 2;
}
