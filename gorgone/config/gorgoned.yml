name: gorgoned
database:
  db_centreon: 
    dsn: "mysql:host=localhost;dbname=centreon"
    username: centreon
    password: centreon
  db_centstorage: 
    dsn: "mysql:host=localhost;dbname=centreon_storage"
    username: centreon
    password: centreon
gorgonecore:
  internal_com_type: ipc
  internal_com_path: /tmp/gorgone/routing.ipc
  external_com_type: tcp
  external_com_path: "*:5555"
  # in seconds before sending kill signals (not gently)
  timeout: 50
  gorgone_db_type: SQLite
  gorgone_db_name: dbname=/tmp/gorgone.sdb
  gorgone_db_host: 
  gorgone_db_port: 
  gorgone_db_user:
  gorgone_db_password:
  # If not set. Use 'hostname' function.
  hostname:
  # If not set.
  # Can be override by action: SETCOREID
  id:
  
  privkey: keys/central/privkey.pem
  cipher: "Cipher::AES"
  # in bytes
  keysize: 32
  # 16 bytes for AES
  vector: 0123456789012345
  # JWK format export thumbprint SHA256
  authorized_clients: 
    - key: pnI6EWkiTbazjikJXRkLmjml5wvVECYtQduJUjS4QK4
  
  # in seconds
  sessions_time: 86400
  # in seconds
  purge_sessions_time: 3600
  # shouldn't be changed
  proxy_name: proxy
modules:
  - name: httpserver
    package: modules::core::httpserver::hooks
    enable: true
    address: 0.0.0.0
    port: 8443
    ssl: true
    ssl_cert_file: /etc/pki/tls/certs/server-cert.pem
    ssl_key_file: /etc/pki/tls/server-key.pem
    auth:
      user: admin
      password: password

  - name: cron
    package: modules::core::cron::hooks
    enable: true
    cron:
      - id: echo_date
        timespec: "* * * * *"
        action: COMMAND
        parameters:
          command: "date >> /tmp/date.log"
          timeout: 10

  - name: action
    package: modules::core::action::hooks
    enable: true

  - name: proxy
    package: modules::core::proxy::hooks
    enable: false
    pool: 5
    # sync history each 5 minutes
    synchistory_time: 300
    # how much time before the response is in timeout
    synchistory_timeout: 120
    # ping each X seconds
    ping: 60

  - name: pollers
    package: modules::centreon::pollers::hooks
    enable: false
    resync_time: 600

  - name: register
    package: modules::core::register::hooks
    enable: true
    config_file: config/registernodes.yml

  - name: engine
    package: modules::centreon::engine::hooks
    enable: true
    command_file: "/var/lib/centreon-engine/rw/centengine.cmd"

  - name: legacycmd
    package: modules::centreon::legacycmd::hooks
    enable: true
    cmd_file: "/var/lib/centreon/centcore.cmd"
    cache_dir: "/var/cache/centreon/"
    cache_dir_trap: "/etc/snmp/centreon_traps/"
    remote_dir: "/var/lib/centreon/remote-data/"

  - name: scom
    package: modules::plugins::scom::hooks
    enable: false
    # in seconds - do purge for container also
    check_containers_time: 3600
    dsmclient_bin: /usr/share/centreon/bin/dsmclient.pl
    centcore_cmd: /var/lib/centreon/centcore.cmd
    containers:
      - name: toto
        api_version: 2016
        url: "http://scomserver/api/"
        username: toto
        password: pass
        httpauth: basic
        resync_time: 300
        dsmhost: ADH3
        dsmslot: Scom-%
        dsmmacro: ALARM_ID
        dsmalertmessage: "%{monitoringobjectdisplayname} %{name}"
        dsmrecoverymessage: slot ok
        curlopts:
          CURLOPT_SSL_VERIFYPEER: 0
      # - name: tutu
      #   url: http://scomserver2/
      #   username: toto2
      #   password: toto2
      #   resync_time: 600

  - name: newtest
    package: modules::plugins::newtest::hooks
    enable: false
    # in seconds - do purge for container also
    check_containers_time: 3600
    clapi_command: /usr/bin/centreon
    clapi_username: admin
    clapi_password: centreon
    clapi_action_applycfg: RELOAD
    centcore_cmd: /var/lib/centreon/centcore.cmd
    containers:
      - name: toto
        resync_time: 300
        nmc_endpoint: "http://__NMC_ADDRESS__/nws/managementconsoleservice.asmx"
        username: user
        password: pass
        host_template: generic-active-host-custom
        host_prefix: Robot-%s
        service_template: generic-passive-service-custom
        service_prefix: Scenario-%s
        poller_name: Central
        list_scenario_status: '{ "search": "All", "instances": [] }'
      - name: tutu
        resync_time: 600
        nmc_endpoint: "http://__NMC_ADDRESS__/nws/managementconsoleservice.asmx"
        username: user
        password: pass
        host_template: generic-active-host-custom
        host_prefix: Robot-%s
        service_template: generic-passive-service-custom
        service_prefix: Scenario-%s
        poller_name: Central
        list_scenario_status: '{ "search": "Robot", "instances": ["XXXX"] }' 
