; Database Centreon configuration
[db_centreon]
dsn="mysql:host=localhost;dbname=centreon"
username=centreon
password=centreon

; Database centreon_storage configuration
[db_centstorage]
dsn="mysql:host=localhost;dbname=centreon_storage"
username=centreon
password=centreon

; gorgoned
[gorgonecore]
internal_com_type=ipc
internal_com_path=/tmp/gorgone/routing.ipc
external_com_type=tcp
external_com_path=*:5555
; in seconds before sending kill signals (not gently)
timeout=50
gorgone_db_type=SQLite
gorgone_db_name=dbname=/tmp/gorgone.sdb
gorgone_db_host=
gorgone_db_port=
gorgone_db_user=
gorgone_db_password=
; If not set. Use 'hostname' function.
hostname=
; If not set. Try from 'hostname' in database
; Set 'none', if you don't need it (for poller in push mode)
id=none
; crypt options
privkey=keys/central/privkey.pem
cipher=Cipher::AES
; in bytes
keysize=32
; 16 bytes for AES
vector=0123456789012345
; in seconds
sessions_time=86400
purge_sessions_time=3600
; shouldn't be changed
proxy_name=gorgoneproxy

;[gorgoneacl]
;module=modules::gorgoneacl::hooks
;on_demand=1
;; How much to keep open in seconds without event received
;on_demand_time=60
;; in seconds - do purge for organizations also
;check_organizations_time=3600
;; in seconds - do a resync of the organizations
;resync_time=28800
;; in seconds - random windows (to avoid resync at the same time)
;resync_random_windows=7200
;; set to 1 to disable - if you want to do it by a cron
;resync_auto_disable=0
;sql_fetch=10000
;sql_bulk=2000

[gorgonecron]
module=modules::gorgonecron::hooks

;[gorgoneproxy]
;module=modules::gorgoneproxy::hooks
;pool=5
;; sync history each 5 minutes
;synchistory_time=300
;; how much time before the response is in timeout
;synchistory_timeout=120
;; ping each X seconds
;ping=60

;[gorgoneaction]
;module=modules::gorgoneaction::hooks

[gorgonescom]
module=modules::gorgonescom::hooks

; in seconds - do purge for container also
check_containers_time=3600
dsmclient_bin=/usr/share/centreon/bin/dsmclient.pl
centcore_cmd=/var/lib/centreon/centcore.cmd
containers=toto,tutu

toto_url=http://scomserver
toto_username=toto
toto_password=pass
toto_resync_time=300
toto_dsmhost=centreon
toto_dsmslot=slot-%
toto_dsmmacro=ALARM_ID
toto_dsmalertmessage=%{monitoringobjectdisplayname} %{name}
toto_dsmrecoverymessage=slot ok

tutu_url=http://scomserver2/
tutu_username=toto2
tutu_password=toto2
tutu_resync_time=600

[gorgonenewtest]
module=modules::gorgonenewtest::hooks

; in seconds - do purge for container also
check_containers_time=3600
clapi_command=/usr/bin/centreon
clapi_username=admin
clapi_password=centreon
clapi_action_applycfg=RELOAD
centcore_cmd=/var/lib/centreon/centcore.cmd

containers=toto,tutu

toto_resync_time=300
toto_nmc_endpoint=http://__NMC_ADDRESS__/nws/managementconsoleservice.asmx
toto_password=pass
toto_host_template=generic-active-host-custom
toto_host_prefix=Robot-%s
toto_service_template=generic-passive-service-custom
toto_service_prefix=Scenario-%s
toto_poller_name=Central
toto_list_scenario_status={ "search": "All", "instances": [] } 

tutu_resync_time=600
tutu_nmc_endpoint=http://__NMC_ADDRESS__/nws/managementconsoleservice.asmx
tutu_nmc_timeout=10
tutu_password=pass
tutu_host_template=generic-active-host-custom
tutu_host_prefix=Robot-%s
tutu_service_template=generic-passive-service-custom
tutu_service_prefix=Scenario-%s
tutu_poller_name=Central
tutu_list_scenario_status={ "search": "Robot", "instances": ["XXXX"] } 
