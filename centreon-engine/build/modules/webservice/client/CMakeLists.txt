##
## Copyright 2011-2012 Merethis
##
## This file is part of Centreon Engine.
##
## Centreon Engine is free software: you can redistribute it and/or
## modify it under the terms of the GNU General Public License version 2
## as published by the Free Software Foundation.
##
## Centreon Engine is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Centreon Engine. If not, see
## <http://www.gnu.org/licenses/>.
##

# Directories.
set(SRC_DIR "${MODULE_DIR}/client/src")
set(INC_DIR "${MODULE_DIR}/client/inc/com/centreon/engine/modules/webservice")

# Generate webservice header from WSDL.
add_custom_command(OUTPUT "${MODULE_DIR}/client/centreon-engine-ws.hh"
  COMMAND "${WSDL2H_PROGRAM}" "-o" "${MODULE_DIR}/client/centreon-engine-ws.hh" "-t${MODULE_DIR}/typemap.dat" "${MODULE_DIR}/centreon-engine.wsdl"
  DEPENDS "${MODULE_DIR}/centreon-engine.wsdl" "${MODULE_DIR}/typemap.dat")

# Generate webservice sources from header.
add_custom_command(OUTPUT
  "${MODULE_DIR}/client/centreonengine.nsmap"
  "${MODULE_DIR}/client/soapC.cpp"
  "${MODULE_DIR}/client/soapH.h"
  "${MODULE_DIR}/client/soapClient.cpp"
  "${MODULE_DIR}/client/soapStub.h"
  COMMAND "${SOAPCPP2_PROGRAM}" "-C" "-L" "-x" "-d${MODULE_DIR}/client" "-I${GSOAP_INCLUDE_DIR}" "${MODULE_DIR}/client/centreon-engine-ws.hh"
  DEPENDS "${MODULE_DIR}/client/centreon-engine-ws.hh")

# Generate client sources.
add_custom_command(OUTPUT
  "${MODULE_DIR}/client/auto_gen.cc"
  "${MODULE_DIR}/client/auto_gen.hh"
  COMMAND "ws_stub_builder" "${MODULE_DIR}/client/soapStub.h" "${MODULE_DIR}/client/auto_gen.hh" "${MODULE_DIR}/client/auto_gen.cc"
  DEPENDS "${MODULE_DIR}/client/soapStub.h" "ws_stub_builder")

# Include directories.
include_directories("${MODULE_DIR}/client")
include_directories("${MODULE_DIR}/client/inc")

# centenginews target.
add_executable("centenginews"
  # Auto-generated.
  "${MODULE_DIR}/client/centreonengine.nsmap"
  "${MODULE_DIR}/client/soapC.cpp"
  "${MODULE_DIR}/client/soapClient.cpp"
  "${MODULE_DIR}/client/auto_gen.cc"
  "${MODULE_DIR}/client/soapH.h"
  "${MODULE_DIR}/client/soapStub.h"
  "${MODULE_DIR}/client/auto_gen.hh"
  # Sources.
  "${SRC_DIR}/error.cc"
  "${SRC_DIR}/main.cc"
  "${SRC_DIR}/ssl.cc"
  "${SRC_DIR}/webservice.cc"
  # Headers.
  "${INC_DIR}/error.hh"
  "${INC_DIR}/ssl.hh"
  "${INC_DIR}/webservice.hh"
)
add_dependencies("centenginews" "ws_stub_builder")
get_property(CENTENGINEWS_BINARY
  TARGET "centenginews"
  PROPERTY LOCATION)
set(CENTENGINEWS_BINARY "${CENTENGINEWS_BINARY}" PARENT_SCOPE)

# Check compiler version supports flags.
include(CheckCXXCompilerFlag)
check_cxx_compiler_flag("-Wno-unused-function" COMPILER_SUPPORTS_WNO_UNUSED_FUNCTION)
check_cxx_compiler_flag("-Wno-unused-parameter" COMPILER_SUPPORTS_WNO_UNUSED_PARAMETER)
check_cxx_compiler_flag("-Wno-vla" COMPILER_SUPPORTS_WNO_VLA)

# Avoid warnings on autogenerated soapC.cpp file.
if (COMPILER_SUPPORTS_WNO_UNUSED_PARAMETER
    AND COMPILER_SUPPORTS_WNO_VLA)
  unset(compile_flags)
  get_source_file_property(compile_flags
    "${MODULE_DIR}/client/soapC.cpp"
    COMPILE_FLAGS)
  if (compile_flags)
    set(compile_flags "${compile_flags} -Wno-unused-parameter -Wno-vla")
  else ()
    set(compile_flags "-Wno-unused-parameter -Wno-vla")
  endif ()
  set_source_files_properties("${MODULE_DIR}/client/soapC.cpp"
    PROPERTIES COMPILE_FLAGS "${compile_flags}")
endif ()

# Avoid warnings on autogenerated auto_gen.cc file.
if (COMPILER_SUPPORTS_WNO_UNUSED_FUNCTION)
  unset(compile_flags)
  get_source_file_property(compile_flags
    "${MODULE_DIR}/client/auto_gen.cc"
    COMPILE_FLAGS)
  if (compile_flags)
    set(compile_flags "${compile_flags} -Wno-unused-function")
  else ()
    set(compile_flags "-Wno-unused-function")
  endif ()
  set_source_files_properties("${MODULE_DIR}/client/auto_gen.cc"
    PROPERTIES COMPILE_FLAGS "${compile_flags}")
endif ()

# Link target with libraries.
target_link_libraries("centenginews"
  ${GSOAP_LIBRARIES}
  ${SSL_LIBRARIES}
  ${CRYPTO_LIBRARIES}
  ${ZLIB_LIBRARIES})

# Install rule.
if (INSTALL_FILES)
  install(TARGETS "centenginews"
    DESTINATION "${PREFIX_BIN}/"
    COMPONENT "runtime")
endif ()
