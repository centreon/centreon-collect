<?xml version="1.0" encoding="UTF-8"?>
<definitions name="CentreonEngineCommands"
             targetNamespace="http://www.centreon.com/engine/commands.wsdl"
             xmlns:tns="http://www.centreon.com/engine/commands.wsdl"
             xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
             xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns:ns="urn:centreonengine"
             xmlns:SOAP="http://schemas.xmlsoap.org/wsdl/soap/"
             xmlns:WSDL="http://schemas.xmlsoap.org/wsdl/"
             xmlns="http://schemas.xmlsoap.org/wsdl/">

  <types>
    <schema targetNamespace="http://www.centreon.com/engine/commands.wsdl"
            xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
            xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:ns="urn:centreonengine"
            xmlns="http://www.w3.org/2001/XMLSchema"
            elementFormDefault="unqualified"
            attributeFormDefault="unqualified">
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>

      <!-- Command identifier. -->
      <complexType name="commandIDType">
        <sequence>
          <element name="command" type="xsd:string"/>
        </sequence>
      </complexType>

      <!-- Command type. -->
      <complexType name="commandType">
        <sequence>
          <element name="name" type="xsd:string"/>
          <element name="commandLine" type="xsd:string"/>
        </sequence>
      </complexType>

      <!-- Contact identifier. -->
      <complexType name="contactIDType">
        <sequence>
          <element name="name" type="xsd:string"/>
        </sequence>
      </complexType>

      <!-- Contact type. -->
      <complexType name="contactType">
        <sequence>
          <element name="id" type="tns:contactIDType"/>
          <element name="alias" type="xsd:string" minOccurs="0"/>
	  <element name="contactgroups" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
	  <element name="hostNotificationsEnabled" type="xsd:boolean"/>
	  <element name="serviceNotificationsEnabled" type="xsd:boolean"/>
	  <element name="hostNotificationPeriod" type="xsd:string"/>
	  <element name="serviceNotificationPeriod" type="xsd:string"/>
	  <element name="hostNotificationOptions" type="xsd:string"/>
	  <element name="serviceNotificationOptions" type="xsd:string"/>
	  <element name="hostNotificationCommands" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
	  <element name="serviceNotificationCommands" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
	  <element name="email" type="xsd:string" minOccurs="0"/>
	  <element name="pager" type="xsd:string" minOccurs="0"/>
	  <element name="address" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
	  <element name="canSubmitCommands" type="xsd:boolean" minOccurs="0"/>
	  <element name="retainStatusInformation" type="xsd:boolean" minOccurs="0"/>
	  <element name="retainNonstatusInformation" type="xsd:boolean" minOccurs="0"/>
	  <element name="customVariables" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
      </complexType>

      <!-- Contactgroup identifier. -->
      <complexType name="contactgroupIDType">
        <sequence>
          <element name="name" type="xsd:string"/>
        </sequence>
      </complexType>

      <!-- Contactgroup type. -->
      <complexType name="contactgroupType">
        <sequence>
          <element name="name" type="xsd:string"/>
          <element name="alias" type="xsd:string" minOccurs="0"/>
	  <element name="contactMembers" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
	  <element name="contactgroupMembers" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
      </complexType>

      <!-- Host identifier. -->
      <complexType name="hostIDType">
        <sequence>
          <element name="name" type="xsd:string"/>
        </sequence>
      </complexType>

      <!-- Host type. -->
      <complexType name="hostType">
        <sequence>
          <element name="name" type="xsd:string"/>
          <element name="alias" type="xsd:string"/>
          <element name="displayName" type="xsd:string" minOccurs="0"/>
          <element name="address" type="xsd:string"/>
          <element name="parents" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="hostgroups" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="checkCommand" type="xsd:string" minOccurs="0"/>
          <element name="initialState" type="xsd:string" minOccurs="0"/>
          <element name="maxCheckAttempts" type="xsd:unsignedInt"/>
          <element name="checkInterval" type="xsd:unsignedInt" minOccurs="0"/>
          <element name="retryInterval" type="xsd:unsignedInt" minOccurs="0"/>
          <element name="activeChecksEnabled" type="xsd:boolean" minOccurs="0"/>
          <element name="passiveChecksEnabled" type="xsd:boolean" minOccurs="0"/>
          <element name="checkPeriod" type="xsd:string"/>
          <element name="obsessOverHost" type="xsd:boolean" minOccurs="0"/>
          <element name="checkFreshness" type="xsd:boolean" minOccurs="0"/>
          <element name="freshnessThreshold" type="xsd:unsignedInt" minOccurs="0"/>
          <element name="eventHandler" type="xsd:string" minOccurs="0"/>
          <element name="eventHandlerEnabled" type="xsd:boolean" minOccurs="0"/>
          <element name="lowFlapThreshold" type="xsd:unsignedInt" minOccurs="0"/>
          <element name="highFlapThreshold" type="xsd:unsignedInt" minOccurs="0"/>
          <element name="flapDetectionEnabled" type="xsd:boolean" minOccurs="0"/>
          <element name="flapDetectionOptions" type="xsd:string" minOccurs="0"/>
          <element name="processPerfData" type="xsd:boolean" minOccurs="0"/>
          <element name="retainStatusInformation" type="xsd:boolean" minOccurs="0"/>
          <element name="retainNonstatusInformation" type="xsd:boolean" minOccurs="0"/>
          <element name="contacts" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="contactGroups" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="notificationInterval" type="xsd:unsignedInt"/>
          <element name="firstNotificationDelay" type="xsd:unsignedInt" minOccurs="0"/>
          <element name="notificationPeriod" type="xsd:string"/>
          <element name="notificationOptions" type="xsd:string" minOccurs="0"/>
          <element name="notificationsEnabled" type="xsd:boolean" minOccurs="0"/>
          <element name="stalkingOptions" type="xsd:string" minOccurs="0"/>
          <element name="notes" type="xsd:string" minOccurs="0"/>
          <element name="notesUrl" type="xsd:string" minOccurs="0"/>
          <element name="actionUrl" type="xsd:string" minOccurs="0"/>
          <element name="iconImage" type="xsd:string" minOccurs="0"/>
          <element name="iconImageAlt" type="xsd:string" minOccurs="0"/>
          <element name="vrmlImage" type="xsd:string" minOccurs="0"/>
          <element name="statusmapImage" type="xsd:string" minOccurs="0"/>
	  <element name="customVariables" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
      </complexType>

      <!-- hostDependency type -->
      <complexType name="hostDependencyType">
        <sequence>
          <element name="dependentHostsName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="dependentHostgroupsName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="hostsName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="hostgroupsName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
	  <element name="inheritsParent" type="xsd:boolean" minOccurs="0"/>
	  <element name="executionFailureCriteria" type="xsd:string" minOccurs="0"/>
	  <element name="notificationFailureCriteria" type="xsd:string" minOccurs="0"/>
	  <element name="dependencyPeriod" type="xsd:string" minOccurs="0"/>
        </sequence>
      </complexType>

      <!-- hostEscalation type -->
      <complexType name="hostEscalationType">
        <sequence>
          <element name="hostsName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="hostgroupsName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="contacts" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="contactGroups" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
	  <element name="firstNotification" type="xsd:unsignedInt"/>
	  <element name="lastNotification" type="xsd:unsignedInt"/>
	  <element name="notificationInterval" type="xsd:unsignedInt"/>
	  <element name="escalationPeriod" type="xsd:string" minOccurs="0"/>
	  <element name="escalationOptions" type="xsd:string" minOccurs="0"/>
        </sequence>
      </complexType>

      <!-- Hostgroup identifier. -->
      <complexType name="hostgroupIDType">
        <sequence>
          <element name="name" type="xsd:string"/>
        </sequence>
      </complexType>

      <!-- Hostgroup type. -->
      <complexType name="hostgroupType">
        <sequence>
          <element name="id" type="tns:hostgroupIDType"/>
          <element name="alias" type="xsd:string" minOccurs="0"/>
          <element name="hostMembers" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="hostgroupMembers" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
	  <element name="notes" type="xsd:string" minOccurs="0"/>
	  <element name="notesUrl" type="xsd:string" minOccurs="0"/>
	  <element name="actionUrl" type="xsd:string" minOccurs="0"/>
        </sequence>
      </complexType>

      <!-- Service identifier. -->
      <complexType name="serviceIDType">
        <sequence>
          <element name="host" type="tns:hostIDType"/>
          <element name="service" type="xsd:string"/>
        </sequence>
      </complexType>

      <!-- Service type -->
      <complexType name="serviceType">
        <sequence>
          <element name="hostName" type="xsd:string"/>
          <element name="hostgroupName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="serviceDescription" type="xsd:string"/>
          <element name="displayName" type="xsd:string" minOccurs="0"/>
          <element name="servicegroups" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="isVolatile" type="xsd:boolean" minOccurs="0"/>
          <element name="checkCommand" type="xsd:string"/>
          <element name="initialState" type="xsd:string" minOccurs="0"/>
          <element name="maxCheckAttempts" type="xsd:unsignedInt"/>
          <element name="checkInterval" type="xsd:unsignedInt"/>
          <element name="retryInterval" type="xsd:unsignedInt"/>
          <element name="activeChecksEnabled" type="xsd:boolean" minOccurs="0"/>
          <element name="passiveChecksEnabled" type="xsd:boolean" minOccurs="0"/>
          <element name="checkPeriod" type="xsd:string"/>
          <element name="obsessOverService" type="xsd:boolean" minOccurs="0"/>
          <element name="checkFreshness" type="xsd:boolean" minOccurs="0"/>
          <element name="freshnessThreshold" type="xsd:unsignedInt" minOccurs="0"/>
          <element name="eventHandler" type="xsd:string" minOccurs="0"/>
          <element name="eventHandlerEnabled" type="xsd:boolean" minOccurs="0"/>
          <element name="lowFlapThreshold" type="xsd:unsignedInt" minOccurs="0"/>
          <element name="highFlapThreshold" type="xsd:unsignedInt" minOccurs="0"/>
          <element name="flapDetectionEnabled" type="xsd:boolean" minOccurs="0"/>
	  <element name="flapDetectionOptions" type="xsd:string" minOccurs="0"/>
          <element name="processPerfData" type="xsd:boolean" minOccurs="0"/>
          <element name="retainStatusInformation" type="xsd:boolean" minOccurs="0"/>
          <element name="retainNonstatusInformation" type="xsd:boolean" minOccurs="0"/>
          <element name="notificationInterval" type="xsd:unsignedInt"/>
          <element name="firstNotificationDelay" type="xsd:unsignedInt" minOccurs="0"/>
          <element name="notificationPeriod" type="xsd:string"/>
	  <element name="notificationOptions" type="xsd:string" minOccurs="0"/>
          <element name="notificationsEnabled" type="xsd:boolean" minOccurs="0"/>
          <element name="contacts" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="contactGroups" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="stalkingOptions" type="xsd:string" minOccurs="0"/>
          <element name="notes" type="xsd:string" minOccurs="0"/>
          <element name="notesUrl" type="xsd:string" minOccurs="0"/>
          <element name="actionUrl" type="xsd:string" minOccurs="0"/>
          <element name="iconImage" type="xsd:string" minOccurs="0"/>
          <element name="iconImageAlt" type="xsd:string" minOccurs="0"/>
	  <element name="customVariables" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
      </complexType>

      <!-- serviceDependency type -->
      <complexType name="serviceDependencyType">
        <sequence>
          <element name="dependentHostsName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="dependentHostgroupsName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="dependentServiceDescription" type="xsd:string"/>
          <element name="hostsName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="hostgroupsName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="serviceDescription" type="xsd:string"/>
	  <element name="inheritsParent" type="xsd:boolean" minOccurs="0"/>
	  <element name="executionFailureCriteria" type="xsd:string" minOccurs="0"/>
	  <element name="notificationFailureCriteria" type="xsd:string" minOccurs="0"/>
	  <element name="dependencyPeriod" type="xsd:string" minOccurs="0"/>
        </sequence>
      </complexType>

      <!-- serviceEscalation type -->
      <complexType name="serviceEscalationType">
        <sequence>
          <element name="hostsName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="hostgroupsName" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="serviceDescription" type="xsd:string"/>
          <element name="contacts" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="contactGroups" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
	  <element name="firstNotification" type="xsd:unsignedInt"/>
	  <element name="lastNotification" type="xsd:unsignedInt"/>
	  <element name="notificationInterval" type="xsd:unsignedInt"/>
	  <element name="escalationPeriod" type="xsd:string" minOccurs="0"/>
	  <element name="escalationOptions" type="xsd:string" minOccurs="0"/>
        </sequence>
      </complexType>

      <!-- Servicegroup identifier. -->
      <complexType name="servicegroupIDType">
        <sequence>
          <element name="name" type="xsd:string"/>
        </sequence>
      </complexType>

      <!-- Servicegroup type. -->
      <complexType name="servicegroupType">
        <sequence>
          <element name="id" type="tns:servicegroupIDType"/>
          <element name="alias" type="xsd:string" minOccurs="0"/>
          <element name="serviceMembers" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
          <element name="servicegroupMembers" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
	  <element name="notes" type="xsd:string" minOccurs="0"/>
	  <element name="notesUrl" type="xsd:string" minOccurs="0"/>
	  <element name="actionUrl" type="xsd:string" minOccurs="0"/>
        </sequence>
      </complexType>

      <!-- Acknowledgement. -->
      <complexType name="acknowledgementType">
        <sequence>
          <element name="author" type="xsd:string"/>
          <element name="comment" type="xsd:string"/>
          <element name="notify" type="xsd:boolean"/>
          <element name="persistent" type="xsd:boolean"/>
          <element name="sticky" type="xsd:boolean"/>
        </sequence>
      </complexType>

      <!-- Check result. -->
      <complexType name="checkResultType">
        <sequence>
          <element name="retval" type="xsd:int"/>
          <element name="output" type="xsd:string"/>
        </sequence>
      </complexType>

      <!-- Comment identifier. -->
      <complexType name="commentIDType">
        <sequence>
          <element name="comment" type="xsd:unsignedLong"/>
        </sequence>
      </complexType>

      <!-- Comment. -->
      <complexType name="commentType">
        <sequence>
          <element name="author" type="xsd:string"/>
          <element name="text" type="xsd:string"/>
          <element name="persistent" type="xsd:boolean"/>
        </sequence>
      </complexType>

      <!-- Downtime identifier. -->
      <complexType name="downtimeIDType">
        <sequence>
          <element name="downtime" type="xsd:unsignedLong"/>
        </sequence>
      </complexType>

      <!-- Downtime. -->
      <complexType name="downtimeType">
        <sequence>
          <element name="starttime" type="xsd:dateTime"/>
          <element name="endtime" type="xsd:dateTime"/>
          <element name="fixed" type="xsd:boolean"/>
          <element name="triggerid" type="tns:downtimeIDType"/>
          <element name="duration" type="xsd:double"/>
          <element name="author" type="xsd:string"/>
          <element name="comment" type="xsd:string"/>
        </sequence>
      </complexType>

      <!-- Notification. -->
      <complexType name="notificationType">
        <sequence>
          <element name="author" type="xsd:string"/>
          <element name="broadcast" type="xsd:boolean"/>
          <element name="comment" type="xsd:string"/>
          <element name="forced" type="xsd:boolean"/>
          <element name="increment" type="xsd:boolean"/>
        </sequence>
      </complexType>

      <!-- Timeperiod identifier. -->
      <complexType name="timeperiodIDType">
	<sequence>
	  <element name="timeperiod" type="xsd:string"/>
	</sequence>
      </complexType>

      <!-- Timeperiod identifier. -->
      <complexType name="timeperiodType">
	<sequence>
	  <element name="name" type="xsd:string"/>
	  <element name="alias" type="xsd:string"/>
	  <element name="range" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
	  <element name="exclude" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
	</sequence>
      </complexType>

      <!-- Service escalation identifier. -->
      <complexType name="serviceEscalationIDType">
	<sequence>
	  <element name="name" type="xsd:string"/>
	  <element name="description" type="xsd:string"/>
	</sequence>
      </complexType>

      <!-- Service dependency identifier. -->
      <complexType name="serviceDependencyIDType">
	<sequence>
	  <element name="hostName" type="xsd:string"/>
	  <element name="serviceDescription" type="xsd:string"/>
	  <element name="dependentHostName" type="xsd:string"/>
	  <element name="dependentServiceDescription" type="xsd:string"/>
	</sequence>
      </complexType>

      <!-- Resource user identifier. -->
      <complexType name="resourceUserIDType">
	<sequence>
	  <element name="id" type="xsd:unsignedInt"/>
	</sequence>
      </complexType>

    </schema>
  </types>

  <!--
	 Generic messages.
   -->

  <!-- Empty request. -->
  <message name="emptyRequest">
  </message>

  <!-- Default response (an error code and an error string). -->
  <message name="defaultResponse">
  </message>

  <!--
	 Typed messages.
   -->

  <!-- Request with a string. -->
  <message name="stringRequest">
    <part name="value" type="xsd:string"/>
  </message>

  <!-- Request with a boolean. -->
  <message name="booleanRequest">
    <part name="value" type="xsd:boolean"/>
  </message>

  <!-- Request with a unsinged integer. -->
  <message name="unsignedIntRequest">
    <part name="value" type="xsd:unsignedInt"/>
  </message>

  <!-- Request with a integer. -->
  <message name="integerRequest">
    <part name="value" type="xsd:int"/>
  </message>

  <!-- Request with a float. -->
  <message name="floatRequest">
    <part name="value" type="xsd:float"/>
  </message>

  <!-- Request with a unsigned long. -->
  <message name="unsignedLongRequest">
    <part name="value" type="xsd:unsignedLong"/>
  </message>

  <!-- Returns a boolean value. -->
  <message name="booleanResponse">
    <part name="val" type="xsd:boolean"/>
  </message>

  <!-- Returns a timestamp. -->
  <message name="dateResponse">
    <part name="val" type="xsd:unsignedLong"/>
  </message>

  <!-- Returns a double. -->
  <message name="doubleResponse">
    <part name="val" type="xsd:double"/>
  </message>

  <!-- Returns an integer. -->
  <message name="integerResponse">
    <part name="val" type="xsd:int"/>
  </message>

  <!-- Returns a short. -->
  <message name="shortResponse">
    <part name="val" type="xsd:short"/>
  </message>

  <!-- Returns a string. -->
  <message name="stringResponse">
    <part name="val" type="xsd:string"/>
  </message>

  <!-- Returns a timeperiod. -->
  <message name="timeperiodResponse">
    <part name="val" type="tns:timeperiodIDType"/>
  </message>

  <!-- Returns an unsigned integer value. -->
  <message name="unsignedIntResponse">
    <part name="val" type="xsd:unsignedInt"/>
  </message>

  <!-- Returns an unsigned short value. -->
  <message name="unsignedShortResponse">
    <part name="val" type="xsd:unsignedShort"/>
  </message>

  <!--
	 Command messages.
   -->

  <!-- Generic command request. -->
  <message name="commandRequest">
    <part name="command" type="tns:commandIDType"/>
  </message>

  <!-- Returns a command identifier. -->
  <message name="commandResponse">
    <part name="command" type="tns:commandIDType"/>
  </message>

  <!-- Command add request. -->
  <message name="commandFullRequest">
    <part name="command" type="tns:commandType"/>
  </message>

  <!--
	 Contact messages.
   -->

  <!-- Message sent when executing an operation on a contact. -->
  <message name="contactRequest">
    <part name="contact" type="tns:contactIDType"/>
  </message>

  <!-- Boolean request on a contact. -->
  <message name="contactBooleanRequest">
    <part name="contact" type="tns:contactIDType"/>
    <part name="value" type="xsd:boolean"/>
  </message>

  <!-- Command request on a contact. -->
  <message name="contactCommandRequest">
    <part name="contact" type="tns:contactIDType"/>
    <part name="value" type="tns:commandIDType"/>
  </message>

  <!-- Add or modify contact. -->
  <message name="contactFullRequest">
    <part name="contact" type="tns:contactType"/>
  </message>

  <!-- String request on a contact. -->
  <message name="contactStringRequest">
    <part name="contact" type="tns:contactIDType"/>
    <part name="value" type="xsd:string"/>
  </message>

  <!-- Timeperiod request on a contact. -->
  <message name="contactTimeperiodRequest">
    <part name="contact" type="tns:contactIDType"/>
    <part name="value" type="tns:timeperiodIDType"/>
  </message>

  <!--
	 Contact Group Messages.
  -->

  <!-- Add/remove contact membership. -->
  <message name="contactgroupContactRequest">
    <part name="contactgroup" type="tns:contactgroupIDType"/>
    <part name="member" type="tns:contactIDType"/>
  </message>

  <!-- Add/remove contact group membership. -->
  <message name="contactgroupContactgroupRequest">
    <part name="contactgroup" type="tns:contactgroupIDType"/>
    <part name="member" type="tns:contactgroupIDType"/>
  </message>

  <!-- Add/modify contact group request. -->
  <message name="contactgroupFullRequest">
    <part name="contactgroup" type="tns:contactgroupType"/>
  </message>

  <!-- Message sent when executing an operation on a contact group. -->
  <message name="contactgroupRequest">
    <part name="contactgroup" type="tns:contactgroupIDType"/>
  </message>

  <!--
	 Host messages.
   -->

  <!-- Host request with no additional parameter. -->
  <message name="hostRequest">
    <part name="host" type="tns:hostIDType"/>
  </message>

  <!-- Host request with a boolean. -->
  <message name="hostBooleanRequest">
    <part name="host" type="tns:hostIDType"/>
    <part name="value" type="xsd:boolean"/>
  </message>

  <!-- Host request with a date. -->
  <message name="hostDateRequest">
    <part name="host" type="tns:hostIDType"/>
    <part name="value" type="xsd:dateTime"/>
  </message>

  <!-- Host request with a double. -->
  <message name="hostDoubleRequest">
    <part name="host" type="tns:hostIDType"/>
    <part name="value" type="xsd:double"/>
  </message>

  <!-- Host request with an integer. -->
  <message name="hostIntegerRequest">
    <part name="host" type="tns:hostIDType"/>
    <part name="value" type="xsd:int"/>
  </message>

  <!-- Host request with a string. -->
  <message name="hostStringRequest">
    <part name="host" type="tns:hostIDType"/>
    <part name="value" type="xsd:string"/>
  </message>

  <!-- Host request with a timeperiod. -->
  <message name="hostTimeperiodRequest">
    <part name="host" type="tns:hostIDType"/>
    <part name="timeperiod" type="tns:timeperiodIDType"/>
  </message>

  <!-- Host request with unsigned integer. -->
  <message name="hostUnsignedIntegerRequest">
    <part name="host" type="tns:hostIDType"/>
    <part name="value" type="xsd:unsignedInt"/>
  </message>

  <!-- Host add request. -->
  <message name="addHostRequest">
    <part name="host" type="tns:hostType"/>
  </message>

  <!-- Add a host dependency. -->
  <message name="addHostDependencyRequest">
    <part name="hostdependency" type="tns:hostDependencyType"/>
  </message>

  <!-- Add a host escalation. -->
  <message name="addHostEscalationRequest">
    <part name="hostescalation" type="tns:hostEscalationType"/>
  </message>

  <!--
	 Host Group Messages.
  -->

  <!-- Add/remove host membership. -->
  <message name="hostgroupHostRequest">
    <part name="hostgroup" type="tns:hostgroupIDType"/>
    <part name="member" type="tns:hostIDType"/>
  </message>

  <!-- Add/remove host group membership. -->
  <message name="hostgroupHostgroupRequest">
    <part name="hostgroup" type="tns:hostgroupIDType"/>
    <part name="member" type="tns:hostgroupIDType"/>
  </message>

  <!-- Add/modify contact group request. -->
  <message name="hostgroupFullRequest">
    <part name="hostgroup" type="tns:hostgroupType"/>
  </message>

  <!-- Message sent when executing an operation on a host group. -->
  <message name="hostgroupRequest">
    <part name="hostgroup" type="tns:hostgroupIDType"/>
  </message>


  <!--
	 Service messages.
   -->

  <!-- Service request with no additional parameter. -->
  <message name="serviceRequest">
    <part name="service" type="tns:serviceIDType"/>
  </message>

  <!-- Service request with a boolean. -->
  <message name="serviceBooleanRequest">
    <part name="service" type="tns:serviceIDType"/>
    <part name="value" type="xsd:boolean"/>
  </message>

  <!-- Service request with a date. -->
  <message name="serviceDateRequest">
    <part name="service" type="tns:serviceIDType"/>
    <part name="value" type="xsd:dateTime"/>
  </message>

  <!-- Service request with a double. -->
  <message name="serviceDoubleRequest">
    <part name="service" type="tns:serviceIDType"/>
    <part name="value" type="xsd:double"/>
  </message>

  <!-- Service request with an integer. -->
  <message name="serviceIntegerRequest">
    <part name="service" type="tns:serviceIDType"/>
    <part name="value" type="xsd:int"/>
  </message>

  <!-- Service request with a string. -->
  <message name="serviceStringRequest">
    <part name="service" type="tns:serviceIDType"/>
    <part name="value" type="xsd:string"/>
  </message>

  <!-- Service request with a timeperiod. -->
  <message name="serviceTimeperiodRequest">
    <part name="service" type="tns:serviceIDType"/>
    <part name="value" type="tns:timeperiodIDType"/>
  </message>

  <!-- Service request with an unsigned integer. -->
  <message name="serviceUnsignedIntegerRequest">
    <part name="service" type="tns:serviceIDType"/>
    <part name="value" type="xsd:unsignedInt"/>
  </message>

  <!-- Service request no additional parameter.  -->
  <message name="serviceEscalationRequest">
    <part name="escalation" type="tns:serviceEscalationIDType"/>
  </message>

  <!-- Service request no additional parameter.  -->
  <message name="serviceDependencyRequest">
    <part name="dependency" type="tns:serviceDependencyIDType"/>
  </message>

  <!-- Service add request. -->
  <message name="addServiceRequest">
    <part name="service" type="tns:serviceType"/>
  </message>

  <!-- Add a service dependency. -->
  <message name="addServiceDependencyRequest">
    <part name="servicedependency" type="tns:serviceDependencyType"/>
  </message>

  <!-- Add a service escalation. -->
  <message name="addServiceEscalationRequest">
    <part name="serviceescalation" type="tns:serviceEscalationType"/>
  </message>

  <!--
        Service Group Messages.
  -->

  <!-- Add/remove service membership. -->
  <message name="servicegroupServiceRequest">
    <part name="servicegroup" type="tns:servicegroupIDType"/>
    <part name="member" type="tns:serviceIDType"/>
  </message>

  <!-- Add/remove service group membership. -->
  <message name="servicegroupServicegroupRequest">
    <part name="servicegroup" type="tns:servicegroupIDType"/>
    <part name="member" type="tns:servicegroupIDType"/>
  </message>

  <!-- Add/modify service group request. -->
  <message name="servicegroupFullRequest">
    <part name="servicegroup" type="tns:servicegroupType"/>
  </message>

  <!-- Message sent when executing an operation on a service group. -->
  <message name="servicegroupRequest">
    <part name="servicegroup" type="tns:servicegroupIDType"/>
  </message>

  <!--
	 Acknowledgement messages.
   -->

  <!-- Message to acknowledge a host problem. -->
  <message name="acknowledgementOnHostAddRequest">
    <part name="host" type="tns:hostIDType"/>
    <part name="acknowledgement" type="tns:acknowledgementType"/>
  </message>

  <!-- Message to acknowledge a service problem. -->
  <message name="acknowledgementOnServiceAddRequest">
    <part name="service" type="tns:serviceIDType"/>
    <part name="acknowledgement" type="tns:acknowledgementType"/>
  </message>

  <!--
	 Check messages.
   -->

  <!-- Message sent when submitting a host check result. -->
  <message name="checkHostRequest">
    <part name="host" type="tns:hostIDType"/>
    <part name="result" type="tns:checkResultType"/>
  </message>

  <!-- Message sent when submitting a service check result. -->
  <message name="checkServiceRequest">
    <part name="service" type="tns:serviceIDType"/>
    <part name="result" type="tns:checkResultType"/>
  </message>

  <!--
	 Comment messages.
   -->

  <!-- Generic comment request. -->
  <message name="commentRequest">
    <part name="comment" type="tns:commentIDType"/>
  </message>

  <!-- Add a comment related to a host. -->
  <message name="commentHostRequest">
    <part name="host" type="tns:hostIDType"/>
    <part name="comment" type="tns:commentType"/>
  </message>

  <!-- Add a comment related to a service. -->
  <message name="commentServiceRequest">
    <part name="service" type="tns:serviceIDType"/>
    <part name="comment" type="tns:commentType"/>
  </message>

  <!-- Returns a comment ID. -->
  <message name="commentResponse">
    <part name="commentid" type="tns:commentIDType"/>
  </message>

  <!--
	 Downtime messages.
   -->

  <!-- Generic downtime request. -->
  <message name="downtimeRequest">
    <part name="downtime" type="tns:downtimeIDType"/>
  </message>

  <!-- Add a downtime related to a host. -->
  <message name="downtimeHostRequest">
    <part name="host" type="tns:hostIDType"/>
    <part name="downtime" type="tns:downtimeType"/>
  </message>

  <!-- Add a downtime related to a service. -->
  <message name="downtimeServiceRequest">
    <part name="service" type="tns:serviceIDType"/>
    <part name="downtime" type="tns:downtimeType"/>
  </message>

  <!-- Returns a downtime ID. -->
  <message name="downtimeResponse">
    <part name="downtimeid" type="tns:downtimeIDType"/>
  </message>

  <!--
	 Notification messages.
   -->

  <!-- Host notification request. -->
  <message name="notificationHostRequest">
    <part name="host" type="tns:hostIDType"/>
    <part name="notification" type="tns:notificationType"/>
  </message>

  <!-- Add service notification. -->
  <message name="notificationServiceRequest">
    <part name="service" type="tns:serviceIDType"/>
    <part name="notification" type="tns:notificationType"/>
  </message>

  <!--
         Timeperiod.
  -->

  <!-- Add a timeperiod. -->
  <message name="timeperiodRequest">
    <part name="timeperiod" type="tns:timeperiodIDType"/>
  </message>

  <!-- Add a timeperiod. -->
  <message name="addTimeperiodRequest">
    <part name="timeperiod" type="tns:timeperiodType"/>
  </message>

  <!--
         Misc.
   -->

  <!-- Process an external command file. -->
  <message name="processFileRequest">
    <part name="file" type="xsd:string"/>
    <part name="delete_once_processed" type="xsd:boolean"/>
  </message>

  <!-- Not validated messages. -->

  <!-- Message sent when setting a feature of a host group. -->
  <message name="hostgroupEnableRequest">
    <part name="hostgroup" type="xsd:string"/>
    <part name="enable" type="xsd:boolean"/>
  </message>

  <!-- Message sent when sending a host notification. -->
  <message name="hostNotificationRequest">
    <part name="host" type="xsd:string"/>
    <part name="notification" type="tns:notificationType"/>
  </message>

  <!-- Message sent when setting a feature of a service group. -->
  <message name="servicegroupEnableRequest">
    <part name="servicegroup" type="xsd:string"/>
    <part name="enable" type="xsd:boolean"/>
  </message>

  <!-- Message sent when sending a service notification. -->
  <message name="serviceNotificationRequest">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
    <part name="notification" type="tns:notificationType"/>
  </message>

  <!-- Configuration messages. -->
  <message name="updateResourceUserRequest">
    <part name="resource" type="tns:resourceUserIDType"/>
    <part name="value" type="xsd:string"/>
  </message>

  <message name="commandCheckIntervalRequest">
    <part name="value" type="xsd:int"/>
    <part name="isSecond" type="xsd:boolean"/>
  </message>

  <portType name="commandPortType">

    <!--
	                      
	 Global operations.  
	                      
     -->

    <!--
	Configuration backup.
    -->

    <!-- saveAllObjects -->
    <operation name="saveAllObjects">
      <documentation>Save all engine objects into a file.</documentation>
      <input message="tns:stringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- saveCommands -->
    <operation name="saveCommands">
      <documentation>Save commands into a file.</documentation>
      <input message="tns:stringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- saveContacts -->
    <operation name="saveContacts">
      <documentation>Save contacts into a file.</documentation>
      <input message="tns:stringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- saveContactgroups -->
    <operation name="saveContactgroups">
      <documentation>Save contactgroups into a file.</documentation>
      <input message="tns:stringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- saveHosts -->
    <operation name="saveHosts">
      <documentation>Save hosts into a file.</documentation>
      <input message="tns:stringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- saveHostEscalations -->
    <operation name="saveHostEscalations">
      <documentation>Save host escalations into a file.</documentation>
      <input message="tns:stringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- saveHostDependencies -->
    <operation name="saveHostDependencies">
      <documentation>Save host dependencies into a file.</documentation>
      <input message="tns:stringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- saveHostGroups -->
    <operation name="saveHostGroups">
      <documentation>Save host groups into a file.</documentation>
      <input message="tns:stringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- saveServices -->
    <operation name="saveServices">
      <documentation>Save services into a file.</documentation>
      <input message="tns:stringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- saveServiceDependencies -->
    <operation name="saveServiceDependencies">
      <documentation>Save service dependencies into a file.</documentation>
      <input message="tns:stringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- saveServiceEscalations -->
    <operation name="saveServiceEscalations">
      <documentation>Save Service escalations into a file.</documentation>
      <input message="tns:stringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- saveServiceGroups -->
    <operation name="saveServiceGroups">
      <documentation>Save service groups into a file.</documentation>
      <input message="tns:stringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- saveTimeperiods -->
    <operation name="saveTimeperiods">
      <documentation>Save timeperiods into a file.</documentation>
      <input message="tns:stringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	Configuration modification.
    -->

    <!-- updateResourceUser -->
    <operation name="updateResourceUser">
      <documentation>Update resource user.</documentation>
      <input message="tns:updateResourceUserRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setCommandCheckInterval -->
    <operation name="setCommandCheckInterval">
      <documentation>Set new value for command check interval variable.</documentation>
      <input message="tns:commandCheckIntervalRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setCheckExternalCommands -->
    <operation name="setCheckExternalCommands">
      <documentation>Set new value for check external commands variable.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setUseAggressiveHostChecking -->
    <operation name="setUseAggressiveHostChecking">
      <documentation>Set new value for use aggressibe host checking variable.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setGlobalHostEventHandler -->
    <operation name="setGlobalHostEventHandler">
      <documentation>Set new value for global host event handler variable.</documentation>
      <input message="tns:commandRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setGlobalServiceEventHandler -->
    <operation name="setGlobalServiceEventHandler">
      <documentation>Set new value for global service event handler variable.</documentation>
      <input message="tns:commandRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setSoftStateDependencies -->
    <operation name="setSoftStateDependencies">
      <documentation>Set new value for soft state dependencies variable.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setServiceFreshnessChecksEnabled -->
    <operation name="setServiceFreshnessChecksEnabled">
      <documentation>Enable freshness checks of all services on a program-wide basis.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setServiceFreshnessCheckInterval -->
    <operation name="setServiceFreshnessCheckInterval">
      <documentation>Set new value for service freshness check interval variable.</documentation>
      <input message="tns:unsignedIntRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setHostFreshnessChecksEnabled -->
    <operation name="setHostFreshnessChecksEnabled">
      <documentation>Enable or disable freshness checks of all hosts on a program-wide basis.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setHostFreshnessCheckInterval -->
    <operation name="setHostFreshnessCheckInterval">
      <documentation>Set new value for host freshness check interval variable.</documentation>
      <input message="tns:unsignedIntRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setAdditionalFreshnessLatency -->
    <operation name="setAdditionalFreshnessLatency">
      <documentation>Set new value for additional freshness latency variable.</documentation>
      <input message="tns:integerRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setLowServiceFlapThreshold -->
    <operation name="setLowServiceFlapThreshold">
      <documentation>Set new value for low service flap threshold variable.</documentation>
      <input message="tns:floatRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setHighServiceFlapThreshold -->
    <operation name="setHighServiceFlapThreshold">
      <documentation>Set new value for hight service flap threshold variable.</documentation>
      <input message="tns:floatRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setLowHostFlapThreshold -->
    <operation name="setLowHostFlapThreshold">
      <documentation>Set new value for low host flap threshold variable.</documentation>
      <input message="tns:floatRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setHighHostFlapThreshold -->
    <operation name="setHighHostFlapThreshold">
      <documentation>Set new value for high host flap threshold variable.</documentation>
      <input message="tns:floatRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setLogNotifications -->
    <operation name="setLogNotifications">
      <documentation>Set new value for log notifications variable.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setLogServiceRetries -->
    <operation name="setLogServiceRetries">
      <documentation>Set new value for log service retries variable.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setLogHostRetries -->
    <operation name="setLogHostRetries">
      <documentation>Set new value for log host retries variable.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setLogEventHandlers -->
    <operation name="setLogEventHandlers">
      <documentation>Set new value for log event handlers variable.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setLogInitialState -->
    <operation name="setLogInitialState">
      <documentation>Set new value for log initial state variable.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setLogExternalCommands -->
    <operation name="setLogExternalCommands">
      <documentation>Set new value for log external commands variable.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setLogPassiveChecks -->
    <operation name="setLogPassiveChecks">
      <documentation>Set new value for log passive chechs variable.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setServiceCheckTimeout -->
    <operation name="setServiceCheckTimeout">
      <documentation>Set new value for service check timeout variable.</documentation>
      <input message="tns:unsignedIntRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setHostCheckTimeout -->
    <operation name="setHostCheckTimeout">
      <documentation>Set new value for host check timeout variable.</documentation>
      <input message="tns:unsignedIntRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setEventHandlerTimeout -->
    <operation name="setEventHandlerTimeout">
      <documentation>Set new value for event handler timeout variable.</documentation>
      <input message="tns:unsignedIntRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setNotificationTimeout -->
    <operation name="setNotificationTimeout">
      <documentation>Set new value for notification timeout variable.</documentation>
      <input message="tns:unsignedIntRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setOcspTimeout -->
    <operation name="setOcspTimeout">
      <documentation>Set new value for ocsp timeout variable.</documentation>
      <input message="tns:unsignedIntRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setOchpTimeout -->
    <operation name="setOchpTimeout">
      <documentation>Set new value for ochp timeout variable.</documentation>
      <input message="tns:unsignedIntRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setRetentionUpdateInterval -->
    <operation name="setRetentionUpdateInterval">
      <documentation>Set new value for retention update interval variable.</documentation>
      <input message="tns:unsignedIntRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setSleepTime -->
    <operation name="setSleepTime">
      <documentation>Set new value for sleep time variable.</documentation>
      <input message="tns:floatRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setserviceinterleavefactor -->
    <operation name="setServiceInterleaveFactor">
      <documentation>Set new value for service inter leave factor variable.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setMaxConcurrentChecks -->
    <operation name="setMaxConcurrentChecks">
      <documentation>Set new value for max concurrent checks variable.</documentation>
      <input message="tns:unsignedIntRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setCheckResultReaperFrequency -->
    <operation name="setCheckResultReaperFrequency">
      <documentation>Set new value for check result reaper frequency variable.</documentation>
      <input message="tns:unsignedIntRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setUseLargeInstallationTweaks -->
    <operation name="setUseLargeInstallationTweaks">
      <documentation>Set new value for use large installation tweaks variable.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setDebugVerbosity -->
    <operation name="setDebugVerbosity">
      <documentation>Set new value for debug verbosity variable.</documentation>
      <input message="tns:unsignedIntRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setDebugLevel -->
    <operation name="setDebugLevel">
      <documentation>Set new value for debug level variable.</documentation>
      <input message="tns:unsignedLongRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setMaxDebugFileSize -->
    <operation name="setMaxDebugFileSize">
      <documentation>Set new value for max debug file size variable.</documentation>
      <input message="tns:unsignedLongRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>


    <!--
         Debug object operations.
    -->

    <!-- dumpObjectList -->
    <!-- <operation name="dumpObjectList"> -->
    <!--   <documentation>Dump all object list</documentation> -->
    <!--   <input message="tns:emptyRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!--
	 Add object operations.
    -->

    <!-- addHost() -->
    <operation name="addHost">
      <documentation>Add Host.</documentation>
      <input message="tns:addHostRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- addService() -->
    <operation name="addService">
      <documentation>Add service.</documentation>
      <input message="tns:addServiceRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- addHostDependency() -->
    <operation name="addHostDependency">
      <documentation>Add host dependency.</documentation>
      <input message="tns:addHostDependencyRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- addHostEscalation() -->
    <operation name="addHostEscalation">
      <documentation>Add host escalation.</documentation>
      <input message="tns:addHostEscalationRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- addServiceDependency() -->
    <operation name="addServiceDependency">
      <documentation>Add Service dependency.</documentation>
      <input message="tns:addServiceDependencyRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- addServiceEscalation() -->
    <operation name="addServiceEscalation">
      <documentation>Add service escalation.</documentation>
      <input message="tns:addServiceEscalationRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- addTimeperiod() -->
    <operation name="addTimeperiod">
      <documentation>Add timeperiod.</documentation>
      <input message="tns:addTimeperiodRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Remove object operations.
    -->

    <!-- removeHost() -->
    <operation name="removeHost">
      <documentation>Remove host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- removeService() -->
    <operation name="removeService">
      <documentation>Remove service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- removeServiceEscalation() -->
    <operation name="removeServiceEscalation">
      <documentation>Remove service escalation.</documentation>
      <input message="tns:serviceEscalationRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- removeServiceDependency() -->
    <operation name="removeServiceDependency">
      <documentation>Remove service dependency.</documentation>
      <input message="tns:serviceDependencyRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- removeTimeperiod() -->
    <!-- <operation name="removeTimeperiod"> -->
    <!--   <documentation>Remove timeperiod.</documentation> -->
    <!--   <input message="tns:timeperiodRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!--
	 Features.
     -->

    <!-- getEventHandlersEnabled() -->
    <operation name="getEventHandlersEnabled">
      <documentation>Check if event handlers are enabled globally.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- getFailurePredictionEnabled() -->
    <operation name="getFailurePredictionEnabled">
      <documentation>Check if failure prediction is globally enabled.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- getFlapDetectionEnabled() -->
    <operation name="getFlapDetectionEnabled">
      <documentation>Check if flap detection is globally enabled.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- getHostsChecksActiveEnabled() -->
    <operation name="getHostsChecksActiveEnabled">
      <documentation>Check if hosts active checks are globally enabled.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- getHostsChecksPassiveEnabled() -->
    <operation name="getHostsChecksPassiveEnabled">
      <documentation>Check if hosts passive checks are globally enabled.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- getHostsEventHandler() -->
    <operation name="getHostsEventHandler">
      <documentation>Get the global host event handler.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:commandResponse"/>
    </operation>

    <!-- getHostsFreshnessChecksEnabled() -->
    <operation name="getHostsFreshnessChecksEnabled">
      <documentation>Check if the hosts freshness checks are globally enabled.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- getHostsObsessOverEnabled() -->
    <operation name="getHostsObsessOverEnabled">
      <documentation>Check if host obsession is globally enabled.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- getNotificationsEnabled() -->
    <operation name="getNotificationsEnabled">
      <documentation>Check if notifications are enabled.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- getPerfdataProcessingEnabled() -->
    <operation name="getPerfdataProcessingEnabled">
      <documentation>Check if performance data processing is enabled.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- getServicesChecksActiveEnabled() -->
    <operation name="getServicesChecksActiveEnabled">
      <documentation>Check if services active checks are enabled.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- getServicesChecksPassiveEnabled() -->
    <operation name="getServicesChecksPassiveEnabled">
      <documentation>Check if services passive checks are enabled.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- getServicesEventHandler() -->
    <operation name="getServicesEventHandler">
      <documentation>Get the global service event handler.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:commandResponse"/>
    </operation>

    <!-- getServicesFreshnessChecksEnabled() -->
    <operation name="getServicesFreshnessChecksEnabled">
      <documentation>Check if services freshness checks are globally enabled.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- getServicesObsessOverEnabled() -->
    <operation name="getServicesObsessOverEnabled">
      <documentation>Check if services obsession is globally enabled.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- setEventHandlersEnabled(enable) -->
    <operation name="setEventHandlersEnabled">
      <documentation>Enable or disable event handlers globally.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setFailurePredictionEnabled(enable) -->
    <operation name="setFailurePredictionEnabled">
      <documentation>Enable or disable failure prediction globally.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setFlapDetectionEnabled(enable) -->
    <operation name="setFlapDetectionEnabled">
      <documentation>Enable or disable flap detection globally.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setHostsChecksActiveEnabled(enable) -->
    <operation name="setHostsChecksActiveEnabled">
      <documentation>Enable or disable active host checks globally.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setHostsChecksPassiveEnabled(enable) -->
    <operation name="setHostsChecksPassiveEnabled">
      <documentation>Enable or disable passive host checks globally.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setHostsEventHandler(command) -->
    <operation name="setHostsEventHandler">
      <documentation>Change the global host event handler.</documentation>
      <input message="tns:commandRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setHostsFreshnessChecksEnabled(enable) -->
    <operation name="setHostsFreshnessChecksEnabled">
      <documentation>Enable or disable host freshness checks globally.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setHostsObsessOverEnabled(enable) -->
    <operation name="setHostsObsessOverEnabled">
      <documentation>Enable or disable obsession over host checks.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setNotificationsEnabled(enable) -->
    <operation name="setNotificationsEnabled">
      <documentation>Enable or disable notifications globally.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setPerfdataProcessingEnabled(enable) -->
    <operation name="setPerfdataProcessingEnabled">
      <documentation>Enable or disable performance data processing globally.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setServicesChecksActiveEnabled(enable) -->
    <operation name="setServicesChecksActiveEnabled">
      <documentation>Enable or disable active service checks globally.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setServicesChecksPassiveEnabled(enable) -->
    <operation name="setServicesChecksPassiveEnabled">
      <documentation>Enable or disable passive service checks globally.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setServicesEventHandler(command) -->
    <operation name="setServicesEventHandler">
      <documentation>Change the global service event handler.</documentation>
      <input message="tns:commandRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setServicesFreshnessChecksEnabled(enable) -->
    <operation name="setServicesFreshnessChecksEnabled">
      <documentation>Enable or disable service freshness checks globally.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- setServicesObsessOverEnabled(enable) -->
    <operation name="setServicesObsessOverEnabled">
      <documentation>Enable or disable obsession over service checks.</documentation>
      <input message="tns:booleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Process.
     -->

    <!-- processRestart() -->
    <operation name="processRestart">
      <documentation>Restart Engine.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- processShutdown() -->
    <operation name="processShutdown">
      <documentation>Shutdown Engine.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Retention file.
     -->

    <!-- stateInformationLoad() -->
    <operation name="stateInformationLoad">
      <documentation>Read state information.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- stateInformationSave() -->
    <operation name="stateInformationSave">
      <documentation>Save state information.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Misc.
     -->

    <!-- processFile(file, delete) -->
    <operation name="processFile">
      <documentation>Directs Engine to process all external commands that are found in a file.</documentation>
      <input message="tns:processFileRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--

         Commands.

     -->

    <!-- commandAdd(command) -->
    <operation name="commandAdd">
      <documentation>Add a new command.</documentation>
      <input message="tns:commandFullRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- commandModify(command) -->
    <operation name="commandModify">
      <documentation>Modify an existing command.</documentation>
      <input message="tns:commandFullRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- commandRemove(command_id) -->
    <operation name="commandRemove">
      <documentation>Remove a command.</documentation>
      <input message="tns:commandRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>


    <!--

         Contact.

     -->

    <!-- contactAdd(contact) -->
    <operation name="contactAdd">
      <documentation>Add a contact.</documentation>
      <input message="tns:contactFullRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactGetAddresses(contact) -->
    <!-- XXX -->

    <!-- contactGetAlias(contact) -->
    <operation name="contactGetAlias">
      <documentation>Get the contact alias.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- contactGetCanSubmitCommands(contact) -->
    <operation name="contactGetCanSubmitCommands">
      <documentation>Check if the contact can submit external commands.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetCustomVariable(contact, variable) -->
    <!-- XXX -->

    <!-- contactGetCustomVariables(contact) -->
    <!-- XXX -->

    <!-- contactGetEmail(contact) -->
    <operation name="contactGetEmail">
      <documentation>Get the contact email.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- contactGetModifiedAttributes(contact) -->
    <operation name="contactGetModifiedAttributes">
      <documentation>Get the contact modified attributes.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- contactGetModifiedAttributesHost(contact) -->
    <operation name="contactGetModifiedAttributesHost">
      <documentation>Get the contact host modified attributes.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- contactGetModifiedAttributesService(contact) -->
    <operation name="contactGetModifiedAttributesService">
      <documentation>Get the contact service modified attributes.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- contactGetNotificationsOnHostCommand(contact) -->
    <operation name="contactGetNotificationsOnHostCommand">
      <documentation>Get the host notification command of the contact.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:commandResponse"/>
    </operation>

    <!-- contactGetNotificationsOnHostDown(contact) -->
    <operation name="contactGetNotificationsOnHostDown">
      <documentation>Check if contact should be notified by down hosts.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetNotificationsOnHostDowntime(contact) -->
    <operation name="contactGetNotificationsOnHostDowntime">
      <documentation>Check if contact should be notified by hosts downtimes.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetNotificationsOnHostEnabled(contact) -->
    <operation name="contactGetNotificationsOnHostEnabled">
      <documentation>Check if contact will be notified by host events.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetNotificationsOnHostFlapping(contact) -->
    <operation name="contactGetNotificationsOnHostFlapping">
      <documentation>Check if contact should be notified when hosts are flapping.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetNotificationsOnHostLast(contact) -->
    <operation name="contactGetNotificationsOnHostLast">
      <documentation>Get the last time the contact received a host notification.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- contactGetNotificationsOnHostRecovery(contact) -->
    <operation name="contactGetNotificationsOnHostRecovery">
      <documentation>Check if contact should be notified when hosts recover.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetNotificationsOnHostTimeperiod(contact) -->
    <operation name="contactGetNotificationsOnHostTimeperiod">
      <documentation>Get the host notification timeperiod of the contact.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:timeperiodResponse"/>
    </operation>

    <!-- contactGetNotificationsOnHostUnreachable(contact) -->
    <operation name="contactGetNotificationsOnHostUnreachable">
      <documentation>Check if contact should be notified when hosts are unreachable.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetNotificationsOnServiceCommand(contact) -->
    <operation name="contactGetNotificationsOnServiceCommand">
      <documentation>Get the service notification command of the contact.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:commandResponse"/>
    </operation>

    <!-- contactGetNotificationsOnServiceCritical(contact) -->
    <operation name="contactGetNotificationsOnServiceCritical">
      <documentation>Check if contact should be notified when services are critical.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetNotificationsOnServiceDowntime(contact) -->
    <operation name="contactGetNotificationsOnServiceDowntime">
      <documentation>Check if contact should be notified by services downtimes.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetNotificationsOnServiceEnabled(contact) -->
    <operation name="contactGetNotificationsOnServiceEnabled">
      <documentation>Check if contact will be notified by service events.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetNotificationsOnServiceFlapping(contact) -->
    <operation name="contactGetNotificationsOnServiceFlapping">
      <documentation>Check if contact should be notified when services are flapping.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetNotificationsOnServiceLast(contact) -->
    <operation name="contactGetNotificationsOnServiceLast">
      <documentation>Get the last time the contact received a service notification.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- contactGetNotificationsOnServiceRecovery(contact) -->
    <operation name="contactGetNotificationsOnServiceRecovery">
      <documentation>Check if contact should be notified when services recover.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetNotificationsOnServiceTimeperiod(contact) -->
    <operation name="contactGetNotificationsOnServiceTimeperiod">
      <documentation>Get the service notification timeperiod of the contact.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:timeperiodResponse"/>
    </operation>

    <!-- contactGetNotificationsOnServiceUnknown(contact) -->
    <operation name="contactGetNotificationsOnServiceUnknown">
      <documentation>Check if contact should be notified when services states are unknown.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetNotificationsOnServiceWarning(contact) -->
    <operation name="contactGetNotificationsOnServiceWarning">
      <documentation>Check if contact should be notified when services are warning.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetPager(contact) -->
    <operation name="contactGetPager">
      <documentation>Get the contact pager.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- contactGetRetainStatusInformation(contact) -->
    <operation name="contactGetRetainStatusInformation">
      <documentation>Check if contact status information should be retained.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactGetRetainStatusNonInformation(contact) -->
    <operation name="contactGetRetainStatusNonInformation">
      <documentation>Check if contact non status information should be retained.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- contactModify(contact) -->
    <operation name="contactModify">
      <documentation>Modify an existing contact.</documentation>
      <input message="tns:contactFullRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactRemove(contact_id) -->
    <operation name="contactRemove">
      <documentation>Remove a contact.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetAlias(contact, alias) -->
    <operation name="contactSetAlias">
      <documentation>Set the contact alias.</documentation>
      <input message="tns:contactStringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetCanSubmitCommands(contact, enable) -->
    <operation name="contactSetCanSubmitCommands">
      <documentation>Enable a contact to submit commands.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetCustomVariable(contact, variable, value) -->
    <!-- XXX -->

    <!-- contactSetEmail(contact, email) -->
    <operation name="contactSetEmail">
      <documentation>Set the email address of a contact.</documentation>
      <input message="tns:contactStringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnHostCommand(contact, command) -->
    <operation name="contactSetNotificationsOnHostCommand">
      <documentation>Set the contact notification command for host events.</documentation>
      <input message="tns:contactCommandRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnHostDown(contact, enable) -->
    <operation name="contactSetNotificationsOnHostDown">
      <documentation>Enable or disable notifications on host down.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnHostDowntime(contact, enable) -->
    <operation name="contactSetNotificationsOnHostDowntime">
      <documentation>Enable or disable notifications on host downtime.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnHostEnabled(contact, enable) -->
    <operation name="contactSetNotificationsOnHostEnabled">
      <documentation>Enable or disable notifications on host.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnHostFlapping(contact, enable) -->
    <operation name="contactSetNotificationsOnHostFlapping">
      <documentation>Enable or disable notifications on flappy hosts.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnHostRecovery(contact, enable) -->
    <operation name="contactSetNotificationsOnHostRecovery">
      <documentation>Enable or disable notifications on host recover.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnHostTimeperiod(contact, timeperiod) -->
    <operation name="contactSetNotificationsOnHostTimeperiod">
      <documentation>Set the host notifications timeperiod of the contact.</documentation>
      <input message="tns:contactTimeperiodRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnHostUnreachable(contact, enable) -->
    <operation name="contactSetNotificationsOnHostUnreachable">
      <documentation>Enable or disable notifications on host unreachable.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnServiceCommand(contact, command) -->
    <operation name="contactSetNotificationsOnServiceCommand">
      <documentation>Set the service notification command.</documentation>
      <input message="tns:contactCommandRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnServiceCritical(contact, enable) -->
    <operation name="contactSetNotificationsOnServiceCritical">
      <documentation>Enable or disable notifications on service critical.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnServiceDowntime(contact, enable) -->
    <operation name="contactSetNotificationsOnServiceDowntime">
      <documentation>Enable or disable notifications on service downtime.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnServiceEnabled(contact, enable) -->
    <operation name="contactSetNotificationsOnServiceEnabled">
      <documentation>Enable or disable notifications on service.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnServiceFlapping(contact, enable) -->
    <operation name="contactSetNotificationsOnServiceFlapping">
      <documentation>Enable or disable notifications on service flapping.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnServiceRecovery(contact, enable) -->
    <operation name="contactSetNotificationsOnServiceRecovery">
      <documentation>Enable or disable notifications on service recovery.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnServiceTimeperiod(contact, timeperiod) -->
    <operation name="contactSetNotificationsOnServiceTimeperiod">
      <documentation>Set the service notification timeperiod of the contact.</documentation>
      <input message="tns:contactTimeperiodRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnServiceUnknown(contact, enable) -->
    <operation name="contactSetNotificationsOnServiceUnknown">
      <documentation>Enable or disable notifications on service unknown.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetNotificationsOnServiceWarning(contact, enable) -->
    <operation name="contactSetNotificationsOnServiceWarning">
      <documentation>Enable or disable notifications on service warning.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetPager(contact, pager) -->
    <operation name="contactSetPager">
      <documentation>Set the contact pager.</documentation>
      <input message="tns:contactStringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetRetainStatusInformation(contact, enable) -->
    <operation name="contactSetRetainStatusInformation">
      <documentation>Enable or disable status information retention for contact.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactSetRetainStatusNonInformation(contact, enable) -->
    <operation name="contactSetRetainStatusNonInformation">
      <documentation>Enable or disable non status information retention for contact.</documentation>
      <input message="tns:contactBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>


    <!--

         Contact group.

     -->

    <!-- contactgroupAdd(contactgroup) -->
    <operation name="contactgroupAdd">
      <documentation>Add a contact group.</documentation>
      <input message="tns:contactgroupFullRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactgroupAddContact(contactgroup_id, contact_id) -->
    <operation name="contactgroupAddContact">
      <documentation>Add a contact to the contact group.</documentation>
      <input message="tns:contactgroupContactRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactgroupAddContactgroup(contactgroup_id, contactgroup_id) -->
    <operation name="contactgroupAddContactgroup">
      <documentation>Add a contact group to the contact group.</documentation>
      <input message="tns:contactgroupContactgroupRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactgroupModify(contactgroup) -->
    <operation name="contactgroupModify">
      <documentation>Modify an existing contact group.</documentation>
      <input message="tns:contactgroupFullRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactgroupRemove(contactgroup_id) -->
    <operation name="contactgroupRemove">
      <documentation>Remove a contact group.</documentation>
      <input message="tns:contactgroupRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- contactgroupRemoveContact(contactgroup_id, contact_id) -->
    <operation name="contactgroupRemoveContact">
      <documentation>Remove a contact member.</documentation>
      <input message="tns:contactgroupContactRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>


    <!--
	                   
	 Host.
	                   
     -->

    <!--
	 Acknowledgement.
     -->

    <!-- hostGetAcknowledgementIsSet(host) -->
    <operation name="hostGetAcknowledgementIsSet">
      <documentation>Get whether or not the host is acknowledged.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetAcknowledgementType(host) -->
    <operation name="hostGetAcknowledgementType">
      <documentation>Get the current type of the acknowledgement on a host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedShortResponse"/>
    </operation>

    <!--
	 Address.
     -->

    <!-- hostGetAddress(host) -->
    <operation name="hostGetAddress">
      <documentation>Get the address of the host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- hostSetAddress(host, address) -->
    <operation name="hostSetAddress">
      <documentation>Set the address of the host.</documentation>
      <input message="tns:hostStringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Check.
     -->

    <!-- hostGetCheckActiveEnabled(host) -->
    <operation name="hostGetCheckActiveEnabled">
      <documentation>Check if active checks are enabled on the host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetCheckCommand(host) -->
    <operation name="hostGetCheckCommand">
      <documentation>Get the host check command.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- hostGetCheckCurrentAttempt(host) -->
    <operation name="hostGetCheckCurrentAttempt">
      <documentation>Get the current check attempt of the host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostGetCheckIntervalNormal(host) -->
    <operation name="hostGetCheckIntervalNormal">
      <documentation>Get the normal check interval.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostGetCheckIntervalRetry(host) -->
    <operation name="hostGetCheckIntervalRetry">
      <documentation>Get the retry check interval.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostGetCheckLast(host) -->
    <operation name="hostGetCheckLast">
      <documentation>Get the date when the last check was executed.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- hostGetCheckMaxAttempts(host) -->
    <operation name="hostGetCheckMaxAttempts">
      <documentation>Get the max check attempts of the host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostGetCheckNext(host) -->
    <operation name="hostGetCheckNext">
      <documentation>Get the time at which the next host check is scheduled to run.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- hostGetCheckOptions(host) -->
    <operation name="hostGetCheckOptions">
      <documentation>Get the host check options.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostGetCheckPassiveEnabled(host) -->
    <operation name="hostGetCheckPassiveEnabled">
      <documentation>Check if passive checks are enabled on this host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetCheckPeriod(host) -->
    <operation name="hostGetCheckPeriod">
      <documentation>Get the host check period.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:timeperiodResponse"/>
    </operation>

    <!-- hostGetCheckShouldBeScheduled(host) -->
    <operation name="hostGetCheckShouldBeScheduled">
      <documentation>Check if the host should be scheduled.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetCheckType(host) -->
    <operation name="hostGetCheckType">
      <documentation>Get the type of the host check.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedShortResponse"/>
    </operation>

    <!-- hostSetCheckActiveEnabled(host, enable) -->
    <operation name="hostSetCheckActiveEnabled">
      <documentation>Enable or disable active checks on the host.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetCheckCommand(host, command) -->
    <operation name="hostSetCheckCommand">
      <documentation>Set the host check command.</documentation>
      <input message="tns:hostStringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetCheckIntervalNormal(host, interval) -->
    <operation name="hostSetCheckIntervalNormal">
      <documentation>Set the normal check interval of the host.</documentation>
      <input message="tns:hostUnsignedIntegerRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetCheckIntervalRetry(host, interval) -->
    <operation name="hostSetCheckIntervalRetry">
      <documentation>Set the retry check interval of the host.</documentation>
      <input message="tns:hostUnsignedIntegerRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetCheckMaxAttempts(host, attempts) -->
    <operation name="hostSetCheckMaxAttempts">
      <documentation>Set the max check attempts of the host.</documentation>
      <input message="tns:hostUnsignedIntegerRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetCheckPassiveEnabled(host, enable) -->
    <operation name="hostSetCheckPassiveEnabled">
      <documentation>Enable or disable host passive checks.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetCheckPeriod(host, period) -->
    <operation name="hostSetCheckPeriod">
      <documentation>Set the host check period.</documentation>
      <input message="tns:hostTimeperiodRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Circular path.
     -->

    <!-- hostGetCircularPathChecked(host) -->
    <operation name="hostGetCircularPathChecked">
      <documentation>Check if the host has been checked for circular path.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetCircularPathHas(host) -->
    <operation name="hostGetCircularPathHas">
      <documentation>Check if the host has circular path.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!--
	 Custom Variable.
     -->

    <!-- hostGetCustomVariable(host) -->
    <!-- <operation name="hostGetCustomVariable"> -->
    <!--   <documentation>Get the value of a host custom variable.</documentation> -->
    <!--   <input message="tns:hostStringRequest"/> -->
    <!--   <output message="tns:stringResponse"/> -->
    <!-- </operation> -->

    <!-- hostGetCustomVariables(host) -->
    <!-- XXX -->

    <!-- hostSetCustomVariable(host, variable, value) -->
    <!-- XXX -->

    <!--
	 Downtime.
     -->

    <!-- hostGetDowntimeDepth(host) -->
    <operation name="hostGetDowntimeDepth">
      <documentation>Get the host downtime depth.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostGetDowntimeFlexPending(host) -->
    <operation name="hostGetDowntimeFlexPending">
      <documentation>Check if host has a pending flexible downtime.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!--
	 Event Handler.
     -->

    <!-- hostGetEventHandler(host) -->
    <operation name="hostGetEventHandler">
      <documentation>Get the host event handler.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- hostGetEventHandlerEnabled(host) -->
    <operation name="hostGetEventHandlerEnabled">
      <documentation>Check if the host event handler is enabled.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostSetEventHandler(host, eventhandler) -->
    <operation name="hostSetEventHandler">
      <documentation>Set the host event handler.</documentation>
      <input message="tns:hostStringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetEventHandlerEnabled(host, enable) -->
    <operation name="hostSetEventHandlerEnabled">
      <documentation>Enable or disable host event handler.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Failure Prediction.
     -->

    <!-- hostGetFailurePredictionEnabled(host) -->
    <operation name="hostGetFailurePredictionEnabled">
      <documentation>Check if failure prediction is enabled on host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetFailurePredictionOptions(host) -->
    <operation name="hostGetFailurePredictionOptions">
      <documentation>Get host failure prediction options.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- hostSetFailurePredictionEnabled(host, enable) -->
    <operation name="hostSetFailurePredictionEnabled">
      <documentation>Enable or disable failure prediction on host.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Flap Detection.
     -->

    <!-- hostGetFlapDetectionCommentID(host) -->
    <operation name="hostGetFlapDetectionCommentID">
      <documentation>Get the flap detection comment ID of the host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostGetFlapDetectionEnabled(host) -->
    <operation name="hostGetFlapDetectionEnabled">
      <documentation>Check whether flap detection is enabled on host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetFlapDetectionIsFlapping(host) -->
    <operation name="hostGetFlapDetectionIsFlapping">
      <documentation>Check if host is flapping.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetFlapDetectionOnDown(host) -->
    <operation name="hostGetFlapDetectionOnDown">
      <documentation>Check if flap detection is enabled on down state.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetFlapDetectionOnUnreachable(host) -->
    <operation name="hostGetFlapDetectionOnUnreachable">
      <documentation>Check if flap detection is enabled on unreachable state.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetFlapDetectionOnUp(host) -->
    <operation name="hostGetFlapDetectionOnUp">
      <documentation>Check if flap detection is enabled on up state.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetFlapDetectionStateHistory(host) -->
    <!-- XXX -->

    <!-- hostGetFlapDetectionStateHistoryLastUpdate(host) -->
    <operation name="hostGetFlapDetectionStateHistoryLastUpdate">
      <documentation>Get the last time the flap detection state history was updated.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- hostGetFlapDetectionThresholdHigh(host) -->
    <operation name="hostGetFlapDetectionThresholdHigh">
      <documentation>Get the host high flap threshold.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:doubleResponse"/>
    </operation>

    <!-- hostGetFlapDetectionThresholdLow(host) -->
    <operation name="hostGetFlapDetectionThresholdLow">
      <documentation>Get the host low flap threshold.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:doubleResponse"/>
    </operation>

    <!-- hostSetFlapDetectionEnabled(host, enable) -->
    <operation name="hostSetFlapDetectionEnabled">
      <documentation>Enable or disable flap detection on host.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetFlapDetectionOnDown(host, enable) -->
    <operation name="hostSetFlapDetectionOnDown">
      <documentation>Enable or disable flap detection on down state.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetFlapDetectionOnUnreachable(host, enable) -->
    <operation name="hostSetFlapDetectionOnUnreachable">
      <documentation>Enable or disable flap detection on unreachable state.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetFlapDetectionOnUp(host, enable) -->
    <operation name="hostSetFlapDetectionOnUp">
      <documentation>Enable or disable flap detection on up state.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetFlapDetectionThresholdHigh(host, threshold) -->
    <operation name="hostSetFlapDetectionThresholdHigh">
      <documentation>Set the high flap threshold of the host.</documentation>
      <input message="tns:hostDoubleRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetFlapDetectionThresholdLow(host, threshold) -->
    <operation name="hostSetFlapDetectionThresholdLow">
      <documentation>Set the low flap threshold of the host.</documentation>
      <input message="tns:hostDoubleRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Freshness.
     -->

    <!-- hostGetFreshnessCheckEnabled(host) -->
    <operation name="hostGetFreshnessCheckEnabled">
      <documentation>Check if freshness checks are enabled on host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetFreshnessIsActive(host) -->
    <operation name="hostGetFreshnessIsActive">
      <documentation>Check if freshness check is active on host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetFreshnessThreshold(host) -->
    <operation name="hostGetFreshnessThreshold">
      <documentation>Get the freshness threshold of the host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:integerResponse"/>
    </operation>

    <!-- hostSetFreshnessCheckEnabled(host, enable) -->
    <operation name="hostSetFreshnessCheckEnabled">
      <documentation>Enable or disable freshness checks on host.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetFreshnessThreshold(host, threshold) -->
    <operation name="hostSetFreshnessThreshold">
      <documentation>Set the host freshness threshold.</documentation>
      <input message="tns:hostIntegerRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Modified Attributes.
     -->

    <!-- hostGetModifiedAttributes(host) -->
    <operation name="hostGetModifiedAttributes">
      <documentation>Get the modified attributes on the host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!--
	 Name.
     -->

    <!-- hostGetNameAlias(host) -->
    <operation name="hostGetNameAlias">
      <documentation>Get the host alias.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- hostGetNameDisplay(host) -->
    <operation name="hostGetNameDisplay">
      <documentation>Get the host display name.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- hostSetNameAlias(host, alias) -->
    <operation name="hostSetNameAlias">
      <documentation>Set the host alias.</documentation>
      <input message="tns:hostStringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetNameDisplay(host, displayname) -->
    <operation name="hostSetNameDisplay">
      <documentation>Set the display name of the host.</documentation>
      <input message="tns:hostStringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Notification.
     -->

    <!-- hostGetNotificationsCurrentID(host) -->
    <operation name="hostGetNotificationsCurrentID">
      <documentation>Get the ID of the current host notification.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostGetNotificationsCurrentNumber(host) -->
    <operation name="hostGetNotificationsCurrentNumber">
      <documentation>Get the current notification number of the host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostGetNotificationsEnabled(host) -->
    <operation name="hostGetNotificationsEnabled">
      <documentation>Check if notifications are enabled on host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetNotificationsFirstDelay(host) -->
    <operation name="hostGetNotificationsFirstDelay">
      <documentation>Get the first notification delay of the host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostGetNotificationsInterval(host) -->
    <operation name="hostGetNotificationsInterval">
      <documentation>Get the notification interval of the host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostGetNotificationsLast(host) -->
    <operation name="hostGetNotificationsLast">
      <documentation>Get the time at which the last notification was sent.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- hostGetNotificationsNext(host) -->
    <operation name="hostGetNotificationsNext">
      <documentation>Get the time at which the next notification will be sent.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- hostGetNotificationsNoMore(host) -->
    <!-- XXX -->

    <!-- hostGetNotificationsOnDown(host) -->
    <operation name="hostGetNotificationsOnDown">
      <documentation>Check if notifications are sent if host is down.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetNotificationsOnDowntime(host) -->
    <operation name="hostGetNotificationsOnDowntime">
      <documentation>Check if notifications are sent if host is on downtime.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetNotificationsOnFlapping(host) -->
    <operation name="hostGetNotificationsOnFlapping">
      <documentation>Check if notifications are sent if host is flappy.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetNotificationsOnRecovery(host) -->
    <operation name="hostGetNotificationsOnRecovery">
      <documentation>Check if notifications are sent if host recovers.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetNotificationsOnUnreachable(host) -->
    <operation name="hostGetNotificationsOnUnreachable">
      <documentation>Check if notifications are sent if host is unreachable.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetNotificationsPeriod(host) -->
    <operation name="hostGetNotificationsPeriod">
      <documentation>Get the notification period of the host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:timeperiodResponse"/>
    </operation>

    <!-- hostSetNotificationsBeyondEnabled(host, enable) -->
    <operation name="hostSetNotificationsBeyondEnabled">
      <documentation>Enable or disable all notifications beyond a host.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetNotificationsEnabled(host, enable) -->
    <operation name="hostSetNotificationsEnabled">
      <documentation>Enable or disable notifications on host.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetNotificationsFirstDelay(host, delay) -->
    <operation name="hostSetNotificationsFirstDelay">
      <documentation>Set the time after which the first host notification will be sent.</documentation>
      <input message="tns:hostUnsignedIntegerRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetNotificationsInterval(host, interval) -->
    <operation name="hostSetNotificationsInterval">
      <documentation>Set the notification interval of the host.</documentation>
      <input message="tns:hostUnsignedIntegerRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetNotificationsOnDown(host, enable) -->
    <operation name="hostSetNotificationsOnDown">
      <documentation>Enable or disable notifications when host is down.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetNotificationsOnDowntime(host, enable) -->
    <operation name="hostSetNotificationsOnDowntime">
      <documentation>Enable or disable notifications when host is in downtime.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetNotificationsOnFlapping(host, enable) -->
    <operation name="hostSetNotificationsOnFlapping">
      <documentation>Enable or disable notifications when host is flappy.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetNotificationsOnRecovery(host, enable) -->
    <operation name="hostSetNotificationsOnRecovery">
      <documentation>Enable or disable notifications when host recovers.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetNotificationsOnSelfAndChildrenEnabled(host, enable) -->
    <operation name="hostSetNotificationsOnSelfAndChildrenEnabled">
      <documentation>Enable notifications of a host and its children.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetNotificationsOnUnreachable(host, enable) -->
    <operation name="hostSetNotificationsOnUnreachable">
      <documentation>Enable or disable notifications when host is unreachable.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetNotificationsPeriod(host, period) -->
    <operation name="hostSetNotificationsPeriod">
      <documentation>Set notification period of host.</documentation>
      <input message="tns:hostTimeperiodRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Obsession.
     -->

    <!-- hostGetObsessOver(host) -->
    <operation name="hostGetObsessOver">
      <documentation>Check whether or not host is being obsessed over.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostSetObsessOver(host, enable) -->
    <operation name="hostSetObsessOver">
      <documentation>Enable or disable host obsession.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Perfdata.
     -->

    <!-- hostGetPerfdataProcessingEnabled(host) -->
    <operation name="hostGetPerfdataProcessingEnabled">
      <documentation>Check if perfdata processing is enabled on host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostSetPerfdataProcessingEnabled(host, enable) -->
    <operation name="hostSetPerfdataProcessingEnabled">
      <documentation>Enable or disable perfdata processing.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Plugin.
     -->

    <!-- hostGetPluginExecutionTime(host) -->
    <operation name="hostGetPluginExecutionTime">
      <documentation>Get the last execution time of the plugin.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostGetPluginIsExecuting(host) -->
    <operation name="hostGetPluginIsExecuting">
      <documentation>Check if host check if currently executing.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetPluginLatency(host) -->
    <operation name="hostGetPluginLatency">
      <documentation>Get the host latency.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:doubleResponse"/>
    </operation>

    <!-- hostGetPluginOutput(host) -->
    <operation name="hostGetPluginOutput">
      <documentation>Get the plugin output.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- hostGetPluginPerfdata(host) -->
    <operation name="hostGetPluginPerfdata">
      <documentation>Get the plugin perfdata.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!--
	 Retention.
     -->

    <!-- hostGetRetainStatusInformation(host) -->
    <operation name="hostGetRetainStatusInformation">
      <documentation>Check if host status information are retained.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetRetainNonStatusInformation(host) -->
    <operation name="hostGetRetainNonStatusInformation">
      <documentation>Check if host non status information are retained.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostSetRetainStatusInformation(host, enable) -->
    <operation name="hostSetRetainStatusInformation">
      <documentation>Enable or disable status information retention on host.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetRetainNonStatusInformation(host, enable) -->
    <operation name="hostSetRetainNonStatusInformation">
      <documentation>Enable or disable non status information retention on host.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Services.
     -->

    <!-- hostGetServicesCount(host) -->
    <operation name="hostGetServicesCount">
      <documentation>Get the number of services on this host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostGetServicesTotalCheckInterval(host) -->
    <operation name="hostGetServicesTotalCheckInterval">
      <documentation>Get the total check interval on this host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- hostSetServicesCheckActiveEnabled(host, enable) -->
    <operation name="hostSetServicesCheckActiveEnabled">
      <documentation>Enable or disable active checks on all services of the host.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetServicesNotificationsEnabled(host, enable) -->
    <operation name="hostSetServicesNotificationsEnabled">
      <documentation>Enable or disable notifications on all services of the host.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Stalking.
     -->

    <!-- hostGetStalkOnDown(host) -->
    <operation name="hostGetStalkOnDown">
      <documentation>Check if stalking on down is enabled on host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetStalkOnUnreachable(host) -->
    <operation name="hostGetStalkOnUnreachable">
      <documentation>Check if stalking on unreachable is enabled on host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostGetStalkOnUp(host) -->
    <operation name="hostGetStalkOnUp">
      <documentation>Check if stalking on up is enabled on host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- hostSetStalkOnDown(host, enable) -->
    <operation name="hostSetStalkOnDown">
      <documentation>Enable or disable stalking on down.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetStalkOnUnreachable(host, enable) -->
    <operation name="hostSetStalkOnUnreachable">
      <documentation>Enable or disable stalking on unreachable.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostSetStalkOnUp(host, enable) -->
    <operation name="hostSetStalkOnUp">
      <documentation>Enable or disable stalking on up.</documentation>
      <input message="tns:hostBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 State.
     -->

    <!-- hostGetStateCurrent(host) -->
    <operation name="hostGetStateCurrent">
      <documentation>Get the current state of the state.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedShortResponse"/>
    </operation>

    <!-- hostGetStateInitial(host) -->
    <operation name="hostGetStateInitial">
      <documentation>Get the initial state of the host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedShortResponse"/>
    </operation>

    <!-- hostGetStateLast(host) -->
    <operation name="hostGetStateLast">
      <documentation>Get the last host state.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:unsignedShortResponse"/>
    </operation>

    <!-- hostGetStateLastChange(host) -->
    <operation name="hostGetStateLastChange">
      <documentation>Get the last time the state changed.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- hostGetStateLastDown(host) -->
    <operation name="hostGetStateLastDown">
      <documentation>Get the last time the host was in a down state.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- hostGetStateLastHard(host) -->
    <operation name="hostGetStateLastHard">
      <documentation>Get the host last hard state.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- hostGetStateLastHardChange(host) -->
    <operation name="hostGetStateLastHardChange">
      <documentation>Get the last time at which the hard state changed.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- hostGetStateLastUnreachable(host) -->
    <operation name="hostGetStateLastUnreachable">
      <documentation>Get the last time the host was in an unreachable state.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- hostGetStateLastUp(host) -->
    <operation name="hostGetStateLastUp">
      <documentation>Get the last time the host was in an up state.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- hostGetStatePercentChange(host) -->
    <operation name="hostGetStatePercentChange">
      <documentation>Get the percent state change of the host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- hostGetStateType(host) -->
    <operation name="hostGetStateType">
      <documentation>Get state type (hard or soft).</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:dateResponse"/>
    </operation>


    <!--
	                      
	 Service properties.  
	                      
     -->

    <!--
	 Acknowledgement.
     -->

    <!-- serviceGetAcknowledgementIsSet(service) -->
    <operation name="serviceGetAcknowledgementIsSet">
      <documentation>Get whether or not the service is acknowledged.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetAcknowledgementType(service) -->
    <operation name="serviceGetAcknowledgementType">
      <documentation>Get the current type of the acknowledgement on a service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedShortResponse"/>
    </operation>

    <!--
	 Check.
     -->

    <!-- serviceGetCheckActiveEnabled(service) -->
    <operation name="serviceGetCheckActiveEnabled">
      <documentation>Check if active checks are enabled on the service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetCheckCommand(service) -->
    <operation name="serviceGetCheckCommand">
      <documentation>Get the service check command.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- serviceGetCheckCurrentAttempt(service) -->
    <operation name="serviceGetCheckCurrentAttempt">
      <documentation>Get the current check attempt of the service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- serviceGetCheckIntervalNormal(service) -->
    <operation name="serviceGetCheckIntervalNormal">
      <documentation>Get the normal check interval.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- serviceGetCheckIntervalRetry(service) -->
    <operation name="serviceGetCheckIntervalRetry">
      <documentation>Get the retry check interval.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- serviceGetCheckLast(service) -->
    <operation name="serviceGetCheckLast">
      <documentation>Get the date when the last check was executed.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- serviceGetCheckMaxAttempts(service) -->
    <operation name="serviceGetCheckMaxAttempts">
      <documentation>Get the max check attempts of the service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- serviceGetCheckNext(service) -->
    <operation name="serviceGetCheckNext">
      <documentation>Get the time at which the next service check is scheduled to run.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- serviceGetCheckOptions(service) -->
    <operation name="serviceGetCheckOptions">
      <documentation>Get the service check options.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- serviceGetCheckPassiveEnabled(service) -->
    <operation name="serviceGetCheckPassiveEnabled">
      <documentation>Check if passive checks are enabled on this service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetCheckPeriod(service) -->
    <operation name="serviceGetCheckPeriod">
      <documentation>Get the service check period.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:timeperiodResponse"/>
    </operation>

    <!-- serviceGetCheckShouldBeScheduled(service) -->
    <operation name="serviceGetCheckShouldBeScheduled">
      <documentation>Check if the service should be scheduled.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetCheckType(service) -->
    <operation name="serviceGetCheckType">
      <documentation>Get the type of the service check.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedShortResponse"/>
    </operation>

    <!-- serviceSetCheckActiveEnabled(service, enable) -->
    <operation name="serviceSetCheckActiveEnabled">
      <documentation>Enable or disable active checks on the service.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetCheckCommand(service, command) -->
    <operation name="serviceSetCheckCommand">
      <documentation>Set the service check command.</documentation>
      <input message="tns:serviceStringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetCheckIntervalNormal(service, interval) -->
    <operation name="serviceSetCheckIntervalNormal">
      <documentation>Set the normal check interval of the service.</documentation>
      <input message="tns:serviceUnsignedIntegerRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetCheckIntervalRetry(service, interval) -->
    <operation name="serviceSetCheckIntervalRetry">
      <documentation>Set the retry check interval of the service.</documentation>
      <input message="tns:serviceUnsignedIntegerRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetCheckMaxAttempts(service, attempts) -->
    <operation name="serviceSetCheckMaxAttempts">
      <documentation>Set the max check attempts of the service.</documentation>
      <input message="tns:serviceUnsignedIntegerRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetCheckPassiveEnabled(service, enable) -->
    <operation name="serviceSetCheckPassiveEnabled">
      <documentation>Enable or disable host passive checks.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetCheckPeriod(service, period) -->
    <operation name="serviceSetCheckPeriod">
      <documentation>Set the service check period.</documentation>
      <input message="tns:serviceTimeperiodRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Custom Variable.
     -->

    <!-- serviceGetCustomVariable(service) -->
    <operation name="serviceGetCustomVariable">
      <documentation>Get the value of a service custom variable.</documentation>
      <input message="tns:serviceStringRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- serviceGetCustomVariables(service) -->
    <!-- XXX -->

    <!-- serviceSetCustomVariable(service, variable, value) -->
    <!-- XXX -->

    <!--
	 Downtime.
     -->

    <!-- serviceGetDowntimeDepth(service) -->
    <operation name="serviceGetDowntimeDepth">
      <documentation>Get the service downtime depth.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- serviceGetDowntimeFlexPending(service) -->
    <operation name="serviceGetDowntimeFlexPending">
      <documentation>Check if service has a pending flexible downtime.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!--
	 Event Handler.
     -->

    <!-- serviceGetEventHandler(service) -->
    <operation name="serviceGetEventHandler">
      <documentation>Get the service event handler.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- serviceGetEventHandlerEnabled(service) -->
    <operation name="serviceGetEventHandlerEnabled">
      <documentation>Check if the service event handler is enabled.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceSetEventHandler(service, eventhandler) -->
    <operation name="serviceSetEventHandler">
      <documentation>Set the service event handler.</documentation>
      <input message="tns:serviceStringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetEventHandlerEnabled(service, enable) -->
    <operation name="serviceSetEventHandlerEnabled">
      <documentation>Enable or disable service event handler.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Failure Prediction.
     -->

    <!-- serviceGetFailurePredictionEnabled(service) -->
    <operation name="serviceGetFailurePredictionEnabled">
      <documentation>Check if failure prediction is enabled on service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetFailurePredictionOptions(service) -->
    <operation name="serviceGetFailurePredictionOptions">
      <documentation>Get service failure prediction options.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- serviceSetFailurePredictionEnabled(service, enable) -->
    <operation name="serviceSetFailurePredictionEnabled">
      <documentation>Enable or disable failure prediction on service.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Flap Detection.
     -->

    <!-- serviceGetFlapDetectionCommentID(host) -->
    <operation name="serviceGetFlapDetectionCommentID">
      <documentation>Get the flap detection comment ID of the service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- serviceGetFlapDetectionEnabled(service) -->
    <operation name="serviceGetFlapDetectionEnabled">
      <documentation>Check whether flap detection is enabled on service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetFlapDetectionIsFlapping(service) -->
    <operation name="serviceGetFlapDetectionIsFlapping">
      <documentation>Check if service is flapping.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetFlapDetectionOnCritical(service) -->
    <operation name="serviceGetFlapDetectionOnCritical">
      <documentation>Check if flap detection is enabled on critical state.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetFlapDetectionOnOk(service) -->
    <operation name="serviceGetFlapDetectionOnOk">
      <documentation>Check if flap detection is enabled on ok state.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetFlapDetectionOnUnknown(service) -->
    <operation name="serviceGetFlapDetectionOnUnknown">
      <documentation>Check if flap detection is enabled on unknown state.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetFlapDetectionOnWarning(service) -->
    <operation name="serviceGetFlapDetectionOnWarning">
      <documentation>Check if flap detection is enabled on warning state.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetFlapDetectionStateHistory(service) -->
    <!-- XXX -->

    <!-- serviceGetFlapDetectionThresholdHigh(service) -->
    <operation name="serviceGetFlapDetectionThresholdHigh">
      <documentation>Get the service high flap threshold.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:doubleResponse"/>
    </operation>

    <!-- serviceGetFlapDetectionThresholdLow(service) -->
    <operation name="serviceGetFlapDetectionThresholdLow">
      <documentation>Get the service low flap threshold.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:doubleResponse"/>
    </operation>

    <!-- serviceSetFlapDetectionEnabled(service, enable) -->
    <operation name="serviceSetFlapDetectionEnabled">
      <documentation>Enable or disable flap detection on service.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetFlapDetectionOnCritical(service, enable) -->
    <operation name="serviceSetFlapDetectionOnCritical">
      <documentation>Enable or disable flap detection on critical state.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetFlapDetectionOnOk(service, enable) -->
    <operation name="serviceSetFlapDetectionOnOk">
      <documentation>Enable or disable flap detection on ok state.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetFlapDetectionOnUnknown(service, enable) -->
    <operation name="serviceSetFlapDetectionOnUnknown">
      <documentation>Enable or disable flap detection on unknown state.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetFlapDetectionOnWarning(service, enable) -->
    <operation name="serviceSetFlapDetectionOnWarning">
      <documentation>Enable or disable flap detection on warning state.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetFlapDetectionThresholdHigh(service, threshold) -->
    <operation name="serviceSetFlapDetectionThresholdHigh">
      <documentation>Set the high flap threshold of the service.</documentation>
      <input message="tns:serviceDoubleRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetFlapDetectionThresholdLow(service, threshold) -->
    <operation name="serviceSetFlapDetectionThresholdLow">
      <documentation>Set the low flap threshold of the service.</documentation>
      <input message="tns:serviceDoubleRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Freshness.
     -->

    <!-- serviceGetFreshnessCheckEnabled(service) -->
    <operation name="serviceGetFreshnessCheckEnabled">
      <documentation>Check if freshness checks are enabled on service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetFreshnessIsActive(service) -->
    <operation name="serviceGetFreshnessIsActive">
      <documentation>Check if freshness check is active on service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetFreshnessThreshold(service) -->
    <operation name="serviceGetFreshnessThreshold">
      <documentation>Get the freshness threshold of the service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:integerResponse"/>
    </operation>

    <!-- serviceSetFreshnessCheckEnabled(service, enable) -->
    <operation name="serviceSetFreshnessCheckEnabled">
      <documentation>Enable or disable freshness checks on service.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetFreshnessThreshold(service, threshold) -->
    <operation name="serviceSetFreshnessThreshold">
      <documentation>Set the service freshness threshold.</documentation>
      <input message="tns:serviceIntegerRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Modified Attributes.
     -->

    <!-- serviceGetModifiedAttributes(service) -->
    <operation name="serviceGetModifiedAttributes">
      <documentation>Get the modified attributes on the service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!--
	 Name.
     -->

    <!-- serviceGetNameDisplay(service) -->
    <operation name="serviceGetNameDisplay">
      <documentation>Get the service display name.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- serviceSetNameDisplay(service, displayname) -->
    <operation name="serviceSetNameDisplay">
      <documentation>Set the display name of the service.</documentation>
      <input message="tns:serviceStringRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Notifications.
     -->

    <!-- serviceGetNotificationsCurrentID(service) -->
    <operation name="serviceGetNotificationsCurrentID">
      <documentation>Get the ID of the current service notification.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- serviceGetNotificationsCurrentNumber(service) -->
    <operation name="serviceGetNotificationsCurrentNumber">
      <documentation>Get the current notification number of the service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- serviceGetNotificationsEnabled(service) -->
    <operation name="serviceGetNotificationsEnabled">
      <documentation>Check if notifications are enabled on service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetNotificationsFirstDelay(service) -->
    <operation name="serviceGetNotificationsFirstDelay">
      <documentation>Get the first notification delay of the service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- serviceGetNotificationsInterval(service) -->
    <operation name="serviceGetNotificationsInterval">
      <documentation>Get the notification interval of the service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- serviceGetNotificationsLast(service) -->
    <operation name="serviceGetNotificationsLast">
      <documentation>Get the time at which the last notification was sent.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- serviceGetNotificationsNext(service) -->
    <operation name="serviceGetNotificationsNext">
      <documentation>Get the time at which the next notification will be sent.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- serviceGetNotificationsNoMore(service) -->
    <!-- XXX -->

    <!-- serviceGetNotificationsOnCritical(service) -->
    <operation name="serviceGetNotificationsOnCritical">
      <documentation>Check if notifications are sent if service is critical.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetNotificationsOnDowntime(service) -->
    <operation name="serviceGetNotificationsOnDowntime">
      <documentation>Check if notifications are sent if service is on downtime.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetNotificationsOnFlapping(service) -->
    <operation name="serviceGetNotificationsOnFlapping">
      <documentation>Check if notifications are sent if service is flappy.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetNotificationsOnRecovery(service) -->
    <operation name="serviceGetNotificationsOnRecovery">
      <documentation>Check if notifications are sent if service recovers.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetNotificationsOnUnknown(service) -->
    <operation name="serviceGetNotificationsOnUnknown">
      <documentation>Check if notifications are sent if service is unknown.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetNotificationsOnWarning(service) -->
    <operation name="serviceGetNotificationsOnWarning">
      <documentation>Check if notifications are sent if service is warning.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetNotificationsPeriod(service) -->
    <operation name="serviceGetNotificationsPeriod">
      <documentation>Get the notification period of the service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:timeperiodResponse"/>
    </operation>

    <!-- serviceSetNotificationsEnabled(service, enable) -->
    <operation name="serviceSetNotificationsEnabled">
      <documentation>Enable or disable notifications on service.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetNotificationsFirstDelay(service, delay) -->
    <operation name="serviceSetNotificationsFirstDelay">
      <documentation>Set the time after which the first service notification will be sent.</documentation>
      <input message="tns:serviceUnsignedIntegerRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetNotificationsInterval(service, interval) -->
    <operation name="serviceSetNotificationsInterval">
      <documentation>Set the notification interval of the service.</documentation>
      <input message="tns:serviceUnsignedIntegerRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetNotificationsOnCritical(service, enable) -->
    <operation name="serviceSetNotificationsOnCritical">
      <documentation>Enable or disable notifications when service is critical.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetNotificationsOnDowntime(service, enable) -->
    <operation name="serviceSetNotificationsOnDowntime">
      <documentation>Enable or disable notifications when service is in downtime.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetNotificationsOnFlapping(service, enable) -->
    <operation name="serviceSetNotificationsOnFlapping">
      <documentation>Enable or disable notifications when service is flappy.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetNotificationsOnRecovery(service, enable) -->
    <operation name="serviceSetNotificationsOnRecovery">
      <documentation>Enable or disable notifications when service recovers.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetNotificationsOnUnknown(service, enable) -->
    <operation name="serviceSetNotificationsOnUnknown">
      <documentation>Enable or disable notifications when service is unknown.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetNotificationsOnWarning(service, enable) -->
    <operation name="serviceSetNotificationsOnWarning">
      <documentation>Enable or disable notifications when service is warning.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetNotificationsPeriod(service, period) -->
    <operation name="serviceSetNotificationsPeriod">
      <documentation>Set notification period of service.</documentation>
      <input message="tns:serviceTimeperiodRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Obsession.
     -->

    <!-- serviceGetObsessOver(service) -->
    <operation name="serviceGetObsessOver">
      <documentation>Check whether or not service is being obsessed over.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceSetObsessOver(service, enable) -->
    <operation name="serviceSetObsessOver">
      <documentation>Enable or disable service obsession.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Perfdata.
     -->

    <!-- serviceGetPerfdataProcessingEnabled(service) -->
    <operation name="serviceGetPerfdataProcessingEnabled">
      <documentation>Check if perfdata processing is enabled on service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceSetPerfdataProcessingEnabled(service, enable) -->
    <operation name="serviceSetPerfdataProcessingEnabled">
      <documentation>Enable or disable perfdata processing.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Plugin.
     -->

    <!-- serviceGetPluginExecutionTime(service) -->
    <operation name="serviceGetPluginExecutionTime">
      <documentation>Get the last execution time of the plugin.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedIntResponse"/>
    </operation>

    <!-- serviceGetPluginIsExecuting(service) -->
    <operation name="serviceGetPluginIsExecuting">
      <documentation>Check if service check if currently executing.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetPluginLatency(service) -->
    <operation name="serviceGetPluginLatency">
      <documentation>Get the service latency.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:doubleResponse"/>
    </operation>

    <!-- serviceGetPluginOutput(service) -->
    <operation name="serviceGetPluginOutput">
      <documentation>Get the plugin output.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- serviceGetPluginPerfdata(service) -->
    <operation name="serviceGetPluginPerfdata">
      <documentation>Get the plugin perfdata.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!--
	 Retention.
     -->

    <!-- serviceGetRetainStatusInformation(service) -->
    <operation name="serviceGetRetainStatusInformation">
      <documentation>Check if service status information are retained.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetRetainNonStatusInformation(service) -->
    <operation name="serviceGetRetainNonStatusInformation">
      <documentation>Check if service non status information are retained.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceSetRetainStatusInformation(service, enable) -->
    <operation name="serviceSetRetainStatusInformation">
      <documentation>Enable or disable status information retention on service.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetRetainNonStatusInformation(service, enable) -->
    <operation name="serviceSetRetainNonStatusInformation">
      <documentation>Enable or disable non status information retention on service.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Stalking.
     -->

    <!-- serviceGetStalkOnCritical(service) -->
    <operation name="serviceGetStalkOnCritical">
      <documentation>Check if stalking on critical is enabled on service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetStalkOnOk(service) -->
    <operation name="serviceGetStalkOnOk">
      <documentation>Check if stalking on ok is enabled on service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetStalkOnUnknown(service) -->
    <operation name="serviceGetStalkOnUnknown">
      <documentation>Check if stalking on unknown is enabled on service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceGetStalkOnWarning(service) -->
    <operation name="serviceGetStalkOnWarning">
      <documentation>Check if stalking on warning is enabled on service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- serviceSetStalkOnCritical(service, enable) -->
    <operation name="serviceSetStalkOnCritical">
      <documentation>Enable or disable stalking on critical.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetStalkOnOk(service, enable) -->
    <operation name="serviceSetStalkOnOk">
      <documentation>Enable or disable stalking on ok.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetStalkOnUnknown(service, enable) -->
    <operation name="serviceSetStalkOnUnknown">
      <documentation>Enable or disable stalking on unknown.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- serviceSetStalkOnWarning(service, enable) -->
    <operation name="serviceSetStalkOnWarning">
      <documentation>Enable or disable stalking on warning.</documentation>
      <input message="tns:serviceBooleanRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 State.
     -->

    <!-- serviceGetStateCurrent(service) -->
    <operation name="serviceGetStateCurrent">
      <documentation>Get the current state of the state.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedShortResponse"/>
    </operation>

    <!-- serviceGetStateInitial(service) -->
    <operation name="serviceGetStateInitial">
      <documentation>Get the initial state of the service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedShortResponse"/>
    </operation>

    <!-- serviceGetStateLast(service) -->
    <operation name="serviceGetStateLast">
      <documentation>Get the last service state.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:unsignedShortResponse"/>
    </operation>

    <!-- serviceGetStateLastChange(service) -->
    <operation name="serviceGetStateLastChange">
      <documentation>Get the last time the state changed.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- serviceGetStateLastCritical(service) -->
    <operation name="serviceGetStateLastCritical">
      <documentation>Get the last time the service was in a critical state.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- serviceGetStateLastHard(service) -->
    <operation name="serviceGetStateLastHard">
      <documentation>Get the service last hard state.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- serviceGetStateLastHardChange(service) -->
    <operation name="serviceGetStateLastHardChange">
      <documentation>Get the last time at which the hard state changed.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- serviceGetStateLastOk(service) -->
    <operation name="serviceGetStateLastOk">
      <documentation>Get the last time the service was in an ok state.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- serviceGetStateLastUnknown(service) -->
    <operation name="serviceGetStateLastUnknown">
      <documentation>Get the last time the service was in an unknown state.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- serviceGetStateLastWarning(service) -->
    <operation name="serviceGetStateLastWarning">
      <documentation>Get the last time the service was in a warning state.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- serviceGetStatePercentChange(service) -->
    <operation name="serviceGetStatePercentChange">
      <documentation>Get the percent state change of the service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- serviceGetStateType(service) -->
    <operation name="serviceGetStateType">
      <documentation>Get state type (hard or soft).</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:dateResponse"/>
    </operation>


    <!--
	                    
	 Acknowledgements.  
	                    
     -->

    <!--
	 Host.
     -->

    <!-- acknowledgementOnHostAdd(host, acknowledgement) -->
    <operation name="acknowledgementOnHostAdd">
      <documentation>Acknowledge a problem on a host.</documentation>
      <input message="tns:acknowledgementOnHostAddRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- acknowledgementOnHostRemove(host) -->
    <operation name="acknowledgementOnHostRemove">
      <documentation>Remove an acknowledgement on a host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 Service.
     -->

    <!-- acknowledgementOnServiceAdd(service, acknowledgement) -->
    <operation name="acknowledgementOnServiceAdd">
      <documentation>Acknowledge a problem on a service.</documentation>
      <input message="tns:acknowledgementOnServiceAddRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- acknowledgementOnServiceRemove(service) -->
    <operation name="acknowledgementOnServiceRemove">
      <documentation>Remove an acknowledgement on a service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>


    <!--
	          
	 Checks.  
	          
     -->

    <!-- checkHostProcessResult(host, result) -->
    <operation name="checkHostProcessResult">
      <documentation>Process a host check result.</documentation>
      <input message="tns:checkHostRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- checkHostSchedule(host, when) -->
    <operation name="checkHostSchedule">
      <documentation>Schedule a host check.</documentation>
      <input message="tns:hostDateRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- checkHostScheduleForced(host, when) -->
    <operation name="checkHostScheduleForced">
      <documentation>Schedule a forced host check.</documentation>
      <input message="tns:hostDateRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- checkHostScheduleServices(host, when) -->
    <operation name="checkHostScheduleServices">
      <documentation>Schedule a check of all services associated with the host.</documentation>
      <input message="tns:hostDateRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- checkHostScheduleServicesForced(host, when) -->
    <operation name="checkHostScheduleServicesForced">
      <documentation>Schedule a forced check of all services associated with the host.</documentation>
      <input message="tns:hostDateRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- checkServiceProcessResult(service, result) -->
    <operation name="checkServiceProcessResult">
      <documentation>Process a service check result.</documentation>
      <input message="tns:checkServiceRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- checkServiceSchedule(service, when) -->
    <operation name="checkServiceSchedule">
      <documentation>Schedule a service check.</documentation>
      <input message="tns:serviceDateRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- checkServiceScheduleForced(service, when) -->
    <operation name="checkServiceScheduleForced">
      <documentation>Schedule a forced service check.</documentation>
      <input message="tns:serviceDateRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>


    <!--

	 Comments.

     -->

    <!--
	 Addition.
     -->

    <!-- commentAddToHost(host, comment) -->
    <operation name="commentAddToHost">
      <documentation>Add a comment to a host.</documentation>
      <input message="tns:commentHostRequest"/>
      <output message="tns:commentResponse"/>
    </operation>

    <!-- commentAddToService(service, comment) -->
    <operation name="commentAddToService">
      <documentation>Add a comment to a service.</documentation>
      <input message="tns:commentServiceRequest"/>
      <output message="tns:commentResponse"/>
    </operation>

    <!--
	 Deletion.
     -->

    <!-- commentDelete(comment) -->
    <operation name="commentDelete">
      <documentation>Delete a comment.</documentation>
      <input message="tns:commentRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- commentDeleteAllOfHost(host) -->
    <operation name="commentDeleteAllOfHost">
      <documentation>Delete all comments of a host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- commentDeleteAllOfService(service) -->
    <operation name="commentDeleteAllOfService">
      <documentation>Delete all comments of a service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>


    <!--
	             
	 Downtimes.  
	             
     -->

    <!--
	 Properties.
     -->

    <!-- downtimeGetAuthor(downtime) -->
    <operation name="downtimeGetAuthor">
      <documentation>Get the author of a downtime.</documentation>
      <input message="tns:downtimeRequest"/>
      <output message="tns:stringResponse"/>
    </operation>

    <!-- downtimeGetComment(downtime) -->
    <!-- XXX -->

    <!-- downtimeGetDuration(downtime) -->
    <operation name="downtimeGetDuration">
      <documentation>Get the duration of a downtime.</documentation>
      <input message="tns:downtimeRequest"/>
      <output message="tns:doubleResponse"/>
    </operation>

    <!-- downtimeGetEnd(downtime) -->
    <operation name="downtimeGetEnd">
      <documentation>Get the end time of a downtime.</documentation>
      <input message="tns:downtimeRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- downtimeGetFixed(downtime) -->
    <operation name="downtimeGetFixed">
      <documentation>Check if a downtime is fixed or not.</documentation>
      <input message="tns:downtimeRequest"/>
      <output message="tns:booleanResponse"/>
    </operation>

    <!-- downtimeGetStart(downtime) -->
    <operation name="downtimeGetStart">
      <documentation>Get the start time of a downtime.</documentation>
      <input message="tns:downtimeRequest"/>
      <output message="tns:dateResponse"/>
    </operation>

    <!-- downtimeGetTriggerID(downtime) -->
    <!-- XXX -->

    <!--
	 Deletion.
     -->

    <!-- downtimeDelete(downtime) -->
    <operation name="downtimeDelete">
      <documentation>Delete a downtime.</documentation>
      <input message="tns:downtimeRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 By host.
     -->

    <!-- downtimeAddToHost(host, downtime) -->
    <operation name="downtimeAddToHost">
      <documentation>Schedule a downtime on a host.</documentation>
      <input message="tns:downtimeHostRequest"/>
      <output message="tns:downtimeResponse"/>
    </operation>

    <!-- downtimeAddAndPropagateToHost(host, downtime) -->
    <operation name="downtimeAddAndPropagateToHost">
      <documentation>Schedule downtime for a host and all of its children.</documentation>
      <input message="tns:downtimeHostRequest"/>
      <output message="tns:downtimeResponse"/>
    </operation>

    <!-- downtimeAddAndPropagateTriggeredToHost(host, downtime) -->
    <operation name="downtimeAddAndPropagateTriggeredToHost">
      <documentation>Schedule downtime for a host and all of its children.</documentation>
      <input message="tns:downtimeHostRequest"/>
      <output message="tns:downtimeResponse"/>
    </operation>

    <!-- downtimeAddToHostServices(host, downtime) -->
    <operation name="downtimeAddToHostServices">
      <documentation>Schedule a downtime on all services of a host.</documentation>
      <input message="tns:downtimeHostRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 By service.
     -->

    <!-- downtimeAddToService(service, downtime) -->
    <operation name="downtimeAddToService">
      <documentation>Schedule a downtime on a service.</documentation>
      <input message="tns:downtimeServiceRequest"/>
      <output message="tns:downtimeResponse"/>
    </operation>


    <!--

         Host Group.

     -->

    <!-- hostgroupAdd(hostgroup) -->
    <operation name="hostgroupAdd">
      <documentation>Add new host group.</documentation>
      <input message="tns:hostgroupFullRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostgroupAddHost(hostgroup_id, host_id) -->
    <operation name="hostgroupAddHost">
      <documentation>Add a host to a host group.</documentation>
      <input message="tns:hostgroupHostRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostgroupAddHostgroup(hostgroup_id, hostgroup_id) -->
    <operation name="hostgroupAddHostgroup">
      <documentation>Add a host group to a host group.</documentation>
      <input message="tns:hostgroupHostgroupRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostgroupModify(hostgroup) -->
    <operation name="hostgroupModify">
      <documentation>Modify a host group.</documentation>
      <input message="tns:hostgroupFullRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostgroupRemove(hostgroup_id) -->
    <operation name="hostgroupRemove">
      <documentation>Remove a host group.</documentation>
      <input message="tns:hostgroupRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- hostgroupRemoveHost(hostgroup_id, host_id) -->
    <operation name="hostgroupRemoveHost">
      <documentation>Remove a host from a host group.</documentation>
      <input message="tns:hostgroupHostRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>


    <!--
	                 
	 Notifications.  
	                 
     -->

    <!--
	 By host.
     -->

    <!-- notificationHostDelay(host, until) -->
    <operation name="notificationHostDelay">
      <documentation>Delay a host notification.</documentation>
      <input message="tns:hostDateRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- notificationHostSend(host, notification) -->
    <operation name="notificationHostSend">
      <documentation>Send a notification on a host.</documentation>
      <input message="tns:notificationHostRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!--
	 By service.
     -->

    <!-- notificationServiceDelay(service, until) -->
    <operation name="notificationServiceDelay">
      <documentation>Delay a service notification.</documentation>
      <input message="tns:serviceDateRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- notificationServiceSend(service, notification) -->
    <operation name="notificationServiceSend">
      <documentation>Send a notification on a service.</documentation>
      <input message="tns:notificationServiceRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>


    <!--

         Service Group.

     -->

    <!-- servicegroupAdd(servicegroup) -->
    <operation name="servicegroupAdd">
      <documentation>Add new service group.</documentation>
      <input message="tns:servicegroupFullRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- servicegroupAddService(servicegroup_id, service_id) -->
    <operation name="servicegroupAddService">
      <documentation>Add a service to a service group.</documentation>
      <input message="tns:servicegroupServiceRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- servicegroupAddServicegroup(servicegroup_id, servicegroup_id) -->
    <operation name="servicegroupAddServicegroup">
      <documentation>Add a service group to a service group.</documentation>
      <input message="tns:servicegroupServicegroupRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- servicegroupModify(servicegroup) -->
    <operation name="servicegroupModify">
      <documentation>Modify a service group.</documentation>
      <input message="tns:servicegroupFullRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- servicegroupRemove(servicegroup_id) -->
    <operation name="servicegroupRemove">
      <documentation>Remove a service group.</documentation>
      <input message="tns:servicegroupRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>

    <!-- servicegroupRemoveService(servicegroup_id, service_id) -->
    <operation name="servicegroupRemoveService">
      <documentation>Remove a service from a service group.</documentation>
      <input message="tns:servicegroupServiceRequest"/>
      <output message="tns:defaultResponse"/>
    </operation>


    <!-- Not validated commands. -->

    <!-- flushPendingCommands() -->
    <!-- <operation name="flushPendingCommands"> -->
    <!--   <documentation>Discard commands already sent but not yet processed.</documentation> -->
    <!--   <input message="tns:emptyRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- scheduleHostgroupHostDowntime(string hostgroup, downtimeType downtime) -->
    <!-- <operation name="scheduleHostgroupHostDowntime"> -->
    <!--   <documentation>Schedule a downtime on all hosts of a host group.</documentation> -->
    <!--   <input message="tns:scheduleDowntimeRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- scheduleHostgroupServiceDowntime(string hostgroup, downtimeType downtime) -->
    <!-- <operation name="scheduleHostgroupServiceDowntime"> -->
    <!--   <documentation>Schedule a downtime on all services of the hosts of the host group.</documentation> -->
    <!--   <input message="tns:scheduleDowntimeRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- scheduleServicegroupHostDowntime(string servicegroup, downtimeType downtime) -->
    <!-- <operation name="scheduleServicegroupHostDowntime"> -->
    <!--   <documentation>Schedule a downtime on all hosts related to services members of the service group.</documentation> -->
    <!--   <input message="tns:scheduleDowntimeRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- scheduleServicegroupServiceDowntime(string servicegroup, downtimeType downtime) -->
    <!-- <operation name="scheduleServicegroupServiceDowntime"> -->
    <!--   <documentation>Schedule a downtime on all services of the service group.</documentation> -->
    <!--   <input message="tns:scheduleDowntimeRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setContactgroupHostNotificationsEnabled(string contactgroup) -->
    <!-- <operation name="setContactgroupHostNotificationsEnabled"> -->
    <!--   <documentation>Enable hosts notifications for each member of the contact group.</documentation> -->
    <!--   <input message="tns:contactgroupRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setContactgroupServiceNotificationsEnabled(string contactgroup) -->
    <!-- <operation name="setContactgroupServiceNotificationsEnabled"> -->
    <!--   <documentation>Enable services notifications for each member of the contact group.</documentation> -->
    <!--   <input message="tns:contactgroupRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setHostgroupHostActiveChecksEnabled(string hostgroup, bool enable) -->
    <!-- <operation name="setHostgroupHostActiveChecksEnabled"> -->
    <!--   <documentation>Enable or disable active checks of all hosts of the host group.</documentation> -->
    <!--   <input message="tns:hostgroupEnableRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setHostgroupHostNotificationsEnabled(string hostgroup, bool enable) -->
    <!-- <operation name="setHostgroupHostNotificationsEnabled"> -->
    <!--   <documentation>Enable or disable notifications on all hosts of the host group.</documentation> -->
    <!--   <input message="tns:hostgroupEnableRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setHostgroupHostPassiveChecksEnabled(string hostgroup, bool enable) -->
    <!-- <operation name="setHostgroupHostPassiveChecksEnabled"> -->
    <!--   <documentation>Enable or disable passive checks of all hosts of the host group.</documentation> -->
    <!--   <input message="tns:hostgroupEnableRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setHostgroupServiceActiveChecksEnabled(string hostgroup, bool enable) -->
    <!-- <operation name="setHostgroupServiceActiveChecksEnabled"> -->
    <!--   <documentation>Enable or disable active checks of all services of hosts of the host group.</documentation> -->
    <!--   <input message="tns:hostgroupEnableRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setHostgroupServiceNotificationsEnabled(string hostgroup, bool enable) -->
    <!-- <operation name="setHostgroupServiceNotificationsEnabled"> -->
    <!--   <documentation>Enable or disable notifications of all services of hosts of the host group.</documentation> -->
    <!--   <input message="tns:hostgroupEnableRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setHostgroupServicePassiveChecksEnabled(string hostgroup, bool enable) -->
    <!-- <operation name="setHostgroupServicePassiveChecksEnabled"> -->
    <!--   <documentation>Enable or disable passive checks of all services of hosts of the host group.</documentation> -->
    <!--   <input message="tns:hostgroupEnableRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setServicegroupHostActiveChecksEnabled(string servicegroup, bool enable) -->
    <!-- <operation name="setServicegroupHostActiveChecksEnabled"> -->
    <!--   <documentation>Enable or disable active checks of hosts of services of the service group.</documentation> -->
    <!--   <input message="tns:servicegroupEnableRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setServicegroupHostNotificationsEnabled(string servicegroup, bool enable) -->
    <!-- <operation name="setServicegroupHostNotificationsEnabled"> -->
    <!--   <documentation>Enable or disable notifications of hosts of services of the service group.</documentation> -->
    <!--   <input message="tns:servicegroupEnableRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setServicegroupHostPassiveChecksEnabled(string servicegroup, bool enable) -->
    <!-- <operation name="setServicegroupHostPassiveChecksEnabled"> -->
    <!--   <documentation>Enable or disable passive checks of hosts of services of the service group.</documentation> -->
    <!--   <input message="tns:servicegroupEnableRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setServicegroupServiceActiveChecksEnabled(string servicegroup, bool enable) -->
    <!-- <operation name="setServicegroupServiceActiveChecksEnabled"> -->
    <!--   <documentation>Enable or disable active checks of services of the service group.</documentation> -->
    <!--   <input message="tns:servicegroupEnableRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setServicegroupServiceNotificationsEnabled(string servicegroup, bool enable) -->
    <!-- <operation name="setServicegroupServiceNotificationsEnabled"> -->
    <!--   <documentation>Enable or disable notifications of services of the service group.</documentation> -->
    <!--   <input message="tns:servicegroupEnableRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

    <!-- setServicegroupServicePassiveChecksEnabled(string servicegroup, bool enable) -->
    <!-- <operation name="setServicegroupServicePassiveChecksEnabled"> -->
    <!--   <documentation>Enable or disable passive checks of services of the service group.</documentation> -->
    <!--   <input message="tns:servicegroupEnableRequest"/> -->
    <!--   <output message="tns:defaultResponse"/> -->
    <!-- </operation> -->

  </portType>

  <binding name="centreonengine" type="tns:commandPortType">
    <SOAP:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>

    <!--
	                     
	 Global operations.  
	                     
     -->

    <!--
	Configuration backup.
    -->

    <operation name="saveAllObjects">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="saveCommands">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="saveContacts">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="saveContactgroups">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="saveHosts">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="saveHostEscalations">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="saveHostDependencies">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="saveHostGroups">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="saveServices">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="saveServiceDependencies">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="saveServiceEscalations">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="saveServiceGroups">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="saveTimeperiods">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <!--
	Configuration modification.
    -->

    <operation name="updateResourceUser">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setCommandCheckInterval">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setCheckExternalCommands">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setUseAggressiveHostChecking">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setGlobalHostEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setGlobalServiceEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setSoftStateDependencies">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceFreshnessChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceFreshnessCheckInterval">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostFreshnessChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostFreshnessCheckInterval">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setAdditionalFreshnessLatency">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setLowServiceFlapThreshold">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHighServiceFlapThreshold">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setLowHostFlapThreshold">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHighHostFlapThreshold">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setLogNotifications">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setLogServiceRetries">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setLogHostRetries">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setLogEventHandlers">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setLogInitialState">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setLogExternalCommands">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setLogPassiveChecks">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceCheckTimeout">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostCheckTimeout">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setEventHandlerTimeout">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setNotificationTimeout">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setOcspTimeout">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setOchpTimeout">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setRetentionUpdateInterval">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setSleepTime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceInterleaveFactor">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setMaxConcurrentChecks">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setCheckResultReaperFrequency">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setUseLargeInstallationTweaks">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setDebugVerbosity">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setDebugLevel">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setMaxDebugFileSize">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <!--
	 Debug object operations.
    -->

    <!-- <operation name="dumpObjectList"> -->
    <!--   <SOAP:operation style="rpc" soapAction=""/> -->
    <!--   <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input> -->
    <!--   <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output> -->
    <!-- </operation> -->

    <!--
         Add object operations.
    -->

    <operation name="addHost">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="addService">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="addHostDependency">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="addHostEscalation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="addServiceDependency">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="addServiceEscalation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="addTimeperiod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <!--
         Remove object operations.
    -->

    <operation name="removeHost">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="removeService">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="removeServiceEscalation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="removeServiceDependency">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <!-- <operation name="removeTimeperiod"> -->
    <!--   <SOAP:operation style="rpc" soapAction=""/> -->
    <!--   <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input> -->
    <!--   <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output> -->
    <!-- </operation> -->

    <operation name="getEventHandlersEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getFailurePredictionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getFlapDetectionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getHostsChecksActiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getHostsChecksPassiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getHostsEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getHostsFreshnessChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getHostsObsessOverEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getPerfdataProcessingEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getServicesChecksActiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getServicesChecksPassiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getServicesEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getServicesFreshnessChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="getServicesObsessOverEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setEventHandlersEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setFailurePredictionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setFlapDetectionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostsChecksActiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostsChecksPassiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostsEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostsFreshnessChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostsObsessOverEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setPerfdataProcessingEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicesChecksActiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicesChecksPassiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicesEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicesFreshnessChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicesObsessOverEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="processRestart">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="processShutdown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="stateInformationLoad">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="stateInformationSave">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="processFile">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>


    <!--

         Command.

     -->

    <operation name="commandAdd">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="commandModify">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="commandRemove">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>


    <!--

	 Contacts.

     -->

    <operation name="contactAdd">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetAlias">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetCanSubmitCommands">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetEmail">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetModifiedAttributes">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetModifiedAttributesHost">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetModifiedAttributesService">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnHostCommand">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnHostDown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnHostDowntime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnHostEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnHostFlapping">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnHostLast">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnHostRecovery">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnHostTimeperiod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnHostUnreachable">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnServiceCommand">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnServiceCritical">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnServiceDowntime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnServiceEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnServiceFlapping">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnServiceLast">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnServiceRecovery">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnServiceTimeperiod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnServiceUnknown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetNotificationsOnServiceWarning">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetPager">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetRetainStatusInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactGetRetainStatusNonInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactModify">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactRemove">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetAlias">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetCanSubmitCommands">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetEmail">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnHostCommand">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnHostDown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnHostDowntime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnHostEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnHostFlapping">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnHostRecovery">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnHostTimeperiod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnHostUnreachable">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnServiceCommand">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnServiceCritical">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnServiceDowntime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnServiceEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnServiceFlapping">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnServiceRecovery">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnServiceTimeperiod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnServiceUnknown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetNotificationsOnServiceWarning">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetPager">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetRetainStatusInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactSetRetainStatusNonInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>


    <!--

         Contact group.

     -->

    <operation name="contactgroupAdd">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactgroupAddContact">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactgroupAddContactgroup">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactgroupModify">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactgroupRemove">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="contactgroupRemoveContact">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>


    <!--
	                   
	 Host properties.  
	                   
     -->

    <operation name="hostGetAcknowledgementIsSet">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetAcknowledgementType">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetAddress">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetAddress">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCheckActiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCheckCommand">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCheckCurrentAttempt">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCheckIntervalNormal">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCheckIntervalRetry">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCheckLast">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCheckMaxAttempts">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCheckNext">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCheckOptions">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCheckPassiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCheckPeriod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCheckShouldBeScheduled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCheckType">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetCheckActiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetCheckCommand">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetCheckIntervalNormal">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetCheckIntervalRetry">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetCheckMaxAttempts">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetCheckPassiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetCheckPeriod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCircularPathChecked">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetCircularPathHas">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <!-- <operation name="hostGetCustomVariable"> -->
    <!--   <SOAP:operation style="rpc" soapAction=""/> -->
    <!--   <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input> -->
    <!--   <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output> -->
    <!-- </operation> -->

    <operation name="hostGetDowntimeDepth">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetDowntimeFlexPending">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetEventHandlerEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetEventHandlerEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFailurePredictionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFailurePredictionOptions">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetFailurePredictionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFlapDetectionCommentID">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFlapDetectionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFlapDetectionIsFlapping">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFlapDetectionOnDown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFlapDetectionOnUnreachable">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFlapDetectionOnUp">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFlapDetectionStateHistoryLastUpdate">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFlapDetectionThresholdHigh">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFlapDetectionThresholdLow">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetFlapDetectionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetFlapDetectionOnDown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetFlapDetectionOnUnreachable">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetFlapDetectionOnUp">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetFlapDetectionThresholdHigh">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetFlapDetectionThresholdLow">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFreshnessCheckEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFreshnessIsActive">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetFreshnessThreshold">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetFreshnessCheckEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetFreshnessThreshold">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetModifiedAttributes">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNameAlias">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNameDisplay">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetNameAlias">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetNameDisplay">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNotificationsCurrentID">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNotificationsCurrentNumber">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNotificationsFirstDelay">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNotificationsInterval">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNotificationsLast">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNotificationsNext">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNotificationsOnDown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNotificationsOnDowntime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNotificationsOnFlapping">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNotificationsOnRecovery">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNotificationsOnUnreachable">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetNotificationsPeriod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetNotificationsBeyondEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetNotificationsFirstDelay">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetNotificationsInterval">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetNotificationsOnDown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetNotificationsOnDowntime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetNotificationsOnFlapping">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetNotificationsOnRecovery">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetNotificationsOnSelfAndChildrenEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetNotificationsOnUnreachable">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetNotificationsPeriod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetObsessOver">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetObsessOver">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetPerfdataProcessingEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetPerfdataProcessingEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetPluginExecutionTime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetPluginIsExecuting">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetPluginLatency">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetPluginOutput">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetPluginPerfdata">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetRetainStatusInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetRetainNonStatusInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetRetainStatusInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetRetainNonStatusInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetServicesCount">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetServicesTotalCheckInterval">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetServicesCheckActiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetServicesNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStalkOnDown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStalkOnUnreachable">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStalkOnUp">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetStalkOnDown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetStalkOnUnreachable">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostSetStalkOnUp">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStateCurrent">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStateInitial">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStateLast">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStateLastChange">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStateLastDown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStateLastHard">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStateLastHardChange">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStateLastUnreachable">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStateLastUp">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStatePercentChange">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostGetStateType">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>


    <!--
	                      
	 Service properties.  
	                      
     -->

    <operation name="serviceGetAcknowledgementIsSet">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetAcknowledgementType">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCheckActiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCheckCommand">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCheckCurrentAttempt">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCheckIntervalNormal">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCheckIntervalRetry">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCheckLast">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCheckMaxAttempts">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCheckNext">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCheckOptions">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCheckPassiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCheckPeriod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCheckShouldBeScheduled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCheckType">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetCheckActiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetCheckCommand">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetCheckIntervalNormal">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetCheckIntervalRetry">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetCheckMaxAttempts">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetCheckPassiveEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetCheckPeriod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetCustomVariable">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetDowntimeDepth">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetDowntimeFlexPending">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetEventHandlerEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetEventHandlerEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFailurePredictionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFailurePredictionOptions">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetFailurePredictionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFlapDetectionCommentID">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFlapDetectionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFlapDetectionIsFlapping">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFlapDetectionOnCritical">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFlapDetectionOnOk">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFlapDetectionOnUnknown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFlapDetectionOnWarning">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFlapDetectionThresholdHigh">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFlapDetectionThresholdLow">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetFlapDetectionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetFlapDetectionOnCritical">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetFlapDetectionOnOk">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetFlapDetectionOnUnknown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetFlapDetectionOnWarning">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetFlapDetectionThresholdHigh">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetFlapDetectionThresholdLow">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFreshnessCheckEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFreshnessIsActive">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetFreshnessThreshold">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetFreshnessCheckEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetFreshnessThreshold">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetModifiedAttributes">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNameDisplay">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetNameDisplay">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsCurrentID">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsCurrentNumber">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsFirstDelay">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsInterval">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsLast">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsNext">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsOnCritical">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsOnDowntime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsOnFlapping">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsOnRecovery">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsOnUnknown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsOnWarning">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetNotificationsPeriod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetNotificationsFirstDelay">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetNotificationsInterval">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetNotificationsOnCritical">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetNotificationsOnDowntime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetNotificationsOnFlapping">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetNotificationsOnRecovery">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetNotificationsOnUnknown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetNotificationsOnWarning">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetNotificationsPeriod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetObsessOver">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetObsessOver">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetPerfdataProcessingEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetPerfdataProcessingEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetPluginExecutionTime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetPluginIsExecuting">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetPluginLatency">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetPluginOutput">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetPluginPerfdata">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetRetainStatusInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetRetainNonStatusInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetRetainStatusInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetRetainNonStatusInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStalkOnCritical">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStalkOnOk">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStalkOnUnknown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStalkOnWarning">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetStalkOnCritical">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetStalkOnOk">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetStalkOnUnknown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceSetStalkOnWarning">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStateCurrent">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStateInitial">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStateLast">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStateLastChange">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStateLastCritical">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStateLastHard">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStateLastHardChange">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStateLastOk">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStateLastUnknown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStateLastWarning">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStatePercentChange">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="serviceGetStateType">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <!--
	                    
	 Acknowledgements.  
	                    
     -->

    <operation name="acknowledgementOnHostAdd">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="acknowledgementOnHostRemove">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="acknowledgementOnServiceAdd">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="acknowledgementOnServiceRemove">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <!--
	          
	 Checks.  
	          
     -->

    <operation name="checkHostProcessResult">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="checkHostSchedule">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="checkHostScheduleForced">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="checkHostScheduleServices">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="checkHostScheduleServicesForced">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="checkServiceProcessResult">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="checkServiceSchedule">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="checkServiceScheduleForced">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <!--

         Comments.

     -->

    <operation name="commentAddToHost">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="commentAddToService">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="commentDelete">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="commentDeleteAllOfHost">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="commentDeleteAllOfService">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>


    <!--
	             
	 Downtimes.  
	             
     -->

    <operation name="downtimeGetAuthor">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="downtimeGetDuration">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="downtimeGetEnd">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="downtimeGetFixed">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="downtimeGetStart">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="downtimeDelete">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="downtimeAddToHost">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="downtimeAddAndPropagateToHost">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="downtimeAddAndPropagateTriggeredToHost">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="downtimeAddToHostServices">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="downtimeAddToService">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <!--

         Host Group.

     -->

    <operation name="hostgroupAdd">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostgroupAddHost">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostgroupAddHostgroup">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostgroupModify">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostgroupRemove">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="hostgroupRemoveHost">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>


    <!--
	                 
	 Notifications.  
	                 
     -->

    <operation name="notificationHostDelay">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="notificationHostSend">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="notificationServiceDelay">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="notificationServiceSend">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>


    <!--

         Service Group.

     -->

    <operation name="servicegroupAdd">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="servicegroupAddService">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="servicegroupAddServicegroup">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="servicegroupModify">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="servicegroupRemove">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="servicegroupRemoveService">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>


    <!-- Not validated operations. -->
    <!-- XXX: todo.
    <operation name="deleteComment">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="deleteHostAllComments">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="deleteServiceAllComments">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="flushPendingCommands">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="newHostComment">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="newServiceComment">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="scheduleHostgroupHostDowntime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="scheduleHostgroupServiceDowntime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="scheduleServicegroupHostDowntime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="scheduleServicegroupServiceDowntime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setContactgroupHostNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setContactgroupServiceNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostgroupHostActiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostgroupHostNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostgroupHostPassiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostgroupServiceActiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostgroupServiceNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostgroupServicePassiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicegroupHostActiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicegroupHostNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicegroupHostPassiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicegroupServiceActiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicegroupServiceNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicegroupServicePassiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonengine" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>
    -->
  </binding>

  <service name="centreonengine">
    <documentation>Centreon Engine service definition</documentation>
    <port name="centreonengine" binding="tns:centreonengine">
      <SOAP:address location="http://www.centreon.com/engine/commands/"/>
    </port>
  </service>

</definitions>
