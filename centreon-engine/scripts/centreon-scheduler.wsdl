<?xml version="1.0" encoding="UTF-8"?>
<definitions name="CentreonSchedulerCommands"
             targetNamespace="http://www.centreon.com/scheduler/commands.wsdl"
             xmlns:tns="http://www.centreon.com/scheduler/commands.wsdl"
             xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
             xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns:ns="urn:centreonscheduler"
             xmlns:SOAP="http://schemas.xmlsoap.org/wsdl/soap/"
             xmlns:WSDL="http://schemas.xmlsoap.org/wsdl/"
             xmlns="http://schemas.xmlsoap.org/wsdl/">

  <types>
    <schema targetNamespace="urn:centreonscheduler"
            xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
            xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:ns="urn:centreonscheduler"
            xmlns="http://www.w3.org/2001/XMLSchema"
            elementFormDefault="unqualified"
            attributeFormDefault="unqualified">
      <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/>
    </schema>
  </types>

  <!-- Message to acknowledge a host problem. -->
  <message name="acknowledgeHostProblemRequest">
    <part name="host" type="xsd:string"/>
    <part name="author" type="xsd:string"/>
    <part name="comment" type="xsd:string"/>
    <part name="sticky" type="xsd:boolean"/>
    <part name="notify" type="xsd:boolean"/>
    <part name="persistent" type="xsd:boolean"/>
  </message>

  <!-- Message to acknowledge a service problem. -->
  <message name="acknowledgeServiceProblemRequest">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
    <part name="author" type="xsd:string"/>
    <part name="comment" type="xsd:string"/>
    <part name="sticky" type="xsd:boolean"/>
    <part name="notify" type="xsd:boolean"/>
    <part name="persistent" type="xsd:boolean"/>
  </message>

  <!-- Message sent when executing an operation on a contactgroup. -->
  <message name="contactgroupRequest">
    <part name="contactgroup" type="xsd:string"/>
  </message>

  <!-- Message sent when executing an operation on a contact. -->
  <message name="contactRequest">
    <part name="contact" type="xsd:string"/>
  </message>

  <!-- Message for operation with no arguments. -->
  <message name="emptyRequest"/>

  <!-- Message sent when setting a feature of a host group. -->
  <message name="hostgroupEnableRequest">
    <part name="hostgroup" type="xsd:string"/>
    <part name="enable" type="xsd:boolean"/>
  </message>

  <!-- Message sent when executing an operation on a host. -->
  <message name="hostRequest">
    <part name="host" type="xsd:string"/>
  </message>

  <!-- Message sent when changing a time on a host. -->
  <message name="hostTimeRequest">
    <part name="host" type="xsd:string"/>
    <part name="time" type="xsd:dateTime"/>
  </message>

  <!-- Message send when operating on an ID. -->
  <message name="IDRequest">
    <part name="id" type="xsd:long"/>
  </message>

  <!-- Message returned when a new comment has been created. -->
  <message name="newCommentResponse">
    <part name="errorCode" type="xsd:int"/>
    <part name="errorString" type="xsd:string"/>
    <part name="commentID" type="xsd:positiveInteger"/>
  </message>

  <!-- Message sent when creating a new host comment. -->
  <message name="newHostCommentRequest">
    <part name="host" type="xsd:string"/>
    <part name="comment" type="xsd:string"/>
    <part name="user" type="xsd:string"/>
    <part name="persistent" type="xsd:boolean"/>
  </message>

  <!-- Message sent when creating a new service comment. -->
  <message name="newServiceCommentRequest">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
    <part name="comment" type="xsd:string"/>
    <part name="user" type="xsd:string"/>
    <part name="persistent" type="xsd:boolean"/>
  </message>

  <!-- Message sent when processing a host check result. -->
  <message name="processHostCheckResultRequest">
    <part name="host" type="xsd:string"/>
    <part name="retval" type="xsd:int"/>
    <part name="output" type="xsd:string"/>
  </message>

  <!-- Message sent when processing a service check result. -->
  <message name="processServiceCheckResultRequest">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
    <part name="retval" type="xsd:int"/>
    <part name="output" type="xsd:string"/>
  </message>

  <!-- Message sent when setting a feature of a service group. -->
  <message name="servicegroupEnableRequest">
    <part name="servicegroup" type="xsd:string"/>
    <part name="enable" type="xsd:boolean"/>
  </message>

  <!-- Message sent when executing an operation on a service. -->
  <message name="serviceRequest">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
  </message>

  <!-- Message sent when changing a service time. -->
  <message name="serviceTimeRequest">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
    <part name="time" type="xsd:dateTime"/>
  </message>

  <!-- Message sent when changing a modified attribute value. -->
  <message name="setContactModattrRequest">
    <part name="contact" type="xsd:string"/>
    <part name="modattr" type="xsd:positiveInteger"/>
  </message>

  <!-- Message sent when changing a notification timeperiod of a contact. -->
  <message name="setContactNotificationTimeperiodRequest">
    <part name="contact" type="xsd:string"/>
    <part name="timeperiod" type="xsd:string"/>
  </message>

  <!-- Message sent when (re)setting a custom variable (except for service targets). -->
  <message name="setCustomVarRequest">
    <part name="target" type="xsd:string"/>
    <part name="varname" type="xsd:string"/>
    <part name="varvalue" type="xsd:string"/>
  </message>

  <!-- Message to enable or disable feature. -->
  <message name="setEnabledRequest">
    <part name="enable" type="xsd:boolean"/>
  </message>

  <!-- Message sent when (re)setting a global event handler. -->
  <message name="setEventHandlerRequest">
    <part name="command" type="xsd:string"/>
  </message>

  <!-- Message sent when changing a host check command. -->
  <message name="setHostCheckCommandRequest">
    <part name="host" type="xsd:string"/>
    <part name="command" type="xsd:string"/>
  </message>

  <!-- Message sent to enable a host feature. -->
  <message name="setHostEnabledRequest">
    <part name="host" type="xsd:string"/>
    <part name="enable" type="xsd:boolean"/>
  </message>

  <!-- Message sent when changing a host event handler. -->
  <message name="setHostEventHandlerRequest">
    <part name="host" type="xsd:string"/>
    <part name="eventhandler" type="xsd:string"/>
  </message>

  <!-- Message sent to change the max check attempt of a host. -->
  <message name="setHostMaxCheckAttemptsRequest">
    <part name="host" type="xsd:string"/>
    <part name="maxattempts" type="xsd:positiveInteger"/>
  </message>

  <!-- Message sent when changing the modified attributes value of a host. -->
  <message name="setHostModattrRequest">
    <part name="host" type="xsd:string"/>
    <part name="modattr" type="xsd:positiveInteger"/>
  </message>

  <!-- Message sent when changing a host timeperiod. -->
  <message name="setHostTimeperiodRequest">
    <part name="host" type="xsd:string"/>
    <part name="timeperiod" type="xsd:string"/>
  </message>

  <!-- Message sent when changing a service check command. -->
  <message name="setServiceCheckCommandRequest">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
    <part name="command" type="xsd:string"/>
  </message>

  <!-- Message sent when (re)setting a service custom variable. -->
  <message name="setServiceCustomVarRequest">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
    <part name="varname" type="xsd:string"/>
    <part name="varvalue" type="xsd:string"/>
  </message>

  <!-- Message sent to enable a service feature. -->
  <message name="setServiceEnabledRequest">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
    <part name="enable" type="xsd:boolean"/>
  </message>

  <!-- Message sent when changing a service event handler. -->
  <message name="setServiceEventHandlerRequest">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
    <part name="eventhandler" type="xsd:string"/>
  </message>

  <!-- Message sent when changing the max check attempts value of a service. -->
  <message name="setServiceMaxCheckAttemptsRequest">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
    <part name="maxattempts" type="xsd:positiveInteger"/>
  </message>

  <!-- Message sent when changing the modified attributes value of a service. -->
  <message name="setServiceModattrRequest">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
    <part name="modattr" type="xsd:positiveInteger"/>
  </message>

  <!-- Message sent when changing a service timeperiod. -->
  <message name="setServiceTimeperiodRequest">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
    <part name="timeperiod" type="xsd:string"/>
  </message>

  <!-- Standard response of operations. -->
  <message name="standardResponse">
    <part name="errorCode" type="xsd:int"/>
    <part name="errorString" type="xsd:string"/>
  </message>



  <message name="comment">
    <part name="id" type="xsd:positiveInteger"/>
  </message>

  <message name="host">
    <part name="host" type="xsd:string"/>
  </message>

  <message name="hostWhen">
    <part name="host" type="xsd:string"/>
    <part name="when" type="xsd:dateTime"/>
  </message>

  <message name="serviceWhen">
    <part name="host" type="xsd:string"/>
    <part name="service" type="xsd:string"/>
    <part name="when" type="xsd:dateTime"/>
  </message>

  <portType name="commandPortType">

    <!-- acknowledgeHostProblem(string host, string author, string comment, bool sticky, bool notify, bool persistent) -->
    <operation name="acknowledgeHostProblem">
      <documentation>Acknowledge a problem on a host.</documentation>
      <input message="tns:acknowledgeHostProblemRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- acknowledgeServiceProblem(string host, string service, string author, string comment, bool sticky, bool notify, bool persistent) -->
    <operation name="acknowledgeServiceProblem">
      <documentation>Acknowledge a problem on a service.</documentation>
      <input message="tns:acknowledgeServiceProblemRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- delayHostNotification(string host, time_t until) -->
    <operation name="delayHostNotification">
      <documentation>Delay a host notification.</documentation>
      <input message="tns:hostTimeRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- delayServiceNotification(string host, string service, time_t until) -->
    <operation name="delayServiceNotification">
      <documentation>Delay a service notification.</documentation>
      <input message="tns:serviceTimeRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- deleteComment(unsigned long commentid) -->
    <operation name="deleteComment">
      <documentation>Delete a comment.</documentation>
      <input message="tns:IDRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- deleteDowntime(unsigned long downtimeid) -->
    <operation name="deleteDowntime">
      <documentation>Delete a downtime.</documentation>
      <input message="tns:IDRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- deleteHostAllComments(string host) -->
    <operation name="deleteHostAllComments">
      <documentation>Delete all comments of a host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- deleteHostAcknowledgement(string host) -->
    <operation name="deleteHostAcknowledgement">
      <documentation>Remove an acknowledgement on a host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- deleteServiceAllComments(string host, string service) -->
    <operation name="deleteServiceAllComments">
      <documentation>Delete all comments of a service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- deleteServiceAcknowledgement(string host, string service) -->
    <operation name="deleteServiceAcknowledgement">
      <documentation>Remove an acknowledgement on a service.</documentation>
      <input message="tns:serviceRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- flushPendingCommands() -->
    <operation name="flushPendingCommands">
      <documentation>Discard commands already sent but not yet processed.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- newHostComment(string host, string comment, string user, bool persistent) -->
    <operation name="newHostComment">
      <documentation>Add a comment on a host.</documentation>
      <input message="tns:newHostCommentRequest"/>
      <output message="tns:newCommentResponse"/>
    </operation>

    <!-- newServiceComment(string host, string service, string comment, string user, bool persistent) -->
    <operation name="newServiceComment">
      <documentation>Add a comment on a service.</documentation>
      <input message="tns:newServiceCommentRequest"/>
      <output message="tns:newCommentResponse"/>
    </operation>

    <!-- processHostCheckResult(string host, int retval, string output) -->
    <operation name="processHostCheckResult">
      <documentation>Process a host check result.</documentation>
      <input message="tns:processHostCheckResultRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- processServiceCheckResult(string host, string service, int retval, string output) -->
    <operation name="processServiceCheckResult">
      <documentation>Process a service check result.</documentation>
      <input message="tns:processServiceCheckResultRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- readStateInformation() -->
    <operation name="readStateInformation">
      <documentation>Read state information.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- restart() -->
    <operation name="restart">
      <documentation>Restart Scheduler.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- saveStateInformation() -->
    <operation name="saveStateInformation">
      <documentation>Save state information.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleHostCheck(string host, time_t when) -->
    <operation name="scheduleHostCheck">
      <documentation>Schedule a host check.</documentation>
      <input message="tns:hostTimeRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleHostForcedCheck(string host, time_t when) -->
    <operation name="scheduleHostForcedCheck">
      <documentation>Schedule a forced host check.</documentation>
      <input message="tns:hostTimeRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleHostServiceChecks(string host, time_t when) -->
    <operation name="scheduleHostServiceChecks">
      <documentation>Schedule a check of all services associated with the host.</documentation>
      <input message="tns:hostTimeRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleHostServiceForcedChecks(string host, time_t when) -->
    <operation name="scheduleHostServiceForcedChecks">
      <documentation>Schedule a forced check of all services associated with the host.</documentation>
      <input message="tns:hostTimeRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleServiceCheck(string host, string service, time_t when) -->
    <operation name="scheduleServiceCheck">
      <documentation>Schedule a service check.</documentation>
      <input message="tns:serviceTimeRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleServiceForcedCheck(string host, string service, time_t when) -->
    <operation name="scheduleServiceForcedCheck">
      <documentation>Schedule a forced service check.</documentation>
      <input message="tns:serviceTimeRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setAllNotificationsBeyondHostEnabled(string host) -->
    <operation name="setAllNotificationsBeyondHostEnabled">
      <documentation>Enable or disable all notifications beyond a host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setContactCustomVar(string contact, string varname, string varvalue) -->
    <operation name="setContactCustomVar">
      <documentation>Set the value of a custom variable of a contact.</documentation>
      <input message="tns:setCustomVarRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setContactgroupHostNotificationsEnabled(string contactgroup) -->
    <operation name="setContactgroupHostNotificationsEnabled">
      <documentation>Enable hosts notifications for each member of the contact group.</documentation>
      <input message="tns:contactgroupRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setContactgroupServiceNotificationsEnabled(string contactgroup) -->
    <operation name="setContactgroupServiceNotificationsEnabled">
      <documentation>Enable services notifications for each member of the contact group.</documentation>
      <input message="tns:contactgroupRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setContactHostNotificationsEnabled(string contact) -->
    <operation name="setContactHostNotificationsEnabled">
      <documentation>Enable host notifications on a contact.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setContactHostNotificationTimeperiod(string contact, string timeperiod) -->
    <operation name="setContactHostNotificationTimeperiod">
      <documentation>Change the host notification timeperiod of a contact.</documentation>
      <input message="tns:setContactNotificationTimeperiodRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setContactModattr(string contact, unsigned int modattr) -->
    <operation name="setContactModattr">
      <documentation>Change the contact modified attributes value.</documentation>
      <input message="tns:setContactModattrRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setContactModhattr(string contact, unsigned int modattr) -->
    <operation name="setContactModhattr">
      <documentation>Change the contact modified host attributes value.</documentation>
      <input message="tns:setContactModattrRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setContactModsattr(string contact, unsigned int modattr) -->
    <operation name="setContactModsattr">
      <documentation>Change the contact modified service attributes value.</documentation>
      <input message="tns:setContactModattrRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setContactServiceNotificationsEnabled(string contact) -->
    <operation name="setContactServiceNotificationsEnabled">
      <documentation>Enable service notifications on a contact.</documentation>
      <input message="tns:contactRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setContactServiceNotificationTimeperiod(string contact, string timeperiod) -->
    <operation name="setContactServiceNotificationTimeperiod">
      <documentation>Change the service notification timeperiod of a contact.</documentation>
      <input message="tns:setContactNotificationTimeperiodRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setEventHandlersEnabled(bool enable) -->
    <operation name="setEventHandlersEnabled">
      <documentation>Enable or disable event handlers globally.</documentation>
      <input message="tns:setEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setFailurePredictionEnabled(bool enable) -->
    <operation name="setFailurePredictionEnabled">
      <documentation>Enable or disable failure prediction globally.</documentation>
      <input message="tns:setEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setFlapDetectionEnabled(bool enable) -->
    <operation name="setFlapDetectionEnabled">
      <documentation>Enable or disable flap detection globally.</documentation>
      <input message="tns:setEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostActiveChecksEnabled(string host, bool enable) -->
    <operation name="setHostActiveChecksEnabled">
      <documentation>Enable or disable active checks on a host.</documentation>
      <input message="tns:setHostEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostAndChildNotificationsEnabled(string host) -->
    <operation name="setHostAndChildNotificationsEnabled">
      <documentation>Enable notifications of a host and its children.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostCheckCommand(string host, string command) -->
    <operation name="setHostCheckCommand">
      <documentation>Change the host check command.</documentation>
      <input message="tns:setHostCheckCommandRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostCheckTimeperiod(string host, string timeperiod) -->
    <operation name="setHostCheckTimeperiod">
      <documentation>Change the check timeperiod of a host.</documentation>
      <input message="tns:setHostTimeperiodRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostCustomVar(string host, string varname, string varvalue) -->
    <operation name="setHostCustomVar">
      <documentation>Set the value of a custom variable of a host.</documentation>
      <input message="tns:setCustomVarRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostEventHandler(string host, string eventhandler) -->
    <operation name="setHostEventHandler">
      <documentation>Change the event handler of a host.</documentation>
      <input message="tns:setHostEventHandlerRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostEventHandlerEnabled(string host) -->
    <operation name="setHostEventHandlerEnabled">
      <documentation>Enable or disable event handler on a host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostFlapDetectionEnabled(string host) -->
    <operation name="setHostFlapDetectionEnabled">
      <documentation>Enable or disable flap detection on a host.</documentation>
      <input message="tns:hostRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostgroupHostActiveChecksEnabled(string hostgroup, bool enable) -->
    <operation name="setHostgroupHostActiveChecksEnabled">
      <documentation>Enable or disable active checks of all hosts of the host group.</documentation>
      <input message="tns:hostgroupEnableRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostgroupHostNotificationsEnabled(string hostgroup, bool enable) -->
    <operation name="setHostgroupHostNotificationsEnabled">
      <documentation>Enable or disable notifications on all hosts of the host group.</documentation>
      <input message="tns:hostgroupEnableRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostgroupHostPassiveChecksEnabled(string hostgroup, bool enable) -->
    <operation name="setHostgroupHostPassiveChecksEnabled">
      <documentation>Enable or disable passive checks of all hosts of the host group.</documentation>
      <input message="tns:hostgroupEnableRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostgroupServiceActiveChecksEnabled(string hostgroup, bool enable) -->
    <operation name="setHostgroupServiceActiveChecksEnabled">
      <documentation>Enable or disable active checks of all services of hosts of the host group.</documentation>
      <input message="tns:hostgroupEnableRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostgroupServiceNotificationsEnabled(string hostgroup, bool enable) -->
    <operation name="setHostgroupServiceNotificationsEnabled">
      <documentation>Enable or disable notifications of all services of hosts of the host group.</documentation>
      <input message="tns:hostgroupEnableRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostgroupServicePassiveChecksEnabled(string hostgroup, bool enable) -->
    <operation name="setHostgroupServicePassiveChecksEnabled">
      <documentation>Enable or disable passive checks of all services of hosts of the host group.</documentation>
      <input message="tns:hostgroupEnableRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostMaxCheckAttempts(string host, unsigned int maxattempts) -->
    <operation name="setHostMaxCheckAttempts">
      <documentation>Change the max check attempt value of a host.</documentation>
      <input message="tns:setHostMaxCheckAttemptsRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostModattr(string host, unsigned int modattr) -->
    <operation name="setHostModattr">
      <documentation>Change the host modified attributes value.</documentation>
      <input message="tns:setHostModattrRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostNormalCheckInterval(string host, time_t interval) -->
    <operation name="setHostNormalCheckInterval">
      <documentation>Change the normal check interval of a host.</documentation>
      <input message="tns:hostTimeRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostNotificationsEnabled(string host, bool enable) -->
    <operation name="setHostNotificationsEnabled">
      <documentation>Enable or disable notifications of a host.</documentation>
      <input message="tns:setHostEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostNotificationTimeperiod(string host, string timeperiod) -->
    <operation name="setHostNotificationTimeperiod">
      <documentation>Change the host notification timeperiod.</documentation>
      <input message="tns:setHostTimeperiodRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostObsessOver(string host, bool enable) -->
    <operation name="setHostObsessOver">
      <documentation>Start or stop obsessing over a host.</documentation>
      <input message="tns:setHostEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostPassiveChecksEnabled(string host, bool enable) -->
    <operation name="setHostPassiveChecksEnabled">
      <documentation>Enable or disable passive checks on a host.</documentation>
      <input message="tns:setHostEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostRetryCheckInterval(string host, time_t interval) -->
    <operation name="setHostRetryCheckInterval">
      <documentation>Change the retry check interval of a host.</documentation>
      <input message="tns:hostTimeRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostsActiveChecksEnabled(bool enable) -->
    <operation name="setHostsActiveChecksEnabled">
      <documentation>Enable or disable active host checks globally.</documentation>
      <input message="tns:setEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostServicesActiveChecksEnabled(string host, bool enable) -->
    <operation name="setHostServicesActiveChecksEnabled">
      <documentation>Enable all active checks of all services of a host.</documentation>
      <input message="tns:setHostEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostServicesNotificationsEnabled(string host, bool enable) -->
    <operation name="setHostServicesNotificationsEnabled">
      <documentation>Enable or disable notifications on all services of a host.</documentation>
      <input message="tns:setHostEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostsEventHandler(string command) -->
    <operation name="setHostsEventHandler">
      <documentation>Change the global host event handler.</documentation>
      <input message="tns:setEventHandlerRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostsFreshnessChecksEnabled(bool enable) -->
    <operation name="setHostsFreshnessChecksEnabled">
      <documentation>Enable or disable host freshness checks globally.</documentation>
      <input message="tns:setEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostsPassiveChecksEnabled(bool enable) -->
    <operation name="setHostsPassiveChecksEnabled">
      <documentation>Enable or disable passive host checks globally.</documentation>
      <input message="tns:setEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setNotificationsEnabled(bool enable) -->
    <operation name="setNotificationsEnabled">
      <documentation>Enable or disable notifications globally.</documentation>
      <input message="tns:setEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setObsessOverHostsEnabled(bool enable) -->
    <operation name="setObsessOverHostsEnabled">
      <documentation>Enable or disable obsession over host checks.</documentation>
      <input message="tns:setEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setObsessOverServicesEnabled(bool enable) -->
    <operation name="setObsessOverServicesEnabled">
      <documentation>Enable or disable obsession over service checks.</documentation>
      <input message="tns:setEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setPerformanceDataEnabled(bool enable) -->
    <operation name="setPerformanceDataEnabled">
      <documentation>Enable or disable performance data processing globally.</documentation>
      <input message="tns:setEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceActiveChecksEnabled(string host, string service, bool enable) -->
    <operation name="setServiceActiveChecksEnabled">
      <documentation>Enable or disable active checks of a service.</documentation>
      <input message="tns:setServiceEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceCheckCommand(string host, string service, string command) -->
    <operation name="setServiceCheckCommand">
      <documentation>Change the service check command.</documentation>
      <input message="tns:setServiceCheckCommandRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceCheckTimeperiod(string host, string service, string timeperiod) -->
    <operation name="setServiceCheckTimeperiod">
      <documentation>Change the check timeperiod of a service.</documentation>
      <input message="tns:setServiceTimeperiodRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceCustomVar(string host, string service, string varname, string varvalue) -->
    <operation name="setServiceCustomVar">
      <documentation>Set the value of a custom variable of a service.</documentation>
      <input message="tns:setServiceCustomVarRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceEventHandler(string host, string service, string eventhandler) -->
    <operation name="setServiceEventHandler">
      <documentation>Change the event handler of a service.</documentation>
      <input message="tns:setServiceEventHandlerRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceEventHandlerEnabled(string host, string service, bool enable) -->
    <operation name="setServiceEventHandlerEnabled">
      <documentation>Enable or disable the event handler of a service.</documentation>
      <input message="tns:setServiceEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!--setServiceFlapDetectionEnabled(string host, string service, bool enable) -->
    <operation name="setServiceFlapDetectionEnabled">
      <documentation>Enable or disable flap detection on a service.</documentation>
      <input message="tns:setServiceEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServicegroupHostActiveChecksEnabled(string servicegroup, bool enable) -->
    <operation name="setServicegroupHostActiveChecksEnabled">
      <documentation>Enable or disable active checks of hosts of services of the service group.</documentation>
      <input message="tns:servicegroupEnableRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServicegroupHostNotificationsEnabled(string servicegroup, bool enable) -->
    <operation name="setServicegroupHostNotificationsEnabled">
      <documentation>Enable or disable notifications of hosts of services of the service group.</documentation>
      <input message="tns:servicegroupEnableRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServicegroupHostPassiveChecksEnabled(string servicegroup, bool enable) -->
    <operation name="setServicegroupHostPassiveChecksEnabled">
      <documentation>Enable or disable passive checks of hosts of services of the service group.</documentation>
      <input message="tns:servicegroupEnableRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServicegroupServiceActiveChecksEnabled(string servicegroup, bool enable) -->
    <operation name="setServicegroupServiceActiveChecksEnabled">
      <documentation>Enable or disable active checks of services of the service group.</documentation>
      <input message="tns:servicegroupEnableRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServicegroupServiceNotificationsEnabled(string servicegroup, bool enable) -->
    <operation name="setServicegroupServiceNotificationsEnabled">
      <documentation>Enable or disable notifications of services of the service group.</documentation>
      <input message="tns:servicegroupEnableRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServicegroupServicePassiveChecksEnabled(string servicegroup, bool enable) -->
    <operation name="setServicegroupServicePassiveChecksEnabled">
      <documentation>Enable or disable passive checks of services of the service group.</documentation>
      <input message="tns:servicegroupEnableRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceMaxCheckAttempts(string host, string service, unsigned int maxattempts) -->
    <operation name="setServiceMaxCheckAttempts">
      <documentation>Set the maximum attempts of a service check.</documentation>
      <input message="tns:setServiceMaxCheckAttemptsRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceModattr(string host, string service, unsigned int modattr) -->
    <operation name="setServiceModattr">
      <documentation>Change the service modified attributes value.</documentation>
      <input message="tns:setServiceModattrRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceNormalCheckInterval(string host, string service, time_t interval) -->
    <operation name="setServiceNormalCheckInterval">
      <documentation>Change the normal check interval of a service.</documentation>
      <input message="tns:serviceTimeRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceNotificationsEnabled(string host, string service, bool enable) -->
    <operation name="setServiceNotificationsEnabled">
      <documentation>Enable or disable notifications of a service.</documentation>
      <input message="tns:setServiceEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceNotificationTimeperiod(string host, string service, string timeperiod) -->
    <operation name="setServiceNotificationTimeperiod">
      <documentation>Change the service notification timeperiod.</documentation>
      <input message="tns:setServiceTimeperiodRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceObsessOver(string host, string service, bool enable) -->
    <operation name="setServiceObsessOver">
      <documentation>Start or stop obsessing over a service.</documentation>
      <input message="tns:setServiceEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServicePassiveChecksEnabled(string host, string service, bool enable) -->
    <operation name="setServicePassiveChecksEnabled">
      <documentation>Enable or disable passive checks on a service.</documentation>
      <input message="tns:setServiceEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceRetryCheckInterval(string host, string service, time_t interval) -->
    <operation name="setServiceRetryCheckInterval">
      <documentation>Change the retry check interval of a service.</documentation>
      <input message="tns:serviceTimeRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServicesEventHandler(string command) -->
    <operation name="setServicesEventHandler">
      <documentation>Change the global service event handler.</documentation>
      <input message="tns:setEventHandlerRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServicesActiveChecksEnabled(bool enable) -->
    <operation name="setServicesActiveChecksEnabled">
      <documentation>Enable or disable active service checks globally.</documentation>
      <input message="tns:setEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServicesFreshnessChecksEnabled(bool enable) -->
    <operation name="setServicesFreshnessChecksEnabled">
      <documentation>Enable or disable service freshness checks globally.</documentation>
      <input message="tns:setEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServicesPassiveChecksEnabled(bool enable) -->
    <operation name="setServicesPassiveChecksEnabled">
      <documentation>Enable or disable passive service checks globally.</documentation>
      <input message="tns:setEnabledRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- shutdown() -->
    <operation name="shutdown">
      <documentation>Shutdown Scheduler.</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>






    <!-- scheduleAndPropagateHostDowntime(XXX) -->
    <operation name="scheduleAndPropagateHostDowntime">
      <documentation>XXX</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleAndPropagateTriggeredHostDowntime(XXX) -->
    <operation name="scheduleAndPropagateTriggeredHostDowntime">
      <documentation>XXX</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleHostDowntime(XXX) -->
    <operation name="scheduleHostDowntime">
      <documentation>XXX</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleHostgroupHostDowntime(XXX) -->
    <operation name="scheduleHostgroupHostDowntime">
      <documentation>XXX</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleHostgroupServiceDowntime(XXX) -->
    <operation name="scheduleHostgroupServiceDowntime">
      <documentation>XXX</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleHostServiceDowntime(XXX) -->
    <operation name="scheduleHostServiceDowntime">
      <documentation>XXX</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleServiceDowntime(XXX) -->
    <operation name="scheduleServiceDowntime">
      <documentation>XXX</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleServicegroupHostDowntime(XXX) -->
    <operation name="scheduleServicegroupHostDowntime">
      <documentation>XXX</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- scheduleServicegroupServiceDowntime(XXX) -->
    <operation name="scheduleServicegroupServiceDowntime">
      <documentation>XXX</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- sendHostCustomNotification(XXX) -->
    <operation name="sendHostCustomNotification">
      <documentation>XXX</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- sendServiceCustomNotification(XXX) -->
    <operation name="sendServiceCustomNotification">
      <documentation>XXX</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setHostNotificationNumber(XXX) -->
    <operation name="setHostNotificationNumber">
      <documentation>XXX</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

    <!-- setServiceNotificationNumber(XXX) -->
    <operation name="setServiceNotificationNumber">
      <documentation>XXX</documentation>
      <input message="tns:emptyRequest"/>
      <output message="tns:standardResponse"/>
    </operation>

  </portType>

  <binding name="centreonscheduler" type="tns:commandPortType">
    <SOAP:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>

    <operation name="acknowledgeHostProblem">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="acknowledgeServiceProblem">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="deleteComment">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="deleteDowntime">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="deleteHostAcknowledgement">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="deleteHostAllComments">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="deleteServiceAllComments">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="flushPendingCommands">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="newHostComment">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="newServiceComment">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="processHostCheckResult">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="processServiceCheckResult">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="readStateInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="restart">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="saveStateInformation">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="scheduleHostCheck">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="scheduleHostForcedCheck">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="scheduleHostServiceChecks">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="scheduleHostServiceForcedChecks">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="scheduleServiceCheck">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="scheduleServiceForcedCheck">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setAllNotificationsBeyondHostEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setContactCustomVar">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setContactgroupHostNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setContactgroupServiceNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setContactHostNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setContactHostNotificationTimeperiod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setContactModattr">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setContactModhattr">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setContactModsattr">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setContactServiceNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setContactServiceNotificationTimeperiod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setEventHandlersEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setFailurePredictionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setFlapDetectionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostActiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostAndChildNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostCheckCommand">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostCheckTimeperiod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostCustomVar">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostEventHandlerEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostFlapDetectionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostgroupHostActiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostgroupHostNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostgroupHostPassiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostgroupServiceActiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostgroupServiceNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostgroupServicePassiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostMaxCheckAttempts">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostModattr">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostNormalCheckInterval">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostNotificationTimeperiod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostObsessOver">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostRetryCheckInterval">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostsActiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostServicesActiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostServicesNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostsEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostsFreshnessChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setHostsPassiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setObsessOverHostsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setObsessOverServicesEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setPerformanceDataEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceActiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceCheckCommand">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceCheckTimeperiod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceCustomVar">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceEventHandlerEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceFlapDetectionEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicegroupHostActiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicegroupHostNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicegroupHostPassiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicegroupServiceActiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicegroupServiceNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicegroupServicePassiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceMaxCheckAttempts">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceModattr">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceNormalCheckInterval">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceNotificationsEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceNotificationTimeperiod">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceObsessOver">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicePassiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServiceRetryCheckInterval">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicesActiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicesEventHandler">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicesFreshnessChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="setServicesPassiveChecksEnabled">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

    <operation name="shutdown">
      <SOAP:operation style="rpc" soapAction=""/>
      <input><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></input>
      <output><SOAP:body use="encoded" namespace="urn:centreonscheduler" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/></output>
    </operation>

  </binding>

  <service name="centreonscheduler">
    <documentation>Centreon Scheduler service definition</documentation>
    <port name="centreonscheduler" binding="tns:centreonscheduler">
      <SOAP:address location="http://www.centreon.com/scheduler/commands/"/>
    </port>
  </service>

</definitions>
